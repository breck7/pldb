title Nim
appeared 2008
type pl
creators Andreas Rumpf
description Nim was called Nimrod until 2014. Nimrod is a relatively new programming language that is severely underrated in comparison to other new programming languages, with extensive metaprogramming support, generics and exception tracking built in, optional garbage collection, and rivals C in performance. And it can compile to C, C++, Objective-C, or JavaScript. Nimrod is a statically typed, imperative programming language that tries to give the programmer ultimate power without compromises on runtime efficiency. This means it focuses on compile-time mechanisms in all their various forms.
website https://nim-lang.org/
documentation https://nim-lang.org/documentation.html
reference https://irclogs.nim-lang.org/01-07-2012.html
aka nimrod
fileExtensions nim
domainName nim-lang.org
 registered 2014
 awisRank
  2022 428858
  2017 288984

compilesTo c cpp objective-c javascript
writtenIn nim

features
 hasComments true
 hasMacros true
  https://hookrace.net/blog/introduction-to-metaprogramming-in-nim/#macros
 hasSemanticIndentation true
 hasStaticTyping true
 hasLineComments true
  # A comment
 hasPrintDebugging true
 hasMultiLineComments true
  #[ A comment
  ]#
 hasAssignment true
 hasStrings true
  "Hello world"
 hasBooleans true
   let res = true
 hasGotos false
 hasUnicodeIdentifiers true
  let Î´ = 0.00001

lineCommentToken #
multiLineCommentTokens #[ ]#
printToken echo
assignmentToken =
stringToken "
booleanTokens true false on off

githubRepo https://github.com/nim-lang/Nim
 stars 13062
 forks 1318
 subscribers 304
 created 2010
 updated 2022
 firstCommit 2008
 description Nim is a statically typed compiled systems programming language. It combines successful concepts from mature languages like Python, Ada and Modula. Its design focuses on efficiency, expressiveness, and elegance (in that order of priority).
 issues 2287

wikipedia https://en.wikipedia.org/wiki/Nim_(programming_language)
 example
  proc printf(formatstr: cstring) {.header: "<stdio.h>", varargs.}
  
  printf("%s %d\n", "foo", 5)
 related ada modula-3 lisp object-pascal python oberon c javascript pascal delphi csharp go objective-c ios android git json opengl postgresql mysql sqlite lua scala d rust
 summary Nim (formerly named Nimrod) is an imperative, multi-paradigm, compiled programming language designed and developed by Andreas Rumpf. It is designed to be "efficient, expressive, and elegant", supporting metaprogramming, functional, message passing, procedural, and object-oriented programming styles by providing several features such as compile time code generation, algebraic data types, a foreign function interface (FFI) with C and compiling to JavaScript, C and C++.
 pageId 45413679
 dailyPageViews 176
 created 2015
 backlinksCount 69
 revisionCount 247
 appeared 2008
 fileExtensions nim

githubLanguage Nim
 fileExtensions nim nimcfg nimble nimrod nims
 trendingProjectsCount 0
 type programming
 filenames nim.cfg
 ace_mode text
 tm_scope source.nim
 repos 8018
githubBigQuery Nim
 repos 472
 users 299

linguistGrammarRepo https://github.com/Varriount/NimLime
 firstCommit 2013
 lastCommit 2018
 committerCount 28
 commitCount 303
 sampleCount 4
 example
  # from: https://github.com/nim-lang/Nim/blob/27b081d1f77604ee47c886e69dbc52f53ea3741f/compiler/nimfix/nimfix.nim.cfg
  
  # Special configuration file for the Nim project
  # gc:markAndSweep
  
  hint[XDeclaredButNotUsed]:off
  path:"$projectPath/.."
  
  path:"$lib/packages/docutils"
  path:"$nim"
  
  define:useStdoutAsStdmsg
  symbol:nimfix
  define:nimfix
  
  cs:partial
  #define:useNodeIds
  define:booting
  define:noDocgen
  
languageServerProtocolProject https://github.com/PMunch/nimlsp
 writtenIn nim

projectEuler Nim
 memberCount
  2019 10
  2022 36
helloWorldCollection Nim
 # Hello world in Nim
 
 echo "Hello World"
leachim6 Nim
 filepath n/Nim.nim
 fileExtensions nim
 example
  echo("Hello World")
  
rosettaCode Nim
quineRelay Nim

compilerExplorer Nim
 example
  # Type your code here, or load an example.
  proc square(num: int): int {.exportc.} =
    num * num
  
rijuRepl https://riju.codes/nim
 example
  echo "Hello, world!"
  
tryItOnline nim

tiobe Nim

packageRepository https://nimble.directory/

twitter https://twitter.com/nim_lang
ubuntuPackage nim
fileType text
isOpenSource true

isbndb 2
 year|publisher|title|authors|isbn13
 2022|Independently published | Mastering Nim |Rumpf, Andreas|979-8836539412
 2017|Manning Publications|Nim in Action|Picheta, Dominik|9781617293436
 2017|Manning|Nim in Action|Picheta, Dominik|9781638352297

semanticScholar 0
