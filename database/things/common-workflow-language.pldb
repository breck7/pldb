title CWL
appeared 2014
type pl
creators Luka Stojanovic
description The Common Workflow Language (CWL) is a specification for describing analysis workflows and tools in a way that makes them portable and scalable across a variety of software and hardware environments, from workstations to cluster, cloud, and high performance computing (HPC) environments. CWL is designed to meet the needs of data-intensive science, such as Bioinformatics, Medical Imaging, Astronomy, Physics, and Chemistry.
website https://www.commonwl.org/
reference https://doi.org/10.6084/m9.figshare.3115156.v2
country Various
originCommunity https://w3id.org/cwl/meeting_minutes
domainName commonwl.org
 registered 2015
 awisRank
  2022 1200759

features
 hasLineComments true
  # A comment
 hasComments true
  # A comment
 hasSemanticIndentation false

lineCommentToken #

githubRepo https://github.com/common-workflow-language/cwltool
 firstCommit 2014
 stars 284
 forks 193
 subscribers 48
 created 2015
 updated 2022
 description Common Workflow Language reference implementation
 issues 396

githubLanguage Common Workflow Language
 fileExtensions cwl
 trendingProjectsCount 0
 type programming
 interpreters cwl-runner
 ace_mode yaml
 codemirror_mode yaml
 codemirror_mime_type text/x-yaml
 tm_scope source.cwl
 aliases cwl
 repos 464
githubBigQuery Common Workflow Language
 repos 75
 users 57

linguistGrammarRepo https://github.com/manabuishii/language-cwl
 firstCommit 2017
 lastCommit 2018
 committerCount 5
 commitCount 41
 sampleCount 1
 example
  #!/usr/bin/env cwl-runner
  # Originally from
  # https://github.com/Duke-GCB/GGR-cwl/blob/54e897263a702ff1074c8ac814b4bf7205d140dd/utils/trunk-peak-score.cwl
  # Released under the MIT License:
  # https://github.com/Duke-GCB/GGR-cwl/blob/54e897263a702ff1074c8ac814b4bf7205d140dd/LICENSE
  # Converted to CWL v1.0 syntax using
  # https://github.com/common-workflow-language/cwl-upgrader
  # and polished by Michael R. Crusoe <mrc@commonwl.org>
  # All modifications also released under the MIT License
  cwlVersion: v1.0
  class: CommandLineTool
  doc: Trunk scores in ENCODE bed6+4 files
  
  hints:
    DockerRequirement:
      dockerPull: dukegcb/workflow-utils
  
  inputs:
    peaks:
      type: File
    sep:
      type: string
      default: \t
  
  outputs:
    trunked_scores_peaks:
      type: stdout
  
  baseCommand: awk
  
  arguments:
  - -F $(inputs.sep)
  - BEGIN{OFS=FS}$5>1000{$5=1000}{print}
  - $(inputs.peaks.path)
  
  stdout: $(inputs.peaks.nameroot).trunked_scores$(inputs.peaks.nameext)
  

twitter https://twitter.com/commonwl
fileType text
isOpenSource true
centralPackageRepositoryCount 0

isbndb 0
