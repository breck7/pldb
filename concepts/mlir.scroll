import ../code/conceptPage.scroll

id mlir
name mlir
appeared 2019
creators Chris Lattner
tags ir
website https://mlir.llvm.org/
paper https://ieeexplore.ieee.org/document/9370308
writtenIn markdown

repoStats
 firstCommit 2019
 commits 3349
 committers 91
 files 1
 newestCommit 2021
country Various
originCommunity https://github.com/tensorflow
reference https://blog.tensorflow.org/2019/04/mlir-new-intermediate-representation.html

example
 // Syntactically similar to LLVM:
 func @testFunction(%arg0: i32) {
   %x = call @thingToCall(%arg0) : (i32) -> i32
   br ^bb1
 ^bb1:
   %y = addi %x, %x : i32
   return %y : i32
 }
compilerExplorer MLIR
 example
  // Example code of an affine reduction.
  // MLIR example code may not always work out of the box because the textual MLIR format is not stable.
  // The example tries to be compatible with the latest MLIR version, which may not work on previous versions.
  
  func @affine_parallel_with_reductions_i64(%arg0: memref<3x3xi64>, %arg1: memref<3x3xi64>) -> (i64, i64) {
    %0:2 = affine.parallel (%kx, %ky) = (0, 0) to (2, 2) reduce ("addi", "muli") -> (i64, i64) {
              %1 = affine.load %arg0[%kx, %ky] : memref<3x3xi64>
              %2 = affine.load %arg1[%kx, %ky] : memref<3x3xi64>
              %3 = arith.muli %1, %2 : i64
              %4 = arith.addi %1, %2 : i64
              affine.yield %3, %4 : i64, i64
            }
    return %0#0, %0#1 : i64, i64
  }
  

githubRepo https://github.com/tensorflow/mlir
 firstCommit 2019
 stars 1728
 forks 257
 subscribers 168
 created 2019
 updated 2024
 description "Multi-Level Intermediate Representation" Compiler Infrastructure
 issues 57

lineCommentToken //

hasLineComments true
 // A comment
hasComments true
 // A comment
hasSemanticIndentation false

domainName mlir.llvm.org

githubBigQuery MLIR
 repos 30
 users 27

githubLanguage MLIR
 type programming
 fileExtensions mlir
 aceMode text
 tmScope source.mlir
 repos 84
