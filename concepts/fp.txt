FP
==

FP, aka Functional Programming, is a programming language created in 1977 by John Backus.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221977%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=John%20Backus

#1121 on PLDB
47 Years Old

FP (short for function programming) is a programming language created by John Backus to support the function-level programming paradigm. This allows eliminating named variables. The language was introduced in Backus's 1977 Turing Award lecture, "Can Programming Be Liberated from the von Neumann Style?", subtitled "a functional style and its algebra of programs." The paper sparked interest in functional programming research, eventually leading to modern functional languages, and not the function-level paradigm Backus had hoped. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/FP_(programming_language)

- FP Wikipedia page
 https://en.wikipedia.org/wiki/FP_(programming_language)
- FP first developed in IBM
- Explore FP snippets on Rosetta Code
- FP on HOPL
 https://hopl.info/showlanguage.prx?exp=759
- See also: (4 related languages)APL, FL, Haskell, J

insert-left  \f       where   \f:〈x〉             =  x
                      and     \f:〈x1,x2,...,xn〉  =  f:〈\f:〈x1,...,xn-1〉,xn〉
                      and     \f:〈 〉             =  unit f
