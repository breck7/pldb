Crema
=====

Crema is a programming language created in 2014 by Jacob Torrey and Jared Wright.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222014%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Jacob%20Torrey
 https://pldb.io/concepts/../lists/creators.html#q=Jared%20Wright

#1347 on PLDB
10 Years Old

git clone https://github.com/ainfosec/crema

Crema: A Sub-Turing Programming Language

- Crema website
 https://github.com/ainfosec/crema/wiki
- Crema is developed on GitHub and has 64 stars
- Crema first developed in Assured Information Security, Inc.
- Crema is written in C++, Bourne shell, C, Yacc, Lex, Make, Markdown

def int binarySearch(int values[], int searchTarget){
    int upperBound = list_length(values) - 1    # Upper index of seach region
    int lowerBound = 0                       # Lower index of seach region
    int delta = list_length(values)     # Distance between upperBound and lowerBound
    int middleValueIndex = 0    # Mid-point index between upper and lower bounds
    int middleValue = 0         # Value at the mid-point index
    int foundIndex = -1         # The index of the target number after finding

    foreach(values as value){
        # Check middle value to see if it matches target number
        middleValueIndex = ((upperBound + lowerBound) / 2)
        middleValue = values[middleValueIndex]
        if(middleValue == searchTarget){
            foundIndex = middleValueIndex
            break
        }

        #Re-adjust the lower and upper bounds for next itteration
        if(middleValue &gt;= searchTarget){
            upperBound = middleValueIndex - 1
        }else{
            lowerBound = middleValueIndex + 1
        }
        delta = upperBound - lowerBound
    }
    return foundIndex
}

as bool break char def double else eq extern false foreach ge gt if int le lt neq return sdef string struct true uint void
