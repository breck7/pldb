gazetteCss

F*
==

F* is an open source programming language created in 2014.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222014%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2014

#125 on PLDB
10 Years Old
250 Repos

git clone https://github.com/FStarLang/FStar

F* (pronounced F star) is a functional programming language inspired by ML and aimed at program verification. Its type system includes dependent types, monadic effects, and refinement types. This allows expressing precise specifications for programs, including functional correctness and security properties. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/F*_(programming_language) Read more on Wikipedia...

- Tags: programming language
- F* is developed on GitHub and has 2,659 stars
- There are at least 250 F* repos on GitHub
- Early development of F* happened in Microsoft
- F* is written in OCaml, Make, Bourne shell, Markdown, F#, Python, C, Dockerfile, JSON, XML, Assembly language, Nix, YAML, Bash, Clojure, Coq, SVG, Haskell, CSV, Lisp
- The  Google BigQuery Public Dataset GitHub snapshot shows 28 users using F* in 31 repos on GitHub
- Pygments supports syntax highlighting for F*
- GitHub supports syntax highlighting for F*
- fstar-lang.org was registered in 2014
- See also: (7 related languages) Linux, F#, OCaml, Standard ML, ML, C, JavaScript
- 2 PLDB concepts link to F*: Low*, Vale

module Hello

let main = FStar.IO.print_string &quot;Hello World\n&quot;

abstract attributes noeq unopteq andbegin by default effect else end ensures exception exists false forall fun function if in include inline inline_for_extraction irreducible logic match module mutable new new_effect noextract of open opaque private range_of reifiable reify reflectable requires set_range_of sub_effect synth then total true try type unfold unfoldable val when with not

Language features
======================================================

row
 Feature Binary Literals
 FeatureLink ../features/hasBinaryNumbers.html
 Supported ✓
 Example
 Token 
row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Example
 Token 
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Example
 Token 
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Example
 Token 
row
 Feature Octals
 FeatureLink ../features/hasOctals.html
 Supported ✓
 Example
 Token 
row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported ✓
 Example
 Token 
row
 Feature Functions
 FeatureLink ../features/hasFunctions.html
 Supported ✓
 Example
 Token 
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Example
 Token true false
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token FStar.IO.print_string

View source
