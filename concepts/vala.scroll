import ../code/conceptPage.scroll

id vala
name Vala
appeared 2006
tags pl
website https://wiki.gnome.org/Projects/Vala
compilesTo c

isOpenSource true
tryItOnline vala
clocExtensions vala
fileType text
docs https://wiki.gnome.org/Projects/Vala/Documentation
rosettaCode http://www.rosettacode.org/wiki/Category:Vala
reference https://vala.dev/
reference https://news.ycombinator.com/item?id=32113825

pygmentsHighlighter Vala
 filename c_like.py
 fileExtensions vala vapi
rijuRepl https://riju.codes/vala
 example
  void main () {
      print("Hello, world!\n");
  }
  
example
 int main (string[] args) {
    var app = new Gtk.Application(
      "com.example.App",
      ApplicationFlags.FLAGS_NONE
    );
    
    app.activate.connect(() => {
      var win = new Gtk.ApplicationWindow(app);
  
      var btn = new Gtk.Button.with_label("Hello World");
      btn.click.connect(win.close);
  
      win.child = btn;
      win.present();
    })
    return app.run(args);
  }
twitter https://twitter.com/vala_lang
leachim6 Vala
 filepath v/Vala.vala
 fileExtensions vala
 example
  static void main (string[] args)
  {
  	stdout.printf ("Hello World\n");
  }
  
  

lineCommentToken //
printToken stdout.printf
stringToken "

hasLineComments true
 // A comment
hasComments true
 // A comment
hasPrintDebugging true
hasSemanticIndentation false
hasStrings true
 "Hello world"

wikipedia https://en.wikipedia.org/wiki/Vala_(programming_language)
 example
  void main () {
    print("Hello, world!\n");
  }
 related c csharp d java boo emacs-editor sublime-editor textmate-editor eclipse-editor vim visual-studio-code-editor genie python
 summary Vala is an object-oriented programming language with a self-hosting compiler that generates C code and uses the GObject system. Vala is syntactically similar to C# and includes several features such as: anonymous functions, signals, properties, generics, assisted memory management, exception handling, type inference, and foreach statements. Its developers Jürg Billeter and Raffaele Sandrini aim to bring these features to the plain C runtime with little overhead and no special runtime support by targeting the GObject object system. Rather than compiling directly to machine code or assembly language, it compiles to a lower level intermediate language. It source-to-source compiles to C, which is then compiled with a C compiler for a given platform, such as GCC. For memory management, the GObject system provides reference counting. In C, a programmer must manually manage adding and removing references, but in Vala, managing such reference counts is automated if a programmer uses the language's built-in reference types rather than plain pointers. Using functionality from native code libraries requires writing vapi files, defining the library interfacing. Writing these interface definitions is well-documented for C libraries, especially when based on GObject. However, C++ libraries are not supported. Vapi files are provided for a large portion of the GNOME platform, including GTK+. Vala was conceived by Jürg Billeter and was implemented by him and Raffaele Sandrini, finishing a self-hosting compiler in May 2006.
 pageId 12655903
 dailyPageViews 190
 created 2007
 backlinksCount 355
 revisionCount 428
 appeared 2017
 fileExtensions vala vapi

githubBigQuery Vala
 repos 2046
 users 1526

linguistGrammarRepo https://github.com/technosophos/Vala-TMBundle
 firstCommit 2010
 lastCommit 2016
 committerCount 6
 commitCount 23

isbndb 3
 year|publisher|title|authors|isbn13
 2019|Apress|Introducing Vala Programming: A Language and Techniques to Boost Productivity|Lauer, Michael|9781484253793
 2019|Apress|Introducing Vala Programming: A Language and Techniques to Boost Productivity|Lauer, Michael|9781484253809
 2010||Vala (programming Language)|Surhone and Lambert M. and Timpledon and Miriam T. and Marseken and Susan F.|9786130894771

githubLanguage Vala
 fileExtensions vala vapi
 trendingProjectsCount 0
 type programming
 aceMode vala
 tmScope source.vala
 repos 3465

semanticScholar 0
