ACL2
====

ACL2, aka A Computational Logic for Applicative Common Lisp, is an open source programming language created in 1990 by Robert S. Boyer and J Strother Moore.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221990%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Robert%20S.%20Boyer
 https://pldb.io/concepts/../lists/creators.html#q=J%20Strother%20Moore

#1025 on PLDB
34 Years Old

ACL2 (A Computational Logic for Applicative Common Lisp) is a software system consisting of a programming language, an extensible theory in a first-order logic, and an automated theorem prover.  ACL2 is designed to support automated reasoning in inductive logical theories, mostly for the purpose of software and hardware verification.  The input language and implementation of ACL2 are built on Common Lisp. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/ACL2

- ACL2 Wikipedia page
 https://en.wikipedia.org/wiki/ACL2
- ACL2 first developed in The University of Texas at Austin
- Explore ACL2 snippets on Rosetta Code
- ACL2 on HOPL
 https://hopl.info/showlanguage.prx?exp=6972
- See also: (2 related languages)Common Lisp, AXIOM

Language features
======================================================

row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported âœ“
 Token 
 Example
