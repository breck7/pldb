import ../code/conceptPage.scroll

id verilog
name Verilog
appeared 1984
creators Phil Moorby and Prabhu Goel
tags hardwareDescriptionLanguage

fileExtensions v
fileType text
docs https://verilogguide.readthedocs.io/en/latest/
antlr https://github.com/antlr/grammars-v4/tree/master/verilog
codeMirror verilog
rosettaCode http://www.rosettacode.org/wiki/Category:Verilog
quineRelay Verilog
centralPackageRepositoryCount 0
ubuntuPackage iverilog
country United States

helloWorldCollection Verilog
 /* Hello World in Verilog. */
 
 module main;
 
  initial
    begin
      $display("Hello, World");
      $finish ;
    end
 
  endmodule
 
pygmentsHighlighter verilog
 filename hdl.py
 fileExtensions v
rijuRepl https://riju.codes/verilog
 example
  module main;
  
  initial begin
    $display("Hello, world!");
  end
  
  endmodule
subreddit https://reddit.com/r/Verilog
 memberCount
  2017 552
  2022 2421
leachim6 Verilog
 filepath v/Verilog.v
 fileExtensions v
 example
  module main;
    initial
      begin
        $display("Hello World");
        $finish;
      end
  endmodule
  

keywords always assign automatic begin case casex casez cell config deassign default defparam design disable edge else end endcase endconfig endfunction endgenerate endmodule endprimitive endspecify endtable endtask event for force forever fork function generate genvar if ifnone incdir include initial inout input instance join liblist library localparam macromodule module negedge noshowcancelled output parameter posedge primitive pulsestyle_ondetect pulsestyle_onevent reg release repeat scalared showcancelled signed specify specparam strength table task tri tri0 tri1 triand wand trior wor trireg unsigned use vectored wait while wire

lineCommentToken //
multiLineCommentTokens /* */
printToken $display
stringToken "

hasComments true
hasLineComments true
 // A comment
hasPrintDebugging true
hasMultiLineComments true
 /* A comment
 */
hasSemanticIndentation false
hasStrings true
 "Hello world"
isCaseSensitive true
hasWhileLoops true
hasFunctions true
hasConditionals true
hasOctals true
 // ([0-9]+)|(\'o)[0-7]+
hasHexadecimals true
 // ([0-9]+)|(\'h)[0-9a-fA-F]+
hasFloats true
 // (\d+\.\d*|\.\d+|\d+)[eE][+-]?\d+[lL]?
hasIntegers true
 // ([0-9]+)|(\'d)[0-9]+
hasBinaryNumbers true
 // ([0-9]+)|(\'b)[01]+

wikipedia https://en.wikipedia.org/wiki/Verilog
 example
  initial
    a = 0;
  
  initial
    b = a;
  
  initial
    begin
      #1;
      $display("Value a=%d Value of b=%d",a,b);
    end
 related systemverilog c vhdl openvera property-specification-language
 summary Verilog, standardized as IEEE 1364, is a hardware description language (HDL) used to model electronic systems. It is most commonly used in the design and verification of digital circuits at the register-transfer level of abstraction. It is also used in the verification of analog circuits and mixed-signal circuits, as well as in the design of genetic circuits.
 pageId 63863
 dailyPageViews 497
 created 2002
 backlinksCount 515
 revisionCount 738
 appeared 1984
 fileExtensions v

hopl https://hopl.info/showlanguage.prx?exp=1062
tiobe Verilog
 currentRank 50

githubBigQuery Verilog
 repos 2985
 users 2408

linguistGrammarRepo https://github.com/textmate/verilog.tmbundle
 firstCommit 2008
 lastCommit 2015
 committerCount 3
 commitCount 16
 sampleCount 13
 example
  `timescale 1ns / 1ps
  // Copyright (C) 2008 Schuyler Eldridge, Boston University
  //
  // This program is free software: you can redistribute it and/or modify
  // it under the terms of the GNU General Public License as published by
  // the Free Software Foundation, either version 3 of the License.
  //
  // This program is distributed in the hope that it will be useful,
  // but WITHOUT ANY WARRANTY; without even the implied warranty of
  // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  // GNU General Public License for more details.
  //
  // You should have received a copy of the GNU General Public License
  // along with this program.  If not, see <http://www.gnu.org/licenses/>.
  module mux(opA,opB,sum,dsp_sel,out);
  	input [3:0] opA,opB;
  	input [4:0] sum;
  	input [1:0] dsp_sel;
  	output [3:0] out;
  	
  	reg cout;
  	
  	always @ (sum)
  		begin
  			if (sum[4] == 1)
  				cout <= 4'b0001;
  			else
  				cout <= 4'b0000;
  		end
  	
  	reg out;
  	
  	always @(dsp_sel,sum,cout,opB,opA)
  		begin
  			if (dsp_sel == 2'b00)
  				out <= sum[3:0];
  			else if (dsp_sel == 2'b01)
  				out <= cout;
  			else if (dsp_sel == 2'b10)
  				out <= opB;
  			else if (dsp_sel == 2'b11)
  				out <= opA;
  		end
  
  endmodule
  

isbndb 31
 year|publisher|title|authors|isbn13
 2016|McGraw Hill TAB|Programming FPGAs: Getting Started with Verilog|Monk, Simon|9781259643767
 2019|Pearson|Verilog Styles for Synthesis of Digital Systems|Smith, David R and Franzon, Paul D|9780201618600
 2007|CRC Press|Verilog HDL: Digital Design and Modeling|Cavanagh, Joseph|9781420051544
 1998|Springer|The Complete Verilog Book|Sagdeo, Vivek|9780792381884
 2005|Charles River Media|HDL Programming Fundamentals: VHDL and Verilog (DaVinci Engineering)|Botros, Nazeih M|9781584508557
 2007|Cambridge University Press|Designing Digital Computer Systems with Verilog|Lilja, David J. and Sapatnekar, Sachin S.|9780521045728
 20130418|Springer Nature|The Verilog PLI Handbook|Stuart Sutherland|9781461550174
 2016|McGraw Hill TAB|Programming FPGAs: Getting Started with Verilog|Monk, Simon|9781259643774
 2017|McGraw-Hill Education|Digital System Design with FPGA: Implementation Using Verilog and VHDL|Unsalan, Cem and Tar, Bora|9781259837913
 1996|Prentice Hall PTR|Verilog HDL|Palnitkar, Samir|9780134516752
 2019|Wiley|Digital Logic: With an Introduction to Verilog and FPGA-Based Design|Rafiquzzaman, M. and McNinch,  Steven A.|9781119621546
 2019|Wiley|Digital Logic: With an Introduction to Verilog and FPGA-Based Design|Rafiquzzaman, M. and McNinch, Steven A.|9781119621638
 1998|Pearson College Div|Verilog Digital Computer Design: Algorithms into Hardware|Arnold, Mark Gordon|9780136392538
 1999|Star Galaxy Pub|A Verilog HDL Primer, Second Edition|Bhasker, J.|9780965039178
 2002|Springer|The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface (The Springer International Series in Engineering and Computer Science (666))|Sutherland, Stuart|9780792376583
 1999|Springer|Principles of Verilog PLI|Mittra, Swapnajit|9780792384779
 1999|Springer|The Verilog PLI Handbook: A User's Guide and Comprehensive Reference on the Verilog Programming Language Interface|Sutherland, Stuart|9780792384892
 2013-04-18T00:00:01Z|Springer|The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface (The Springer International Series in Engineering and Computer Science (666))|Sutherland, Stuart|9781475783711
 2012|Springer|The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface|Sutherland, Stuart|9781461372790
 2015|LAP LAMBERT Academic Publishing|Dual Core RISC Processor with configurable hardware using VERILOG|Kumar, Nishant and Aggrawal, Ekta|9783659417887
 2014|GRIN Publishing|Verilog Design of a Pedestrian Crossing: Verilog Programming|Gondhalekar, Ninad|9783656845027
 2012|LAP LAMBERT Academic Publishing|A HDL & Verilog Code: Simulated Output|Sudhan, Manu and S., Manjunatha|9783848423248
 2011-10-08T00:00:01Z|Springer|The Verilog PLI Handbook: A User's Guide and Comprehensive Reference on the Verilog Programming Language Interface|Sutherland, Stuart|9781461550181
 2021|Cengage Learning|HDL Programming Fundamentals: VHDL and Verilog (Davinci Engineering)|Botros|9788131502013
 1999|Pearson Education|Verilog Designer's Library|Bob Zeidman|9780132441582
 20060418|Springer Nature|The Verilog PLI Handbook|Stuart Sutherland|9780306476655
 20121206|Springer Nature|Principles of Verilog PLI|Swapnajit Mittra|9781461551614
 2011-09-20|Wiley|FPGA Prototyping by Verilog Examples|Pong P. Chu|9781118210611
 03/2015|Mercury Learning and Information|HDL with Digital Design VHDL and Verilog|Nazeih Botros|9781942270287
 2021-12-10|Wiley|Digital VLSI Design and Simulation with Verilog|Suman Lata Tripathi and Sobhit Saxena and Sanjeet K. Sinha and Govind S. Patel|9781119778066
 2005|McGraw-Hill Professional Publishing|Verilog Digital System Design: RT Level Synthesis, Testbench and Verification|Zainalabedin Navabi|9780071445658

githubLanguage Verilog
 fileExtensions v veo
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  SI-RISCV e200_opensource https://github.com/SI-RISCV.png https://github.com/SI-RISCV/e200_opensource Verilog #b2b7f8 899 409 57 "The Ultra-Low Power RISC Core"
  cliffordwolf picorv32 https://github.com/cliffordwolf.png https://github.com/cliffordwolf/picorv32 Verilog #b2b7f8 966 254 29 "PicoRV32 - A Size-Optimized RISC-V CPU"
 trendingProjectsCount 3
 type programming
 aceMode verilog
 codemirrorMode verilog
 codemirrorMimeType text/x-verilog
 tmScope source.verilog
 repos 48035

indeedJobs verilog developer
 2022 246

semanticScholar 18
 year|title|doi|citations|influentialCitations|authors|paperId
 2003|Verilog HDL|10.1201/9781315219547|60|7|S. Palnitkar|12b01362e0f2c133a8620d6d6746a839f4b02982
 2003|Verilog HDL, powered by PLI: a suitable framework for describing and modeling asynchronous circuits at all levels of abstraction|10.1145/775832.775917|50|1|Arash Saifhashemi and H. Pedram|f06f4e9b01a446ad3ecd785751bb1f0bc727f050
 1999|The Verilog PLI Handbook|10.1007/b116513|37|4|S. Sutherland|00dce6a5797c44dba1313774a1b9d61a388a355c
 1996|The Verilog Procedural Interface for the Verilog Hardware Description Language|10.1109/IVC.1996.496013|26|2|C. Dawson and S. Pattanam and D. Roberts|78033ca1ee054dedc610e22cdb0550a0ee4a11f2
 2000|An animatable operational semantics of the Verilog hardware description language|10.1109/ICFEM.2000.873820|25|0|Jonathan P. Bowen and Jifeng He and Qiwen Xu|d500d55aed7a737378eeb529213b45d53ee7f88b
 1999|Verischemelog: Verilog embedded in Scheme|10.1145/331960.331978|21|1|J. Jennings and Eric Beuscher|2d3f3e8149af1901341eb6740430393b0360df62
 2003|An Algebraic Approach to the VERILOG Programming|10.1007/978-3-540-40007-3_5|11|0|H. Jifeng|fc745adcef2a1519155c07f903ebe70918477d3b
 2011|GCC2Verilog Compiler Toolset for Complete Translation of C Programming Language into Verilog HDL|10.4218/etrij.11.0110.0654|11|0|Giang Nguyen Thi Huong and S. Kim|f759a43b5e1aca4eb8d85d2a10444ab3fcf18c0c
 2014|FBDtoVerilog 2.0: An Automatic Translation of FBD into Verilog to Develop FPGA|10.1109/ICISA.2014.6847402|10|0|Dong-Ah Lee and Eui-Sub Kim and Junbeom Yoo and Jang-Soo Lee and J. Choi|9335cf6436e7a5ab0f6be2c37ad3702082f39875
 2000|Combining Operational Semantics, Logic Programming and Literate Programming in the Specification and Animation of the Verilog Hardware Description Language|10.1007/3-540-40911-4_16|10|0|Jonathan P. Bowen|5deda61155eb8aeb4540ad5ecf443a7228899bbb
 1998|Verilog plus C language modeling with PLI 2.0: The next generation simulation language|10.1109/IVC.1998.660687|6|0|S. Meyer|c8eaeb296d7c077e571a26f95a01efe2f2029e58
 1994|The PowerPC 603 C++ Verilog interface model|10.1109/CMPCON.1994.282909|5|0|R. P. Voith|73ac82fcff57ef2a5a81eb167fc51515184aaba5
 1996|Faster Verilog simulations using a cycle based programming methodology|10.1109/IVC.1996.496014|5|1|M. Becker|0b6abbaedaeed268005a26aa72f9bcf36789a920
 2020|DAVE: Deriving Automatically Verilog from English|10.1145/3380446.3430634|3|1|H. Pearce and Benjamin Tan and R. Karri|5bb4f4be3aad75da5a64a52b56e697ee6df71e39
 2004|Introduction to Verilog|10.1002/0471723002.CH2|1|0|T. R. Padmanabhan and B. T. Sundari|5c855df6ed85074d6adae0f10f0683d9b28ab02c
 2012|Principles of Verilog PLI|10.1007/978-1-4615-5161-4|1|1|S. Mittra|00b84822867ddbe569681df411fd7733ea273f88
 2011|FeatureVerilog: Extending Verilog to Support Feature-Oriented Programming|10.1109/IPDPS.2011.167|1|0|Jun Ye and QingPing Tan and Tun Li and GuoRong Cao|9241d6183956e7e47fac20a91a9a9b6ad22ef72b
 2021|Comparative Analysis between Verilog and Chisel in RISC-V Core Design and Verification|10.1109/ISOCC53507.2021.9614007|1|0|Jaekyung Im and Seokhyeong Kang|8e173c2d102219a0e155cbf73b63613cca2df2e0

goodreads
 title|year|author|goodreadsId|rating|ratings|reviews
 HDL Programming Fundamentals: VHDL and Verilog [With CD-ROM]|2005|Nazeih M. Botros|382542|4.15|55|5
 Programming Fpgas: Getting Started with Verilog||Simon Monk|50000071|3.89|9|2
 Computer Arithmetic And Verilog Hdl Fundamentals|2009|Joseph Cavanagh|7046981|4.70|10|1
