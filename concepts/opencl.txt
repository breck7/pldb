OpenCL
======

OpenCL is an open source programming language created in 2009.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222009%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2009

#97 on PLDB
15 Years Old
0 Repos

Open Computing Language (OpenCL) is a framework for writing programs that execute across heterogeneous platforms consisting of central processing units (CPUs), graphics processing units (GPUs), digital signal processors (DSPs), field-programmable gate arrays (FPGAs) and other processors or hardware accelerators. OpenCL specifies programming languages (based on C99 and C++11) for programming these devices and application programming interfaces (APIs) to control the platform and execute programs on the compute devices. OpenCL provides a standard interface for parallel computing using task- and data-based parallelism. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/OpenCL Read more on Wikipedia...

- Tags: programming language
- There are at least 0 OpenCL repos on GitHub
- Early development of OpenCL happened in Khronos Group
- Check out the 37 OpenCL meetup groups on Meetup.com.
- OpenCL is supported by the GDB
- OpenCL appears in the TIOBE Index
- GitHub supports syntax highlighting for OpenCL
- Indeed.com has 266 matches for "opencl engineer".
- See also: (17 related languages) OpenGL, Android, FreeBSD, Linux, IA-32, CUDA, C, Python, Java, LLVM IR, Mathematica, JavaScript, ARM, X86, PTX, Metal, SequenceL
- 8 PLDB concepts link to OpenCL: Basis Codec, Charcoal, Emscripten, FFmpeg, Futhark, HHVM, HyPhy, LWJGL

/* Old-style comment. */

// New-style comment.

typedef float foo_t;

#ifndef ZERO
#define ZERO (0.0)
#endif

#define FOO(x) ((x) + \
  ZERO)

__kernel
void foo(__global const foo_t * x, __local foo_t y, const uint n)
{
  barrier(CLK_LOCAL_MEM_FENCE);

  if (n &gt; 42) {
    *x += y;
  }
}

// This kernel computes FFT of length 1024. The 1024 length FFT is decomposed into
  // calls to a radix 16 function, another radix 16 function and then a radix 4 function

  __kernel void fft1D_1024 (__global float2 *in, __global float2 *out,
                          __local float *sMemx, __local float *sMemy) {
    int tid = get_local_id(0);
    int blockIdx = get_group_id(0) * 1024 + tid;
    float2 data[16];

    // starting index of data to/from global memory
    in = in + blockIdx;  out = out + blockIdx;

    globalLoads(data, in, 64); // coalesced global reads
    fftRadix16Pass(data);      // in-place radix-16 pass
    twiddleFactorMul(data, tid, 1024, 0);

    // local shuffle using local memory
    localShuffle(data, sMemx, sMemy, tid, (((tid &amp; 15) * 65) + (tid &gt;&gt; 4)));
    fftRadix16Pass(data);               // in-place radix-16 pass
    twiddleFactorMul(data, tid, 64, 4); // twiddle factor multiplication

    localShuffle(data, sMemx, sMemy, tid, (((tid &gt;&gt; 4) * 64) + (tid &amp; 15)));

    // four radix-4 function calls
    fftRadix4Pass(data);      // radix-4 function number 1
    fftRadix4Pass(data + 4);  // radix-4 function number 2
    fftRadix4Pass(data + 8);  // radix-4 function number 3
    fftRadix4Pass(data + 12); // radix-4 function number 4

    // coalesced global writes
    globalStores(data, out, 64);
  }

Language features
======================================================

row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Example
  /* A comment
  */
 Token /* */
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  // A comment
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  // A comment
 Token //
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token
