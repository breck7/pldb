KRC
===

KRC, aka Kent Recursive Calculator, is a programming language created in 1981 by David Turner.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221981%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=David%20Turner

#1456 on PLDB
43 Years Old

KRC (Kent Recursive Calculator) is a lazy functional language developed by David Turner from November 1979 to October 1981 based on SASL, with pattern matching, guards and ZF expressions (now more usually called list comprehensions). Two implementations of KRC were written: David Turner's original one in BCPL running on EMAS, and Simon J. Croft's later one in C under Unix, and KRC was the main language used for teaching functional programming at the University of Kent at Canterbury (UK) from 1982 to 1985. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Kent_Recursive_Calculator

- KRC Wikipedia page
 https://en.wikipedia.org/wiki/Kent_Recursive_Calculator
- KRC first developed in University of Kent
- KRC on HOPL
 https://hopl.info/showlanguage.prx?exp=959
- See also: (4 related languages)BCPL, C, Unix, ISBN
- Read more about KRC on the web: 1.
 http://krc-lang.org/
