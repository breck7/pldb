Austral
=======

Austral is a programming language created in 2018 by Fernando Borretti.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222018%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2018
 https://pldb.io/concepts/../lists/creators.html#q=Fernando%20Borretti Fernando Borretti

#899 on PLDB
6 Years Old

git clone https://github.com/austral/austral/

Austral is a new systems programming language. You can think of it as Rust: The Good Parts or a modernized, stripped-down Ada. It features a strong static type system, linear types, capability-based security, and strong modularity.

- Tags: programming language
- Austral is developed on GitHub and has 408 stars
- Early development of Austral happened in https://github.com/austral/
- Austral is written in Markdown, OCaml, Make, JSON, TypeScript, Python, Vim script, Nix, YAML, Bourne shell, C, Lisp
- Read more about Austral on the web: 1.
 https://borretti.me/article/introducing-austral 1.

let db: Db := connect(&quot;localhost&quot;);
close(db);
-- The below is tuple destructuring notation.
let { first as db1: Db, second: Rows } := query(db, &quot;SELECT ...&quot;);
close(db); -- error: `db` consumed again.
-- another error: `db1` never consumed.
