gazetteCss

Idris
=====

Idris is an open source programming language created in 2014 by Edwin Brady.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222014%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2014
 https://pldb.io/concepts/../lists/creators.html#q=Edwin%20Brady Edwin Brady

#84 on PLDB
10 Years Old
2k Repos

git clone https://github.com/idris-lang/Idris-dev

Idris is a general-purpose purely functional programming language with dependent types, strict or optional lazy evaluation and features such as a totality checker. Even before its possible usage for interactive theorem-proving, the focus of Idris is on general-purpose programming, like the purely functional Haskell, and with sufficient performance. The type system of Idris is similar to the one used by Agda and theorem-proving in it is similar to Coq, including tactics. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Idris_(programming_language) Read more on Wikipedia...

- Tags: programming language
- Idris is developed on GitHub and has 3,418 stars
- There are at least 1,895 Idris repos on GitHub
- Early development of Idris happened in University of St Andrews
- Idris is written in Idris, Bourne shell, Haskell, reStructuredText, SVG, C, Make, Markdown, YAML, JavaScript, Perl, XML, CSS, Nix, Python, CMake, Scheme, Bash, Java
- The  Google BigQuery Public Dataset GitHub snapshot shows 219 users using Idris in 301 repos on GitHub
- There are 11 Project Euler users using Idris
- Explore Idris snippets on Rosetta Code
- Idris appears in the TIOBE Index
- Pygments supports syntax highlighting for Idris
- GitHub supports syntax highlighting for Idris
- Indeed.com has 1 matches for "idris developer".
- idris-lang.org was registered in 2010
- See also: (14 related languages) Agda, Coq, Epigram, Haskell, ML, Rust, Perl, C, JavaScript, Java, JVM, CIL, OCaml, LLVM IR
- 3 PLDB concepts link to Idris: cloc, Idris, Pygments

module Main

main : IO ()
main = putStrLn &quot;Hello, world!&quot;

module Main

main : IO ()
main = putStrLn &quot;Hello World&quot;

Hello world in Idris

&gt; main : IO ()
&gt; main = putStrLn &quot;Hello, World!&quot;

module Prelude.Char

import Builtins

isUpper : Char -&gt; Bool
isUpper x = x &gt;= &#39;A&#39; &amp;&amp; x &lt;= &#39;Z&#39;

isLower : Char -&gt; Bool
isLower x = x &gt;= &#39;a&#39; &amp;&amp; x &lt;= &#39;z&#39;

isAlpha : Char -&gt; Bool
isAlpha x = isUpper x || isLower x

isDigit : Char -&gt; Bool
isDigit x = (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;)

isAlphaNum : Char -&gt; Bool
isAlphaNum x = isDigit x || isAlpha x

isSpace : Char -&gt; Bool
isSpace x = x == &#39; &#39;  || x == &#39;\t&#39; || x == &#39;\r&#39; ||
            x == &#39;\n&#39; || x == &#39;\f&#39; || x == &#39;\v&#39; ||
            x == &#39;\xa0&#39;

isNL : Char -&gt; Bool
isNL x = x == &#39;\r&#39; || x == &#39;\n&#39;

toUpper : Char -&gt; Char
toUpper x = if (isLower x)
               then (prim__intToChar (prim__charToInt x - 32))
               else x

toLower : Char -&gt; Char
toLower x = if (isUpper x)
               then (prim__intToChar (prim__charToInt x + 32))
               else x

isHexDigit : Char -&gt; Bool
isHexDigit x = elem (toUpper x) hexChars where
  hexChars : List Char
  hexChars = [&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;,
              &#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;]

total
pairAdd : Num a =&gt; Vect n a -&gt; Vect n a -&gt; Vect n a
pairAdd Nil       Nil       = Nil
pairAdd (x :: xs) (y :: ys) = x + y :: pairAdd xs ys

Language features
======================================================

row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Example
  -- \d+
 Token 
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Example
  -- \d+[eE][+-]?\d+
 Token 
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Example
  -- 0[xX][\da-fA-F]+
 Token 
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
  "Hello world"
 Token "
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token putStrLn
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  -- A comment
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  -- A comment
 Token --
row
 Feature Dependent types
 FeatureLink ../features/hasDependentTypes.html
 Supported ✓
 Example
 Token 
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token

View source
