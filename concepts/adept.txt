Adept
=====

Adept is a programming language created in 2018 by Isaac Shelton.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222018%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Isaac%20Shelton

#1470 on PLDB
6 Years Old

git clone https://github.com/AdeptLanguage/Adept

The Adept Programming Language

- Adept website
 https://github.com/AdeptLanguage/Adept
- Adept is developed on GitHub and has 78 stars
- Adept first developed in https://github.com/AdeptLanguage/
- Adept is written in C, Ring, Markdown, CMake, Python, Bourne shell, YAML, JSON

/*
    For values that use ownership-based memory management
    (e.g. String, List, Grid)
    we must transfer ownership if we want to keep them
    alive for longer than their owner&#39;s scope
*/
import basics
func main {
    everyone &lt;String&gt; List = getEveryoneAttending()
    each fullname String in everyone {
        print(&quot;=&gt; &quot; + fullname)
    }
}
func getEveryoneAttending() &lt;String&gt; List {
    everyone &lt;String&gt; List
    person1 String = getFullnameReturnImmediately(&quot;Alice&quot;, &quot;Golden&quot;)
    person2 String = getFullnameStoreAndThenLaterReturn(&quot;Bob&quot;, &quot;Johnson&quot;)
    // Commit ownership of strings held by &#39;person1&#39; and &#39;person2&#39;
    // to be managed by the list
    everyone.add(person1.commit())
    everyone.add(person2.commit())
    // Commit ownership of the list to the caller
    return everyone.commit()
}
func getFullnameReturnImmediately(firstname, lastname String) String {
    // &#39;.commit()&#39; is not necessary here
    return firstname + &quot; &quot; + lastname
}
func getFullnameStoreAndThenLaterReturn(firstname, lastname String) String {
    fullname String = firstname + &quot; &quot; + lastname
    // Ownership of the result is held by &#39;fullname&#39;,
    // so we must transfer ownership to the caller in order
    // to keep it alive after this function returns
    // &#39;.commit()&#39; is necessary here
    return fullname.commit()
}
