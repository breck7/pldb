../code/conceptPage.scroll

id pl-m
name PL/M
appeared 1973
tags pl
standsFor Programming Language for Microcomputers
lab Microcomputer Applications Associates

clocExtensions lit plm
fileType text
country United States

multiLineCommentTokens /* */
assignmentToken :=

hasMultiLineComments true
 /* A comment
 */
hasComments true
 /* A comment
 */
hasSemanticIndentation false
hasAssignment true

wikipedia https://en.wikipedia.org/wiki/PL/M
 example
  FIND: PROCEDURE(PA,PB) BYTE;
      DECLARE (PA,PB) BYTE;
      /* FIND THE STRING IN SCRATCH STARTING AT PA AND ENDING AT PB */
      DECLARE J ADDRESS,
          (K, MATCH) BYTE;
      J = BACK ;
      MATCH = FALSE;
          DO WHILE NOT MATCH AND (MAXM > J);
          LAST,J = J + 1; /* START SCAN AT J */
          K = PA ; /* ATTEMPT STRING MATCH AT K */
              DO WHILE SCRATCH(K) = MEMORY(LAST) AND
                  NOT (MATCH := K = PB);
              /* MATCHED ONE MORE CHARACTER */
              K = K + 1; LAST = LAST + 1;
              END;
          END;
      IF MATCH THEN /* MOVE STORAGE */
          DO; LAST = LAST - 1; CALL MOVER;
          END;
      RETURN MATCH;
      END FIND;
 related algol pl-i xpl c
 summary The PL/M programming language  (an acronym of Programming Language for Microcomputers) is a high-level language conceived and developed by  Gary Kildall in 1973  for Hank Smith at Intel for its microprocessors. The language incorporated ideas from PL/I, ALGOL and XPL, and had an integrated macro processor. Unlike other contemporary languages such as Pascal, C or BASIC, PL/M had no standard input or output routines.  It included features targeted at the low-level hardware specific to the target microprocessors, and as such, it could support direct access to any location in memory, I/O ports and the processor interrupt flags in a very efficient manner. PL/M was the first higher level programming language for microprocessor-based computers and was the original implementation language for the CP/M operating system. Many Intel and Zilog Z80 based embedded systems were programmed in PL/M during the 1970s and 1980s. For instance, the firmware of the Service Processor component of CISC AS/400 was written in PL/M. The original PL/M compiler targeted the Intel 8008. An updated version generated code for the 8080 processor, which would also run on the newer Intel 8085 as well as on the Zilog Z80 family (as it is backward-compatible with the 8080). Later followed compilers for the Intel 8048 and Intel 8051-microcontroller family as well as for the 8086 (8088), 80186 (80188) and subsequent 8086-based processors, including the advanced 80286 and the 32-bit 80386. There were also PL/M compilers developed for later microcontrollers, such as the Intel 8061 and 8096 / MCS-96 architecture family.  While some PL/M compilers were "native", meaning that they ran on systems using that same microprocessor, e.g. for the Intel ISIS operating system, there were also "cross compilers", for instance PLMX, which ran on other operating environments such as CP/M, Microsoft's DOS, and Digital Equipment Corporation's VAX/VMS. PL/M is no longer supported by Intel, but aftermarket tools like PL/M-to-C translators exist (for examples, see External links, below).
 pageId 543057
 created 2004
 backlinksCount 67
 revisionCount 108
 dailyPageViews 68
 appeared 1973

hopl https://hopl.info/showlanguage.prx?exp=591
