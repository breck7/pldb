Go
==

Go is an open source programming language created in 2009 by Rob Pike and Ken Thompson and Robert Griesemer.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222009%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Rob%20Pike
 https://pldb.io/concepts/../lists/creators.html#q=Ken%20Thompson
 https://pldb.io/concepts/../lists/creators.html#q=Robert%20Griesemer

#12 on PLDB
15 Years Old
1m Repos

git clone https://github.com/golang/go

Try now: Web · Riju · TIO · Replit

Go (often referred to as golang) is a programming language created at Google in 2009 by Robert Griesemer, Rob Pike, and Ken Thompson. It is a compiled, statically typed language in the tradition of Algol and C, with garbage collection, limited structural typing, memory safety features and CSP-style concurrent programming features added. The compiler and other language tools originally developed by Google are all free and open source.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Go_(programming_language)

- Go website
 https://go.dev/
- Go downloads page
 https://go.dev/dl/
- Go Wikipedia page
 https://en.wikipedia.org/wiki/Go_(programming_language)
- Go is developed on GitHub and has 110,413 stars
- Watch the history of the Go repo visualized with Gource
- Go docs
 https://devdocs.io/go/
- Go mailing list
 https://groups.google.com/g/golang-nuts
- There are at least 1,083,789 Go repos on GitHub
- Go first developed in Google
- Go is written in Go, Assembly language, C, Markdown, JSON, Bash, HTML, Bourne shell, JavaScript, Perl, YAML, Make, CSS, Logos, Dockerfile, C++, Fortran 90, CSV, Python, Objective-C, awk, MATLAB
- Go on Twitter
 https://twitter.com/golang
- The  Google BigQuery Public Dataset GitHub snapshot shows 45k users using Go in 91k repos on GitHub
- Check out the 315 Go meetup groups on Meetup.com.
- There are 1,768 Project Euler users using Go
- In the 2021 StackOverflow developer survey Go programmers reported a median salary of $75,669. 9% of respondents reported using Go. 7,879 programmers reported using Go, and 15,788 said they wanted to use it
- Explore Go snippets on Rosetta Code
- Go is supported by the GDB
- Go ranks #14 in the TIOBE Index
- Go Ubuntu package
 https://packages.ubuntu.com/jammy/golang
- ANTLR grammar for Go
- Go LSP implementation
- CodeMirror package for syntax highlighting Go
- Monaco package for syntax highlighting Go
- Pygments supports syntax highlighting for Go
- GitHub supports syntax highlighting for Go
- Go appears in the Quine Relay project
- PLDB has 4 Jupyter Kernels for Go: github.com, github.com, github.com, github.com
- Release Notes for Go
 https://go.dev/doc/devel/release
- Official Blog page for Go
 https://go.dev/blog/
- Frequently Asked Questions for Go
 https://go.dev/doc/faq
- Indeed.com has 1,284 matches for "go engineer".
- See also: (33 related languages)Assembly language, Linux, FreeBSD, Solaris, ALEF, APL, BCPL, C, CSP, Limbo, Modula, Newsqueak, Oberon, Occam, Pascal, Python, Smalltalk, Crystal, Algol, Unix, Java, UTF-8, C#, Rust, Erlang, Chapel, CIL, MongoDB, Standard ML, COBOL, Fortran, Scala, Dart
- 77 languages in PLDB linking to Go: abs, Ace Editor, a Lisp Environment, Ante, aretext, Ark, Battlestar, BeBasic, Blacklight, Chapel, clay, cloc, comby, Cue, Cyber, Dafny, DDP, dgraph, Differential Datalog, DRAKON, Elvish, FlatBuffers, fo, Frundis, funl, g-fu, GCC, gentee, gfoo, Git, Go, Goal, gogs-editor, gridstudio-editor, h, HCL, Hera, HHVM, HuJSON, ink-lang, ivy, jayfor, JSON Query Language, JSON with Comments, Jule, ko, ktye/k, Kubernetes, m3db, mal, Mangle, mgmt, micro-editor, multiaddr, Nit, noms-db, Observable Framework, oden, OK, orange, Pipefish, Please Build, PROMETHEUS, Pygments, QOIR, Rye, Simple Binary Encoding, Slope, Snowball, Tawa, TensorFlow, TestML, TMTP, Touch, V, VSXu, Wing

// Type your code here, or load an example.
// Your function name should start with a capital letter.
package main

func Square(x int) int {
    return x * x
}

func main() {}

package main

import &quot;fmt&quot;

func main() {
	fmt.Println(&quot;Hello, world!&quot;)
}

package main

import &quot;fmt&quot;

func main() {
  fmt.Println(&quot;Hello World&quot;)
}

// Hello world in Go

package main
import &quot;fmt&quot;
func main() {
 fmt.Printf(&quot;Hello World\n&quot;)
}

// Autogenerated by Thrift Compiler (1.0.0-dev)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package linguist

import (
	&quot;bytes&quot;
	&quot;fmt&quot;
	&quot;git.apache.org/thrift.git/lib/go/thrift&quot;
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

func init() {
}

package main

import (
    &quot;fmt&quot;
    &quot;time&quot;
)

func readword(ch chan string) {
    fmt.Println(&quot;Type a word, then hit Enter.&quot;)
    var word string
    fmt.Scanf(&quot;%s&quot;, &amp;word)
    ch &lt;- word
}

func timeout(t chan bool) {
    time.Sleep(5 * time.Second)
    t &lt;- true
}

func main() {
    t := make(chan bool)
    go timeout(t)

    ch := make(chan string)
    go readword(ch)

    select {
    case word := &lt;-ch:
        fmt.Println(&quot;Received&quot;, word)
    case &lt;-t:
        fmt.Println(&quot;Timeout.&quot;)
    }
}

break case chan const continue default defer else fallthrough for func go goto if import interface map package range return select struct switch type var

Language features
======================================================

row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Token 
 Example
  // \d+(\.\d+[eE][+\-]?\d+|\.\d*|[eE][+\-]?\d+)
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Token 
 Example
  // 0[xX][0-9a-fA-F]+
row
 Feature Octals
 FeatureLink ../features/hasOctals.html
 Supported ✓
 Token 
 Example
  // 0[0-7]+
row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported ✓
 Token 
 Example
row
 Feature Switch Statements
 FeatureLink ../features/hasSwitch.html
 Supported ✓
 Token 
 Example
row
 Feature Constants
 FeatureLink ../features/hasConstants.html
 Supported ✓
 Token 
 Example
row
 Feature Case Sensitivity
 FeatureLink ../features/isCaseSensitive.html
 Supported ✓
 Token 
 Example
row
 Feature Assignment
 FeatureLink ../features/hasAssignment.html
 Supported ✓
 Token =
 Example
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Token fmt.Println
 Example
row
 Feature Message Passing
 FeatureLink ../features/hasMessagePassing.html
 Supported ✓
 Token 
 Example
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token //
 Example
  // A comment
row
 Feature Variadic Functions
 FeatureLink ../features/hasVariadicFunctions.html
 Supported ✓
 Token 
 Example
  // This variadic function takes an arbitrary number of ints as arguments.
  func sum(nums ...int) {
    fmt.Print("The sum of ", nums) // Also a variadic function.
    total := 0
    for _, num := range nums {
      total += num
    }
    fmt.Println(" is", total) // Also a variadic function.
  }
row
 Feature Type Inference
 FeatureLink ../features/hasTypeInference.html
 Supported ✓
 Token 
 Example
row
 Feature Lists
 FeatureLink ../features/hasLists.html
 Supported ✓
 Token 
 Example
  myList := []int{1, 2, 3}
row
 Feature File Imports
 FeatureLink ../features/hasImports.html
 Supported ✓
 Token 
 Example
  import (
     "fmt"
     "math"
  )
  import . "fmt"
  import _ "io"
  import log "github.com/foo/bar"
  import m "math"
row
 Feature Increment and decrement operators
 FeatureLink ../features/hasIncrementAndDecrementOperators.html
 Supported ✓
 Token 
 Example
  i := 0
  i++
  i--
row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Token 
 Example
  i, j := 42, 2701
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Token 
 Example
  c := true
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Token /* */
 Example
  /* A comment
  */
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  // A comment
row
 Feature Pointers
 FeatureLink ../features/hasPointers.html
 Supported ✓
 Token 
 Example
  package main
  
  import "fmt"
  
  func main() {
    i, j := 42, 2701
  
    p := &i         // point to i
    fmt.Println(*p) // read i through the pointer
    *p = 21         // set i through the pointer
    fmt.Println(i)  // see the new value of i
  
    p = &j         // point to j
    *p = *p / 37   // divide j through the pointer
    fmt.Println(j) // see the new value of j
  }
  
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token "
 Example
  "hello world"
row
 Feature Case Insensitive Identifiers
 FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
 Supported X
 Token 
 Example
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
row
 Feature Operator Overloading
 FeatureLink ../features/hasOperatorOverloading.html
 Supported X
 Token 
 Example
