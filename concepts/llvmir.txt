LLVM IR
=======

LLVM IR is an open source intermediate representation language created in 2003.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222003%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#69 on PLDB
21 Years Old
1k Repos

Try now: Riju · TIO

The LLVM compiler infrastructure project is a "collection of modular and reusable compiler and toolchain technologies" used to develop compiler front ends and back ends. LLVM is written in C++ and is designed for compile-time, link-time, run-time, and "idle-time" optimization of programs written in arbitrary programming languages. Originally implemented for C and C++, the language-agnostic design of LLVM has since spawned a wide variety of front ends: languages with compilers that use LLVM include ActionScript, Ada, C#, Common Lisp, Crystal, D, Delphi, Fortran, OpenGL Shading Language, Halide, Haskell, Java bytecode, Julia, Lua, Objective-C, Pony, Python, R, Ruby, Rust, CUDA, Scala, Swift, and Xojo. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/LLVM

- LLVM IR website
 http://llvm.org/docs/LangRef.html
- LLVM IR appears in categories: intermediate representation language
- LLVM IR downloads page
 https://releases.llvm.org/download.html
- LLVM IR Wikipedia page
 https://en.wikipedia.org/wiki/LLVM
- LLVM IR docs
 https://llvm.org/docs/LangRef.html
- There are at least 1,351 LLVM IR repos on GitHub
- LLVM IR first developed in https://github.com/llvm
- The  Google BigQuery Public Dataset GitHub snapshot shows 1k users using LLVM IR in 1k repos on GitHub
- LLVM IR Ubuntu package
 https://packages.ubuntu.com/jammy/llvm
- Pygments supports syntax highlighting for LLVM IR
- LLVM IR appears in the Quine Relay project
- Release Notes for LLVM IR
 https://releases.llvm.org/14.0.0/docs/ReleaseNotes.html
- Official Blog page for LLVM IR
 https://blog.llvm.org/tags/llvm-ir/
- Events page for LLVM IR
 https://discourse.llvm.org/t/llvm-community-events-calendar/63237
- Frequently Asked Questions for LLVM IR
 https://llvm.org/docs/FAQ.html
- See also: (41 related languages)C, ActionScript, Ada, C#, Common Lisp, Crystal, D, Delphi, Fortran, GLSL, Haskell, Java Bytecode, Julia, Lua, Objective-C, Python, R, Ruby, Rust, CUDA, Scala, Swift, Xojo, iOS, Assembly language, Java, OpenGL, CIL, Standard ML, ARM, Qualcomm Hexagon, MIPS architecture, PTX, PowerPC, SPARC, X86, Extensible Linking Format, C--, Pure, OpenCL, ISBN
- 23 languages in PLDB linking to LLVM IR: Chapel, CIR, cloc, Emscripten, firrtl, FLEX, Halide, HHVM, invokator, Julia, Kotlin, neeilang, oopsilon, Pony, rhine, Rust MIR, Simit, sixten, souper, SIL, Swift, TensorFlow, Triton

define i32 @square(i32) local_unnamed_addr #0 {
    %2 = mul nsw i32 %0, %0
    ret i32 %2
}

@.str = private unnamed_addr constant [13 x i8] c&quot;Hello, world!&quot;

declare i32 @puts(i8* nocapture) nounwind

define i32 @main() {
    %cast210 = getelementptr [13 x i8],[13 x i8]* @.str, i64 0, i64 0
    call i32 @puts(i8* %cast210)
    ret i32 0
}

target datalayout = &quot;e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128&quot;
@.str = internal constant [12 x i8] c&quot;Hello World\00&quot;

; puts from libc
declare i32 @puts(i8*)

define i32 @main(...) {
	call i32 @puts(i8* getelementptr([12 x i8]* @.str, i32 0, i32 0))
	ret i32 0
}

@.str = internal constant [14 x i8] c&quot;hello, world\0A\00&quot;

declare i32 @printf(i8*, ...)

define i32 @main(i32 %argc, i8** %argv) nounwind {
entry:
    %tmp1 = getelementptr [14 x i8], [14 x i8]* @.str, i32 0, i32 0
    %tmp2 = call i32 (i8*, ...) @printf( i8* %tmp1 ) nounwind
    ret i32 0
}

Language features
======================================================

row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  ; A comment
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token ;
 Example
  ; A comment
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
