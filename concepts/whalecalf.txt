whalecalf
=========

whalecalf is a grammar language created in 2000 by Alexander Okhotin.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222000%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2000
 https://pldb.io/concepts/../lists/creators.html#q=Alexander%20Okhotin Alexander Okhotin

#3586 on PLDB
24 Years Old

Whale Calf is a research-level parser generator for Boolean grammars, which are context-free grammars augmented with Boolean operations. It is written by Alexander Okhotin in C++, and is mainly aimed at demonstrating different parsing algorithms, of which the most practically useful is the Generalized LR (GLR). The main development took place in 2000-2004, though (as of April 2017) some occasional corrections are still being made.

- Tags: grammarLanguage
- Read more about whalecalf on the web: 1.
 https://medium.com/@mikhail.barash.mikbar/grammars-for-programming-languages-fae3a72a22c6 1.

algorithm=trellis;
terminal a, b, c;
S -&gt; C &amp; D;
C -&gt; a C a | a C b | b C a | b C b | c;
D -&gt; a A &amp; a D | b B &amp; b D | c E;
A -&gt; a A a | a A b | b A a | b A b | c E a;
B -&gt; a B a | a B b | b B a | b B b | c E b;
E -&gt; a E | b E | e;
