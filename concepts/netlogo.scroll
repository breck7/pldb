import ../code/conceptPage.scroll

id netlogo
name NetLogo
appeared 1999
creators Uri Wilensky
tags pl
website http://ccl.northwestern.edu/netlogo/
latestVersion 6.4.0
writtenIn scala java csv mustache xml bourne-shell markdown yaml html xslt css bash dtd

isOpenSource true
clocExtensions nlogo nls
fileType text
rosettaCode http://www.rosettacode.org/wiki/Category:NetLogo
repoStats
 firstCommit 2011
 commits 8155
 committers 85
 files 3137
 newestCommit 2024
country United States
originCommunity Northwestern University

twitter https://twitter.com/netlogo

githubRepo https://github.com/NetLogo/NetLogo
 firstCommit 2011
 stars 890
 forks 227
 subscribers 84
 created 2011
 updated 2022
 description turtles, patches, and links for kids, teachers, and scientists
 issues 433

lineCommentToken ;
booleanTokens true false

hasLineComments true
 ; A comment
hasComments true
 ; A comment
hasSemanticIndentation false
hasBooleans true

wikipedia https://en.wikipedia.org/wiki/NetLogo
 related starlogo logo isbn scala java
 summary NetLogo is an agent-based programming language and integrated modeling environment.
 pageId 593757
 dailyPageViews 80
 created 2004
 backlinksCount 67
 revisionCount 255
 appeared 1999
 fileExtensions nlogo nlogo3d nls

hopl https://hopl.info/showlanguage.prx?exp=7674

githubBigQuery NetLogo
 repos 154
 users 138

linguistGrammarRepo https://github.com/textmate/lisp.tmbundle
 firstCommit 2005
 lastCommit 2018
 committerCount 6
 commitCount 40
 sampleCount 1
 example
  patches-own [
    living?         ;; indicates if the cell is living
    live-neighbors  ;; counts how many neighboring cells are alive
  ]
  
  to setup-blank
    clear-all
    ask patches [ cell-death ]
    reset-ticks
  end
  
  to setup-random
    clear-all
    ask patches
      [ ifelse random-float 100.0 < initial-density
        [ cell-birth ]
        [ cell-death ] ]
    reset-ticks
  end
  
  to cell-birth
    set living? true
    set pcolor fgcolor
  end
  
  to cell-death
    set living? false
    set pcolor bgcolor
  end
  
  to go
    ask patches
      [ set live-neighbors count neighbors with [living?] ]
    ;; Starting a new "ask patches" here ensures that all the patches
    ;; finish executing the first ask before any of them start executing
    ;; the second ask.  This keeps all the patches in synch with each other,
    ;; so the births and deaths at each generation all happen in lockstep.
    ask patches
      [ ifelse live-neighbors = 3
        [ cell-birth ]
        [ if live-neighbors != 2
          [ cell-death ] ] ]
    tick
  end
  
  to draw-cells
    let erasing? [living?] of patch mouse-xcor mouse-ycor
    while [mouse-down?]
      [ ask patch mouse-xcor mouse-ycor
        [ ifelse erasing?
          [ cell-death ]
          [ cell-birth ] ]
        display ]
  end
  
  

isbndb 4
 year|publisher|title|authors|isbn13
 2015|The MIT Press|An Introduction to Agent-Based Modeling: Modeling Natural, Social, and Engineered Complex Systems with NetLogo (The MIT Press)|Wilensky, Uri and Rand, William|9780262731898
 2015|ISTE Press - Elsevier|Agent-Based Spatial Simulation with NetLogo Volume 1|Banos, Arnaud and Lang, Christophe and Marilleau, Nicolas|9781785480553
 2013|Bentham Science Publishers|Agent-based Computational Economics using NetLogo|Damaceanu, Romulus-Catalin|9781608054893
 2018|Bentham Science Publishers|Agent-based Computational Economics using NetLogo|Damaceanu, Romulus Catalin|9781608056385

githubLanguage NetLogo
 fileExtensions nlogo
 trendingProjectsCount 0
 type programming
 aceMode lisp
 codemirrorMode commonlisp
 codemirrorMimeType text/x-common-lisp
 tmScope source.lisp
 repos 3859

semanticScholar 10
 year|title|doi|citations|influentialCitations|authors|paperId
 2017|Improving Execution Speed of Models Implemented in NetLogo|10.18564/JASSS.3282|31|1|S. Railsback and D. Ayllón and U. Berger and V. Grimm and S. Lytinen and C. Sheppard and Jan C. Thiele|f1ab7b2481d60041c4aceae24841a2cee7a8e3ed
 2018|PyNetLogo: Linking NetLogo with Python|10.18564/jasss.3668|29|2|M. Jaxa-Rozen and J. Kwakkel|052a2b1231dcc08071a2a9a96ed8e7b4177e1a30
 2015|Fuzzy Logic for Social Simulation Using NetLogo|10.18564/jasss.2885|25|0|L. Izquierdo and D. Olaru and S. Izquierdo and S. Purchase and G. Soutar|5bb0537eb0502408528c9cbbafb22c70ab9dd684
 2015|Extracting OWL Ontologies from Agent-Based Models: A Netlogo Extension|10.18564/jasss.2810|13|2|J. Gareth Polhill|80230019782bf7408c482bc57efd66630024fdae
 2012|NetLogo — An alternative way of simulating mobile ad hoc networks|10.1109/WMNC.2012.6416163|9|0|Miroslav Babis and P. Magula|1037a275f7ed01bd6050cb439982194c3b0ef6de
 2015|An agent-based simulation of a release process for encapsulated flavour using the NetLogo platform|10.1002/FFJ.3234|7|0|M. Zandi and M. Mohebbi|922a7bdd88741781baf8d8504392e22c6d806c4d
 2020|LevelSpace: A NetLogo Extension for Multi-Level Agent-Based Modeling|10.18564/jasss.4130|6|0|A. Hjorth and Bryan Head and C. Brady and U. Wilensky|a44458e7303525a64f1ed72eb6f24d66bef7b328
 2012|An Introduction to the NetLogo Modeling Environment|10.1007/978-1-4614-1257-1_3|3|0|D. Stigberg|ad2c584049fe38277ccd1aa3f2fbaaa6444c26b6
 2015|Мультиагентное моделирование в среде NetLogo|10.12731/2306-1561-2015-1-2|1|0|Konstantin Nikolaevich Mezencev|785b7e13308b0b9e23f5a8fc79436c8daa0ddb2f
 2016|HLogo: A Haskell STM-Based Parallel Variant of NetLogo|10.1007/978-3-319-69832-8_7|1|0|Nikolaos Bezirgiannis and I. Prasetya and I. Sakellariou|12db86f6a9cbc5175baf0b7e53424a8f5382b919
