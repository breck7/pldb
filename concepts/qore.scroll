import ../code/conceptPage.scroll

id qore
name Qore
appeared 2006
creators David Nichols
tags pl
website http://qore.org/
fileExtensions q qm qtest
writtenIn cpp cmake bourne-shell make m4 yaml vim-script svg assembly-language xml html markdown json lisp css

repoStats
 firstCommit 2006
 commits 13852
 committers 51
 files 2122
 newestCommit 2024
country Czech Republic
originCommunity https://github.com/qorelanguage

leachim6 Qore
 filepath q/Qore.q
 fileExtensions q
 example
  #!/usr/bin/env qore
  %exec-class HelloWorld
  class HelloWorld
  {
      constructor()
      {
  	    background $.say("Hello World");
      }
      private say($arg)
      {
  	    printf("%s\n", $arg);
      }
  }

githubRepo https://github.com/qorelanguage/qore
 firstCommit 2006
 stars 58
 forks 10
 subscribers 16
 created 2015
 updated 2024
 description Qore Programming Language
 issues 239

printToken printf
stringToken "

hasPrintDebugging true
hasStrings true
 "Hello world"

wikipedia https://en.wikipedia.org/wiki/Qore_(programming_language)
 summary Qore is an interpreted, high-level, general-purpose, garbage collected  dynamic programming language, featuring support for code embedding and sandboxing with optional strong typing and a focus on fundamental support for multithreading and SMP scalability. Qore is unique because it is an interpreted scripting language with fundamental support for multithreading (meaning more than one part of the same code can run at the same time), and additionally because it features automatic memory management (meaning programmers do not have to allocate and free memory explicitly) while also supporting the RAII idiom with destructors for scope-based resource management and exception-safe programming.  This is due to Qore's unique prompt collection implementation for garbage collection.
 backlinksCount 9
 pageId 33850384
 dailyPageViews 6

domainName qore.org
 registered 2008
