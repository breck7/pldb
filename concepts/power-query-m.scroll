../code/conceptPage.scroll

id power-query-m
name PowerQuery M
appeared 2015
tags queryLanguage
website https://docs.microsoft.com/en-us/powerquery-m/
aka m
aka powerquery
description The Power Query M formula language is optimized for building highly flexible data mashup queries. It's a functional, case sensitive language similar to F#.
lab Microsoft

monaco powerquery
reference https://docs.microsoft.com/en-us/powerquery-m/power-query-m-type-system

example
 "Hello World"             // a text value
 123                       // a number
 1 + 2                     // sum of two numbers
 {1, 2, 3}                 // a list of three numbers
 [ x = 1, y = 2 + 3 ]      // a record containing two fields:
                           //        x and y
 (x, y) => x + y           // a function that computes a sum
 if 2 > 1 then 2 else 1    // a conditional expression
 let x = 1 + 1  in x * 2   // a let expression
 error "A"                 // error with message "A"
example
 let Orders = Table.FromRecords({
     [OrderID = 1, CustomerID = 1, Item = "fishing rod", Price = 100.0],
     [OrderID = 2, CustomerID = 1, Item = "1 lb. worms", Price = 5.0],
     [OrderID = 3, CustomerID = 2, Item = "fishing net", Price = 25.0]}),
     #"Capitalized Each Word" = Table.TransformColumns(Orders, {"Item", Text.Proper})
 in
     #"Capitalized Each Word"

keywords as each else error false if in is let meta otherwise section shared then true try type

lineCommentToken //
multiLineCommentTokens /* */
stringToken "
booleanTokens true false

hasLineComments true
 // A comment
hasComments true
 // A comment
hasSemanticIndentation false
hasStrings true
hasMultiLineComments true
 /* A comment
 */
hasBooleans true
hasConditionals true
