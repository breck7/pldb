MIPS architecture
=================

MIPS architecture is an instruction set architecture created in 1985.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221985%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#230 on PLDB
39 Years Old

Try now: Riju

MIPS is a reduced instruction set computer (RISC) instruction set architecture (ISA) developed by MIPS Technologies (formerly MIPS Computer Systems). The early MIPS architectures were 32-bit, with 64-bit versions added later. There are multiple versions of MIPS: including MIPS I, II, III, IV, and V; as well as five releases of MIPS32/64 (for 32- and 64-bit implementations, respectively). Read more on Wikipedia...
 https://en.wikipedia.org/wiki/MIPS_architecture

- MIPS architecture Wikipedia page
 https://en.wikipedia.org/wiki/MIPS_architecture
- MIPS architecture docs
 https://www.mips.com/products/architectures/mips32-2/
- MIPS architecture first developed in MIPS Technologies and Imagination Technologies
- Monaco package for syntax highlighting MIPS architecture
- Indeed.com has 12 matches for "mips engineer".

	.text
	.global main
main:
	li $v0, 5001
	li $a0, 1
	dla $a1, message
	li $a2, 14
	syscall
	li $v0, 5058
	li $a0, 0
	syscall
	.data
message:
	.string &quot;Hello, world!\n&quot;

.data
hello_world: .asciiz &quot;Hello World&quot;

.text
main:
  li $v0, 4            # Load syscommand print_string
  la $a0, hello_world  # Load hello_world string into register $a0
  syscall              # Print the string
  jr $ra               # Return

.data .text syscall trap add addu addi addiu and andi div divu mult multu nor or ori sll slv sra srav srl srlv sub subu xor xori lhi lho lhi llo slt slti sltu sltiu beq bgtz blez bne j jal jalr jr lb lbu lh lhu lw li la sb sh sw mfhi mflo mthi mtlo move

Language features
======================================================

row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  # A comment
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Token ###
 Example
  ### A comment
  ###
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token #
 Example
  # A comment
row
 Feature Regular Expression Syntax Sugar
 FeatureLink ../features/hasRegularExpressionsSyntaxSugar.html
 Supported ✓
 Token 
 Example
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token "
 Example
