printViewSourceBadge

VEX
===

VEX is a notation created in 1995 by Wayne Citrin and Richard Hall and Benjamin Zorn.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221995%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1995
 https://pldb.io/concepts/../lists/creators.html#q=Wayne%20Citrin Wayne Citrin
 https://pldb.io/concepts/../lists/creators.html#q=Richard%20Hall Richard Hall
 https://pldb.io/concepts/../lists/creators.html#q=Benjamin%20Zorn Benjamin Zorn

#4462 on PLDB
29 Years Old

The lambda calculus is a formal symbolic term rewrite system that has been used for many years both as a mechanism for defining the semantics of programming languages, and as the basis for functional programming languages. In this paper, we describe a completely visual representation for lambda expressions, VEX, that has several advantages over traditional textual lambda calculus. Although VEX is designed as an expression-oriented component of VIPR [3, 4], it can also be used in teaching the concepts of lambda calculus as a replacement for or augmentation to the teaching of traditional textual rewrite rules. Many semantic issues in lambda calculus that are confusing to students, including substitution, free variables, and binding, become apparent and explicit in VEX.

- Tags: notation
- Read more about VEX on the web: 1.
 http://users.encs.concordia.ca/~haarslev/vl95www/html-papers/citrin/citrin.html 1.

printViewSource
