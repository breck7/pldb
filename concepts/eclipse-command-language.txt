Eclipse Command Language
========================

Eclipse Command Language is a programming language created in 2008.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222008%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#808 on PLDB
16 Years Old
0 Repos

- There are at least 0 Eclipse Command Language repos on GitHub
- Eclipse Command Language first developed in Eclipse Foundation
- The  Google BigQuery Public Dataset GitHub snapshot shows 24 users using Eclipse Command Language in 24 repos on GitHub
- Monaco package for syntax highlighting Eclipse Command Language
- GitHub supports syntax highlighting for Eclipse Command Language
- Read more about Eclipse Command Language on the web: 1.
 https://www.eclipse.org/rcptt/documentation/userguide/ecl/

:- lib(ic).

/**
 * Question 1.11
 * vabs(?Val, ?AbsVal)
 */
vabs(Val, AbsVal):-
	AbsVal #&gt; 0,
	(
		Val #= AbsVal
	;
		Val #= -AbsVal
	),
	labeling([Val, AbsVal]).

/**
 * vabsIC(?Val, ?AbsVal)
 */
vabsIC(Val, AbsVal):-
	AbsVal #&gt; 0,
	Val #= AbsVal or Val #= -AbsVal,
	labeling([Val, AbsVal]).

/**
 * Question 1.12
 */
% X #:: -10..10, vabs(X, Y).
% X #:: -10..10, vabsIC(X, Y).

/**
 * Question 1.13
 * faitListe(?ListVar, ?Taille, +Min, +Max)
 */
faitListe([], 0, _, _):-!.
faitListe([First|Rest], Taille, Min, Max):-
	First #:: Min..Max,
	Taille1 #= Taille - 1,
	faitListe(Rest, Taille1, Min, Max).

/**
 * Question 1.14
 * suite(?ListVar)
 */
suite([Xi, Xi1, Xi2]):-
	checkRelation(Xi, Xi1, Xi2).
suite([Xi, Xi1, Xi2|Rest]):-
	checkRelation(Xi, Xi1, Xi2),
	suite([Xi1, Xi2|Rest]).

/**
 * checkRelation(?Xi, ?Xi1, ?Xi2)
 */
checkRelation(Xi, Xi1, Xi2):-
	vabs(Xi1, VabsXi1),
	Xi2 #= VabsXi1 - Xi.

/**
 * Question 1.15
 * checkPeriode(+ListVar).
 */
% TODO Any better solution?
checkPeriode(ListVar):-
	length(ListVar, Length),
	Length &lt; 10.
checkPeriode([X1, X2, X3, X4, X5, X6, X7, X8, X9, X10|Rest]):-
	X1 =:= X10,
	checkPeriode([X2, X3, X4, X5, X6, X7, X8, X9, X10|Rest]).
% faitListe(ListVar, 18, -9, 9), suite(ListVar), checkPeriode(ListVar). =&gt; 99 solutions

/**
 * Tests
 */
/*
vabs(5, 5). =&gt; Yes
vabs(5, -5). =&gt; No
vabs(-5, 5). =&gt; Yes
vabs(X, 5).
vabs(X, AbsX).
vabsIC(5, 5). =&gt; Yes
vabsIC(5, -5). =&gt; No
vabsIC(-5, 5). =&gt; Yes
vabsIC(X, 5).
vabsIC(X, AbsX).

faitListe(ListVar, 5, 1, 3). =&gt; 243 solutions
faitListe([_, _, _, _, _], Taille, 1, 3). =&gt; Taille = 5 !!!!!!!!!!!!!!!!

faitListe(ListVar, 18, -9, 9), suite(ListVar). =&gt; 99 solutions
*/

__compressed__ after all and any as atmost before beginc best between case cluster compressed compression const counter csv default descend embed encoding encrypt end endc endembed endmacro enum escape except exclusive expire export extend fail few fileposition first flat forward from full function functionmacro group grouped heading hole ifblock import in inner interface internal joined keep keyed last left limit linkcounted literal little_endian load local locale lookup lzw macro many maxcount maxlength min skew module mofn multiple named namespace nocase noroot noscan nosort not noxpath of onfail only opt or outer overwrite packed partition penalty physicallength pipe prefetch quote record repeat retry return right right1 right2 rows rowset scan scope self separator service shared skew skip smart soapaction sql stable store terminator thor threshold timelimit timeout token transform trim type unicodeorder unordered unsorted unstable update use validate virtual whole width wild within wnotrim xml xpath

Language features
======================================================

row
 Feature Functions
 FeatureLink ../features/hasFunctions.html
 Supported ✓
 Token 
 Example
row
 Feature Constants
 FeatureLink ../features/hasConstants.html
 Supported ✓
 Token 
 Example
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token 
 Example
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Token /* */
 Example
  /* A comment
  */
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  % A comment
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token %
 Example
  % A comment
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
