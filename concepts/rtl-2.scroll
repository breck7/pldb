../code/conceptPage.scroll

id rtl-2
name RTL/2
appeared 1972
creators John Barnes
tags pl

country United Kingdom
originCommunity Imperial Chemical Industries plc

wikipedia https://en.wikipedia.org/wiki/RTL/2
 example
  RTL/2 Ref 1  - Language Specification
  RTL/2 Ref 2  - Introduction to RTL/2
  RTL/2 Ref 3  - RTL/2 Training Manual
  RTL/2 Ref 4  - System Standards
  RTL/2 Ref 5  - Stream I/O
  RTL/2 Ref 18 - Hints on writing RTL/2 Programs
  RTL/2 Ref 26 - Language Reference Card
  RTL/2 Ref 39 - Run time environment on the PDP-11
  RTL/2 Ref 63 - User Manual for the PDP-11 under RSX-11M
  RTL/2 Ref 107- VAX/VMS RTL/2 User Manual
  RTL/2 REF 130- The RTL/2 32 bit run time environment on the VAX
 summary RTL/2 was a high-level programming language developed at Imperial Chemical Industries Ltd by J.G.P. Barnes. It was originally used internally within ICI but was distributed by SPL International in 1974 It was designed for use in real-time computing (hence the initials RTL = real-time language). Based on concepts from Algol 68, it was intended to be a small, simple language. RTL/2 was standardised in 1980 by the British Standards Institution.RTL/2 was a strongly typed language with separate compilation. The compilation units contained one or more items known as "bricks", i.e.:  procedure bricks, data bricks, stack bricks.A procedure brick was a procedure, which may or may not return a (scalar) value, have (scalar) parameters, or have local (scalar) variables. The entry mechanism and implementation of local variables was re-entrant. Non-scalar data could only be accessed via reference (so-called REF variables were considered scalar). A data brick was a named static collection of scalars, arrays and records. Programmers had to implement memory management themselves (there was no heap or garbage collection). A stack brick was an area of storage reserved for running all the procedures of a single process and contained the call stack, local variables and other housekeeping items. The extent to which stack bricks were actually used varied depending upon the host environment in which RTL/2 programs actually ran. Access to the host environment of an RTL/2 program was provided via special procedure and data bricks called SVC procedures and SVC data. These were accessible in RTL/2 but implemented in some other language in the host environment.
 created 2010
 backlinksCount 7
 pageId 28045268
 revisionCount 20
 dailyPageViews 5
 appeared 1972

hopl https://hopl.info/showlanguage.prx?exp=596
