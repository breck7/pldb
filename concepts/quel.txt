QUEL
====

QUEL is a query language created in 1976 by Michael Stonebraker.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221976%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Michael%20Stonebraker

#1620 on PLDB
48 Years Old

QUEL is a relational database query language, based on tuple relational calculus, with some similarities to SQL.  It was created as a part of the Ingres DBMS effort at University of California, Berkeley, based on Codd's earlier suggested but not implemented Data Sub-Language ALPHA.  QUEL was used for a short time in most products based on the freely available Ingres source code, most notably in an implementation called POSTQUEL supported by POSTGRES. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/QUEL_query_languages

- QUEL Wikipedia page
 https://en.wikipedia.org/wiki/QUEL_query_languages
- QUEL first developed in University of California, Berkeley
- See also: (1 related languages)SQL

range of E is EMPLOYEE
retrieve into W
(COMP = E.Salary / (E.Age - 18))
where E.Name = &quot;Jones&quot;

retrieve (a=count(y.i by y.d where y.str = &quot;ii*&quot; or y.str = &quot;foo&quot;),b=max(count(y.i by y.d)))
