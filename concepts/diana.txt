DIANA
=====

DIANA, aka Descriptive Intermediate Attributed Notation for Ada, is an intermediate representation language created in 1980.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221980%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1980

#2335 on PLDB
44 Years Old

DIANA, the Descriptive Intermediate Attributed Notation for Ada, is an intermediate language used to represent the semantics of an Ada program. It was originally designed as an interface between the front end (syntactic analysis) and middle (semantic analysis) of the compiler on the one hand and the back end (code generation and optimization) on the other. It is also used as an internal representation by other language tools. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/DIANA_(intermediate_language) Read more on Wikipedia...

- Tags: intermediate representation language
- DIANA on HOPL
 https://hopl.info/showlanguage.prx?exp=949 DIANA on HOPL
- See also: (3 related languages) Ada, PL/SQL, IDL specification language
