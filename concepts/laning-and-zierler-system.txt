Laning and Zierler system
=========================

Laning and Zierler system is a programming language created in 1953.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221953%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#2352 on PLDB
71 Years Old

The Laning and Zierler system (sometimes called "George" by its users) was one of the first operating algebraic compilers, that is, a system capable of accepting mathematical formulae in algebraic notation and producing equivalent machine code (the term compiler had not yet been invented and the system was referred to as "an interpretive program"). It was implemented in 1952 for the MIT WHIRLWIND by J. Halcombe Laning and Neal Zierler. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Laning_and_Zierler_system

- Laning and Zierler system Wikipedia page
 https://en.wikipedia.org/wiki/Laning_and_Zierler_system
- Laning and Zierler system first developed in Massachusetts Institute of Technology
- Laning and Zierler system on HOPL
 https://hopl.info/showlanguage.prx?exp=6
- See also: (2 related languages)Speedcoding, Punched tape

1 x = 0,
   z = 1 - x2/2 + x4/2·3·4 - x6/2·3·4·5·6
     + x8/2·3·4·5·6·7·8 - x10/2·3·4·5·6·7·8·9·10,
