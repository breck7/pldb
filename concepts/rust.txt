Rust
====

Rust is an open source programming language created in 2010 by Graydon Hoare.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222010%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Graydon%20Hoare

#20 on PLDB
14 Years Old
357k Repos

git clone https://github.com/rust-lang/rust

Try now: Riju · TIO · Replit

Rust is a systems programming language sponsored by Mozilla Research, which describes it as a "safe, concurrent, practical language," supporting functional and imperative-procedural paradigms. Rust is syntactically similar to C++, but its designers intend it to provide better memory safety while maintaining performance. Rust is an open source programming language. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Rust_(programming_language)

- Rust website
 https://www.rust-lang.org
- Rust Wikipedia page
 https://en.wikipedia.org/wiki/Rust_(programming_language)
- Rust is developed on GitHub and has 77,242 stars
- Watch the history of the Rust repo visualized with Gource
- PLDB has 2 documentation sites for Rust: www.rust-lang.org, devdocs.io
- There are at least 356,891 Rust repos on GitHub
- Rust first developed in Mozilla
- Rust is written in Rust, Markdown, Diff, TOML, Make, YAML, JavaScript, Bourne shell, HTML, C, Dockerfile, JSON, Python, TypeScript, Puppet, XML, C++, SVG, CSS, Assembly language, AsciiDoc, PowerShell, XSLT, Z shell, CMake, WebAssembly, Logos, Bash, D
- Rust on Twitter
 https://twitter.com/rustlang
- The  Google BigQuery Public Dataset GitHub snapshot shows 9k users using Rust in 16k repos on GitHub
- Check out the 122 Rust meetup groups on Meetup.com.
- There are 186,942 members in the Rust subreddit
- There are 1,227 Project Euler users using Rust
- In the 2021 StackOverflow developer survey Rust programmers reported a median salary of $77,530. 7% of respondents reported using Rust. 5,799 programmers reported using Rust, and 15,865 said they wanted to use it
- Explore Rust snippets on Rosetta Code
- Rust is supported by the GDB
- Rust ranks #31 in the TIOBE Index
- Rust Ubuntu package
 https://packages.ubuntu.com/jammy/rustc
- Rust LSP implementation
- CodeMirror package for syntax highlighting Rust
- Monaco package for syntax highlighting Rust
- Pygments supports syntax highlighting for Rust
- GitHub supports syntax highlighting for Rust
- Rust appears in the Quine Relay project
- There is 1 Jupyter Kernel for Rust
- There is a central package repository for Rust
- Official Blog page for Rust
 https://blog.rust-lang.org/
- Frequently Asked Questions for Rust
 https://prev.rust-lang.org/en-US/faq.html
- Indeed.com has 141 matches for "rust engineer".
- rust-lang.org was registered in 2010
- See also: (28 related languages)Linux, FreeBSD, Android, iOS, ALEF, C#, Cyclone, Erlang, Haskell, Haxe, Limbo, Newsqueak, Ruby, Scheme, Standard ML, Swift, Crystal, Elm, Idris, C, ML, Go, Java, OCaml, LLVM IR, D, Nim, Emacs
- Read more about Rust on the web: 1.
 https://blog.rust-lang.org/2018/11/27/Rust-survey-2018.html
- 95 languages in PLDB linking to Rust: Ace Editor, Alumina, Amber, Ante, Ante, aretext, arret, astro, Bend, BlazeX, Calypso, Candy, carth, Chapel, cosh, Cotton, crush, Curly, Cyber, cytosol, Dafny, datafun, Deno, Differential Datalog, edgedb, Enso, erg, Esoteric Reaction, Factor, fish, FlatBuffers, gleam, Glicol, gluon, hacspec, HHVM, hurl, Hush, inko, invokator, Jazz, Jingo, jsparagus, Jule, Kami, KavaScript, leo-editor, Linux, Luna, mal, Markus, Mech, Melody, Mewl, micro-mitten, mlatu, MongoDB, mun-lang, Node.js, noulith, Nushell, Observable Framework, Passerine, pikelet, Pomsky, Project Mentat, PRQL, Pygments, Reason, rio, Roc, Ron, Ruby, Rust, Serious, Simple Binary Encoding, Snowball, svgbob, tablam, Tao, tsar, UCG, Uiua, unseemly, Uniform eXchange Format, Veryl, wasmer, weebasic, Wing, WLambda, Worst, Wu, xlwings-editor, xsv-app, zz

// Type your code here, or load an example.
pub fn square(num: i32) -&gt; i32 {
    num * num
}

// If you use `main()`, declare it as `pub` to see it in the output:
// pub fn main() { ... }

fn main() {
    println!(&quot;Hello, world!&quot;);
}

fn main() {
    println!(&quot;Hello World&quot;);
}

// Hello world in Rust

fn main() {
    println!(&quot;Hello World!&quot;);
}

extern crate foo;
extern crate bar;

use foo::{self, quix};
use bar::car::*;
use bar;

fn main() {
    println!(&quot;Hello {}&quot;, &quot;World&quot;);

    panic!(&quot;Goodbye&quot;)
}

abstract alignof as become box break const continue crate do else enum extern false final fn for if impl in let loop macro match mod move mut offsetof override priv proc pub pure ref return Self self sizeof static struct super trait true type typeof unsafe unsized use virtual where while yield

Language features
======================================================

row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported ✓
 Token 
 Example
row
 Feature Constants
 FeatureLink ../features/hasConstants.html
 Supported ✓
 Token 
 Example
row
 Feature While Loops
 FeatureLink ../features/hasWhileLoops.html
 Supported ✓
 Token 
 Example
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Token true false
 Example
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token //
 Example
  // A comment
row
 Feature Type Inference
 FeatureLink ../features/hasTypeInference.html
 Supported ✓
 Token 
 Example
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Token println!
 Example
  println!("Hi");
row
 Feature Pattern Matching
 FeatureLink ../features/hasPatternMatching.html
 Supported ✓
 Token 
 Example
row
 Feature Operator Overloading
 FeatureLink ../features/hasOperatorOverloading.html
 Supported ✓
 Token 
 Example
row
 Feature Macros
 FeatureLink ../features/hasMacros.html
 Supported ✓
 Token 
 Example
  // https://doc.rust-lang.org/book/ch19-06-macros.html
  #[macro_export]
  macro_rules! vec {
      ( $( $x:expr ),* ) => {
          {
              let mut temp_vec = Vec::new();
              $(
                  temp_vec.push($x);
              )*
              temp_vec
          }
      };
  }
row
 Feature Iterators
 FeatureLink ../features/hasIterators.html
 Supported ✓
 Token 
 Example
  for n in 0..42 {
    println!("{}", n);
  }
row
 Feature File Imports
 FeatureLink ../features/hasImports.html
 Supported ✓
 Token 
 Example
  use ::std::fs;  // Imports from the `std` crate, not the module below.
  use self::std::fs as self_fs;  // Imports the module below.
  mod my;
  use self::foo::Zoo as _;
  #[path = "foo.rs"]
  mod c;
row
 Feature Directives
 FeatureLink ../features/hasDirectives.html
 Supported ✓
 Token 
 Example
  // A conditionally-compiled module
  #[cfg(target_os = "linux")]
  mod bar {
      /* ... */
  }
  // General metadata applied to the enclosing module or crate.
  #![crate_type = "lib"]
  // A function marked as a unit test
  #[test]
  fn test_foo() {
      /* ... */
  }
  // A lint attribute used to suppress a warning/error
  #[allow(non_camel_case_types)]
  type int8_t = i8;
  
  // Inner attribute applies to the entire function.
  fn some_unused_variables() {
    #![allow(unused_variables)]
  
    let x = ();
    let y = ();
    let z = ();
  }
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Token /* */
 Example
  /* A comment
  */
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  // https://doc.rust-lang.org/reference/comments.html
  // a comment
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token "
 Example
  "hello world"
row
 Feature Case Insensitive Identifiers
 FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
 Supported X
 Token 
 Example
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
