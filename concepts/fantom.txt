Fantom
======

Fantom is an open source programming language created in 2005.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222005%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2005

#483 on PLDB
19 Years Old
176 Repos

Fantom is a general purpose object-oriented programming language created by Brian and Andy Frank that runs on the Java Runtime Environment (JRE), JavaScript, and the .NET Common Language Runtime (CLR) (.NET support is considered "prototype" status). Its primary design goal is to provide a standard library API that abstracts away the question of whether the code will ultimately run on the JRE or CLR. Like C# and Java, Fantom uses a curly brace syntax. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Fantom_(programming_language) Read more on Wikipedia...

- Tags: programming language
- There are at least 176 Fantom repos on GitHub
- Early development of Fantom happened in https://github.com/fantom-lang
- The  Google BigQuery Public Dataset GitHub snapshot shows 36 users using Fantom in 38 repos on GitHub
- Explore Fantom snippets on Rosetta Code
- Fantom appears in the TIOBE Index
- Pygments supports syntax highlighting for Fantom
- GitHub supports syntax highlighting for Fantom
- fantom.org was registered in 2003
- See also: (11 related languages) C#, Java, Scala, Ruby, Erlang, JavaScript, Boo, Ceylon, Gosu, Groovy, Kotlin

// Hello from Fantom!
class HelloWorld {
  static Void main() {
    echo(&quot;Hello World&quot;)
  }
}

/*
 * Author: Robert Koeninger
 * License: WTFPL (http://www.wtfpl.net/)
 */

mixin Expr
{
  abstract Obj? eval()
}

class Constant : Expr
{
  Obj? value

  new make(Obj? value) { this.value = value }
  override Obj? eval() { value }
}

enum class Op
{
  plus,
  minus
}

class Infix : Expr
{
  Op op
  Expr left
  Expr right

  new make(Op op, Expr left, Expr right)
  {
    this.op = op
    this.left = left
    this.right = right
  }

  override Obj? eval()
  {
    switch (op)
    {
      case Op.plus:
        return (Int)left.eval() + (Int)right.eval()
      case Op.minus:
        return (Int)left.eval() - (Int)right.eval()
      default:
        throw Err(&quot;undefined Op&quot;)
    }
  }
}

// Hello from Fantom!
class HelloWorld
{
  static Void main()
  {
    echo(&quot;Hello, World!&quot;)
  }
}

Language features
======================================================

row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
  "Hello world"
 Token "
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Example
  /* A comment
  */
 Token /* */
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token echo
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  // A comment
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  // A comment
 Token //
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token
