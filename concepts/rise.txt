rise
====

rise is a programming language created in 2020.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222020%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2020

#3149 on PLDB
4 Years Old

Rise is a functional pattern-based language in the style of Lift. Rise provides a set of data-parallel high-level patterns that are used to describe computations over higher dimensional arrays (aka tensors) in an abstract way. For example, the map pattern applies a given function to every element of the input array. The zip pattern combines two input arrays pairwise to produce an output array of pairs. The reduce pattern is customized with a binary reduction operator (such as addition), a matching neutral element (such as zero), and an input array that is reduced to a single value (such as the sum of all elements).

- Tags: programming language
- Early development of rise happened in University of Glasgow
- Read more about rise on the web: 1.
 https://michel.steuwer.info/files/publications/2020/accML.pdf 1.

fun(A : N.K.float =&gt; fun(B : K.M.float =&gt;
 A |&gt; map(fun(arow =&gt;
  B |&gt; map(fun(bcol =&gt;
   zip(arow, bcol) |&gt; map(*) |&gt; reduce(+, 0) )) ))))

View source
