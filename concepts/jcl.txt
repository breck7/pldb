JCL
===

JCL, aka Job Control Language, is a programming language created in 1964.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221964%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#419 on PLDB
60 Years Old

Job Control Language (JCL) is a name for scripting languages used on IBM mainframe operating systems to instruct the system on how to run a batch job or start a subsystem. More specifically, the purpose of JCL is to say which programs to run, using which files or devices  for input or output, and at times to also indicate under what conditions to skip a step. There are two distinct IBM Job Control languages: one for the operating system lineage that begins with DOS/360 and whose latest member is z/VSE; and the other for the lineage from OS/360 to z/OS, the latter now including JES extensions, Job Entry Control Language (JECL). Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Job_Control_Language

- JCL Wikipedia page
 https://en.wikipedia.org/wiki/Job_Control_Language
- JCL first developed in IBM
- Explore JCL snippets on Rosetta Code
- JCL on HOPL
 https://hopl.info/showlanguage.prx?exp=2134
- Pygments supports syntax highlighting for JCL
- See also: (3 related languages)Unix, Assembly language, CLIST
- 2 languages in PLDB linking to JCL: cloc, Pygments

* $ JOB JNM=NAME,DISP=K,CLASS=2

[some JCL statements here]

* $ EOJ

Language features
======================================================

row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token 
 Example
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
