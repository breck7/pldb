import ../code/conceptPage.scroll

id vale-assembly
name Vale
appeared 2017
creators Chris Hawblitzel
tags assembly
latestVersion v0.3.20
standsFor Verified Assembly Language for Everest
description Vale is a tool for constructing formally verified high-performance assembly language code, with an emphasis on cryptographic code. It uses existing verification frameworks, such as Dafny and F*, for formal verification. It supports multiple architectures, such as x86, x64, and ARM, and multiple platforms, such as Windows, Mac, and Linux. Additional architectures and platforms can be supported with no changes to the Vale tool.
writtenIn restructuredtext f-sharp xml python bourne-shell markdown csharp dockerfile c bash powershell json ocaml make

related fstar
repoStats
 firstCommit 2017
 commits 1906
 committers 31
 files 303
 newestCommit 2024

example
 procedure ReadA(ghost a:seq(uint32),inline b:bool)
  reads r0; mem;
  modifies r1;
  requires
   length(a) >= 3;
   a[0] <= 100;
   a[1] <= 100;
   forall i :: 0 <= i < length(a) ==>
    InMem(r0 + 4 * i, mem)
    && mem[r0 + 4 * i] == a[i];
  ensures
   b ==> r1 == a[0] + 1;
   !b ==> r1 == a[1] + 1;
 {
  inline if (b) {
   LDR(r1, r0, 0); //load memory [r0+0] into r1
   AddOne(r1);
  } else {
   LDR(r1, r0, 4); //load memory [r0+4] into r1
   AddOne(r1);
  }
 }
 procedure{:recursive} AddNToR7(inline n:nat)
  modifies r7;
  requires r7 + n <= 0xffffffff;
  ensures r7 == old(r7) + n;
 {
  inline if (n > 0) {
   AddOne(r7);
   AddNToR7(n - 1);
 }

githubRepo https://github.com/project-everest/vale
 firstCommit 2017
 stars 261
 forks 21
 subscribers 31
 created 2017
 updated 2024
 description Verified Assembly Language for Everest
 issues 19

lineCommentToken //

hasLineComments true
 // A comment
hasComments true
 // A comment
hasSemanticIndentation false
