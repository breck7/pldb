Ravenscar profile
=================

Ravenscar profile is a programming language created in 1997.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221997%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1997

#3642 on PLDB
27 Years Old

The Ravenscar profile is a subset of the Ada tasking features designed for safety-critical hard real-time computing. It was defined by a separate technical report in Ada 95; it is now part of the Ada 2012 Standard. It has been named after the English village of Ravenscar, the location of the 8th International Real-Time Ada Workshop (IRTAW 8).. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Ravenscar_profile Read more on Wikipedia...

- Tags: programming language
- Early development of Ravenscar profile happened in University of York
- See also: (2 related languages) Ada, Apache Spark

pragma Task_Dispatching_Policy (FIFO_Within_Priorities);
pragma Locking_Policy (Ceiling_Locking);
pragma Detect_Blocking;
pragma Restrictions (
                 No_Abort_Statements,
                 No_Dynamic_Attachment,
                 No_Dynamic_Priorities,
                 No_Implicit_Heap_Allocations,
                 No_Local_Protected_Objects,
                 No_Local_Timing_Events,
                 No_Protected_Type_Allocators,
                 No_Relative_Delay,
                 No_Requeue_Statements,
                 No_Select_Statements,
                 No_Specific_Termination_Handlers,
                 No_Task_Allocators,
                 No_Task_Hierarchy,
                 No_Task_Termination,
                 Simple_Barriers,
                 Max_Entry_Queue_Length =&gt; 1,
                 Max_Protected_Entries  =&gt; 1,
                 Max_Task_Entries       =&gt; 0,
                 No_Dependence =&gt; Ada.Asynchronous_Task_Control,
                 No_Dependence =&gt; Ada.Calendar,
                 No_Dependence =&gt; Ada.Execution_Time.Group_Budget,
                 No_Dependence =&gt; Ada.Execution_Time.Timers,
                 No_Dependence =&gt; Ada.Task_Attributes);

View source
