Compiler-Compiler
=================

Compiler-Compiler is a programming language created in 1963.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221963%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#1727 on PLDB
61 Years Old

In computer science, a compiler-compiler or compiler generator is a programming tool that creates a parser, interpreter, or compiler from some form of formal description of a programming language and machine. The input may be a text file containing the grammar written in BNF or EBNF that defines the syntax of a programming language, and whose generated output is some source code of the parser for the programming language, although other definitions exist. Usually, the resulting source code will have to be extended upon before a complete compiler emerges.A metacompiler is a software development tool used chiefly in the construction of compilers, translators, and interpreters for other programming languages. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Compiler-compiler

- Compiler-Compiler Wikipedia page
 https://en.wikipedia.org/wiki/Compiler-compiler
- Compiler-Compiler on HOPL
 https://hopl.info/showlanguage.prx?exp=179
- See also: (14 related languages)ANTLR, BASIC, ALGOL 60, Atlas Autocode, Coco/R, Bison, JavaCC, LISP 2, Lisp, Yacc, XPL, PEG, DOI, ISBN
- Read more about Compiler-Compiler on Semantic Scholar: 1.
 https://semanticscholar.org/paper/b1f4f9e12792a745e2229eca84cfe886496bb4dd

expr_gen(ADD[expr_gen(x),expr_gen(y)]) =&gt;
                                &lt;AR + (x*16)+y;&gt;
                                releasereg(y);
                                return x;
               (SUB[expr_gen(x),expr_gen(y)])=&gt;
                                &lt;SR + (x*16)+y;&gt;
                                releasereg(y);
                                return x;
               (MUL[expr_gen(x),expr_gen(y)])=&gt;
                              .
                              .
                              .
               (x)=&gt;     r1 = getreg();
                            load(r1, x);
                            return r1;
...
