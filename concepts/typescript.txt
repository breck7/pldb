TypeScript
==========

TypeScript is an open source programming language created in 2012 by Anders Hejlsberg.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222012%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2012
 https://pldb.io/concepts/../lists/creators.html#q=Anders%20Hejlsberg Anders Hejlsberg

#14 on PLDB
12 Years Old
3m Repos

git clone https://github.com/microsoft/TypeScript

TypeScript is a free and open-source programming language developed and maintained by Microsoft. It is a strict syntactical superset of JavaScript, and adds optional static typing to the language. Anders Hejlsberg, lead architect of C# and creator of Delphi and Turbo Pascal, has worked on the development of TypeScript. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/TypeScript Read more on Wikipedia...

- Tags: programming language
- TypeScript is developed on GitHub and has 99,410 stars
- Watch the history of the TypeScript repo visualized with Gource
- There are at least 3,281,749 TypeScript repos on GitHub
- TypeScript is a superset of JavaScript
- Early development of TypeScript happened in Microsoft
- TypeScript is written in TypeScript, JavaScript, JSON, Markdown, YAML, Diff, XML, Bourne shell, Dockerfile
- The  Google BigQuery Public Dataset GitHub snapshot shows 36k users using TypeScript in 48k repos on GitHub
- There are 87,839 members in the TypeScript subreddit
- In the 2021 StackOverflow developer survey TypeScript programmers reported a median salary of $59,172. 30% of respondents reported using TypeScript. 24,909 programmers reported using TypeScript, and 26,905 said they wanted to use it
- Explore TypeScript snippets on Rosetta Code
- TypeScript appears in the TIOBE Index
- TypeScript Ubuntu package
 https://packages.ubuntu.com/jammy/node-typescript TypeScript Ubuntu package
- TypeScript LSP implementation
- Monaco package for syntax highlighting TypeScript
- Pygments supports syntax highlighting for TypeScript
- GitHub supports syntax highlighting for TypeScript
- TypeScript appears in the Quine Relay project
- There is 1 Jupyter Kernel for TypeScript
- There is a central package repository for TypeScript
- Indeed.com has 1,542 matches for "typescript developer".
- typescriptlang.org was registered in 2012
- See also: (18 related languages) JavaScript, Java, C#, Delphi, Turbo Pascal, JQuery, MongoDB, D3.js, Visual Studio, Eclipse, Emacs, Vim, Sublime Text, Visual Studio Code, Apache Maven, Dart, CoffeeScript, Elm
- 156 PLDB concepts link to TypeScript: 11ty, Ace Editor, Argdown, arret, Apache Arrow, AssemblyScript, AT Protocol, Austral, Bicep, Bitsy, blur-markup-language, bosque, Broccoli, Bucklescript, Bun, buzz, Candy, Caramel, cat, Chapel, chevrotain, Ć, Civet, Claro, cloc, Closure Templates, codecept, CodeMirror, Cortex, D3.js, Deno, dex, Differential Datalog, TypeScript Type Declarations, Elpi, Elvish, emberjs-framework, Emscripten, Enso, erg, Eve, Fardlang, FlatBuffers, Flow9, FlowchartFun, GETlang, GHC, Gleam, Glisp, gridstudio-editor, Hera, Heron, HHVM, highlight.js, htmx, HuwCode, Hyperscript, Imba, Insitux, Jakt, jsil-compiler, json->url, JSON5, Koka, Kotlin, kumir, leo-editor, Lesma, Ligo, Link, lobster, Lodash, Luna, mal, Mapgen, Marko, Markwhen, Marp, Mask, Mastodon, MathJSON, Mathpix Markdown, MDX, Mech, Melody, mermaid, mochajs, Monaco Editor, Mond, neut, NilScript, Node.js, nomnoml, nulan, Observable Framework, Observable Plot, Obsidian, Ohayo, ohm, OK, Openverse, Parsers, PEG.js, penrose, Pod6, Podlite, Porffor, PostCSS, PROMETHEUS, PRQL, Pug, Quint, React Native, Recursive teXt, Rholang, Roc, rpscript, Rust, SandDance, Savi, Scroll Notation, SDMS, Seq, Serious, Slashdown, spiral, SQRL, Static Typescript, Storymatic, Superjson, Svelte, tao3d, Tawa, tea, Timpani, tldraw, Truth, tsquery, Twine, TypeScript, Uno, V, v8, vega-editor-app, Vega, Veryl, Virgil, Vue, Wasp, Wax, 文言文編程語言, Wing, Wonkey, xlwings-editor, Xtext, YoptaScript

console.log(&quot;Hello, world!&quot;);

console.log(&quot;Hello World&quot;);

// Hello world in TypeScript

alert(&#39;Hello world!&#39;);

console.log(&quot;Hello, World!&quot;);

class Person {
    private name: string;
    private age: number;
    private salary: number;

    constructor(name: string, age: number, salary: number) {
        this.name = name;
        this.age = age;
        this.salary = salary;
    }

    toString(): string {
        return `${this.name} (${this.age}) (${this.salary})`; // As of version 1.4
    }
}

Language features
======================================================

row
 Feature Standard Library
 FeatureLink ../features/hasStandardLibrary.html
 Supported ✓
 Example
  console.log("Hello, World!");
 Token 
row
 Feature hasGradualTypes
 FeatureLink ../features/hasGradualTypes.html
 Supported ✓
 Example
 Token 
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Example
  /* A comment
  */
 Token /* */
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  // A comment
 Token 
row
 Feature Algebraic Data Type
 FeatureLink ../features/hasAlgebraicTypes.html
 Supported ✓
 Example
  declare type numOrString = string | number
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  // A comment
 Token //
row
 Feature Union Types
 FeatureLink ../features/hasUnionTypes.html
 Supported ✓
 Example
  declare type numOrString = string | number
 Token 
row
 Feature Single-Type Arrays
 FeatureLink ../features/hasSingleTypeArrays.html
 Supported ✓
 Example
  const scores: int[]
 Token 
row
 Feature Type Inference
 FeatureLink ../features/hasTypeInference.html
 Supported ✓
 Example
 Token 
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
  "hello world"
 Token "
row
 Feature Type Parameters
 FeatureLink ../features/hasTypeParameters.html
 Supported ✓
 Example
  function identity(arg: T): T {
     return arg;
  }
 Token 
row
 Feature Static Typing
 FeatureLink ../features/hasStaticTyping.html
 Supported ✓
 Example
 Token 
row
 Feature Inheritance
 FeatureLink ../features/hasInheritance.html
 Supported ✓
 Example
  class B {}
  class A extends B {}
 Token 
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
  console.log("Hi")
 Token console.log
row
 Feature Namespaces
 FeatureLink ../features/hasNamespaces.html
 Supported ✓
 Example
  // Typescript even supports splitting namespaces across multiple files:
  // Validation.ts
  namespace Validation {
      export interface StringValidator {
          isAcceptable(s: string): boolean;
      }
  }
  // LettersOnlyValidator.ts
  /// 
  namespace Validation {
      const lettersRegexp = /^[A-Za-z]+$/;
      export class LettersOnlyValidator implements StringValidator {
          isAcceptable(s: string) {
              return lettersRegexp.test(s);
          }
      }
  }
 Token 
row
 Feature Mixins
 FeatureLink ../features/hasMixins.html
 Supported ✓
 Example
  // https://www.typescriptlang.org/docs/handbook/mixins.html
  class SmartObject implements Disposable, Activatable {
  }
  // Note: still need to do some runtime ops to make that work.
 Token 
row
 Feature Interfaces
 FeatureLink ../features/hasInterfaces.html
 Supported ✓
 Example
  // https://www.typescriptlang.org/docs/handbook/interfaces.html
  interface SquareConfig {
     color?: string;
     width?: number;
  }
 Token 
row
 Feature File Imports
 FeatureLink ../features/hasImports.html
 Supported ✓
 Example
  import { ZipCodeValidator } from "./ZipCodeValidator";
  /// 
  /// 
  import moo = module('moo');
  /// 
 Token 
row
 Feature Type Casting
 FeatureLink ../features/hasExplicitTypeCasting.html
 Supported ✓
 Example
  something;
 Token 
row
 Feature Classes
 FeatureLink ../features/hasClasses.html
 Supported ✓
 Example
  class Person {}
 Token 
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Example
  const result = true
 Token 
row
 Feature Generics
 FeatureLink ../features/hasGenerics.html
 Supported ✓
 Example
  function identity(arg: T): T {
     return arg;
  }
 Token 
row
 Feature Abstract Types
 FeatureLink ../features/hasAbstractTypes.html
 Supported ✓
 Example
  abstract class Animal {}
  class Dog extends Animal
 Token 
row
 Feature Access Modifiers
 FeatureLink ../features/hasAccessModifiers.html
 Supported ✓
 Example
  class Person {
    private _age = 2
    public get age() {
      return _age
    }
    protected year = 1990
  }
 Token 
row
 Feature Static Methods
 FeatureLink ../features/hasStaticMethods.html
 Supported ✓
 Example
  class Person {
    static sayHi() {
      console.log("Hello world")
    }
  }
 Token 
row
 Feature Enums
 FeatureLink ../features/hasEnums.html
 Supported ✓
 Example
  enum Direction {
   Up,
   Down
  }
 Token 
row
 Feature Case Insensitive Identifiers
 FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
 Supported X
 Example
 Token 
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token 
row
 Feature Operator Overloading
 FeatureLink ../features/hasOperatorOverloading.html
 Supported X
 Example
 Token
