Ring
====

Ring is an open source programming language created in 2016 by Mahmoud Fayed.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222016%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2016
 https://pldb.io/concepts/../lists/creators.html#q=Mahmoud%20Fayed Mahmoud Fayed

#361 on PLDB
8 Years Old
195 Repos

Ring is a dynamic and general-purpose programming language. It can be embedded in C/C++ projects, extended using C/C++ code and/or used as a standalone language. The supported programming paradigms are imperative, procedural, object-oriented, functional, Meta programming, declarative programming using nested structures, and natural programming. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Ring_(programming_language) Read more on Wikipedia...

- Tags: programming language
- There are at least 195 Ring repos on GitHub
- Early development of Ring happened in King Saud University
- The  Google BigQuery Public Dataset GitHub snapshot shows 3 users using Ring in 3 repos on GitHub
- Explore Ring snippets on Rosetta Code
- Ring appears in the TIOBE Index
- GitHub supports syntax highlighting for Ring
- ring-lang.net was registered in 2016
- See also: (9 related languages) C, Linux, Lua, Python, Ruby, C#, BASIC, QML, xBase
- 5 PLDB concepts link to Ring: Adept, cloc, Eiffel, RapidBatch, Zig

see &quot;Hello World&quot;

New App
{
        I want window
        The window title = &quot;hello world&quot;
}

Class App

        func geti
                if nIwantwindow = 0
                        nIwantwindow++
                ok

        func getwant
                if nIwantwindow = 1
                        nIwantwindow++
                ok

        func getwindow
                if nIwantwindow = 2
                        nIwantwindow= 0
                        see &quot;Instruction : I want window&quot; + nl
                ok
                if nWindowTitle = 0
                        nWindowTitle++
                ok

        func settitle cValue
                if nWindowTitle = 1
                        nWindowTitle=0
                        see &quot;Instruction : Window Title = &quot; + cValue + nl
                ok

        private

                # Attributes for the instruction I want window
                        i want window
                        nIwantwindow = 0
                # Attributes for the instruction Window title
                # Here we don&#39;t define the window attribute again
                        title
                        nWindowTitle = 0
                # Keywords to ignore, just give them any value
                        the=0

Language features
======================================================

row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
  "Hello world"
 Token "
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  # A comment
 Token #
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
 Token 
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token
