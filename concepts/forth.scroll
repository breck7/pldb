import ../code/conceptPage.scroll

id forth
name Forth
appeared 1970
creators Charles H. Moore
tags pl

clocExtensions 4th e4 f83 fb forth fpm fr frt ft fth rx fs f for
fileType text
wordRank 3664
docs https://www.forth.com/starting-forth/
codeMirror forth
rosettaCode http://www.rosettacode.org/wiki/Category:Forth
quineRelay Forth
replit https://repl.it/languages/forth
packageRepository https://theforth.net/
ubuntuPackage gforth
country United States
originCommunity National Radio Astronomy Observatory
projectEuler Forth
 memberCount
  2019 56
  2022 63

helloWorldCollection Forth
 ' Hello world in Forth
 
 ." Hello World" CR
pygmentsHighlighter Forth
 filename forth.py
 fileExtensions frt fs
rijuRepl https://riju.codes/forth
 example
  ." Hello, world!" CR
  
subreddit https://www.reddit.com/r/Forth/
leachim6 Forth
 filepath f/Forth.fth
 fileExtensions fth
 example
  .( Hello World)
  

lineCommentToken \
printToken .

hasComments true
hasCaseInsensitiveIdentifiers true
hasPostfixNotation true
 \ Multiplies 25 and 10 and then adds 50 to result
 25 10 * 50 +
isCaseSensitive false
hasLineComments true
 \ A comment
hasPrintDebugging true
hasSemanticIndentation false
hasHexadecimals true
 \ (\$[0-9A-F]+)
hasIntegers true
 \ (\#|%|&|\-|\+)?[0-9]+

jupyterKernel https://github.com/jdfreder/iforth
jupyterKernel https://github.com/hcchengithub/peforth
wikipedia https://en.wikipedia.org/wiki/Forth_(programming_language)
 example
  hex
  create AKey   61 c, 8A c, 63 c, D2 c, FB c,
  : test   cr   0 DO  rc4_byte . LOOP  cr ;
  AKey 5 rc4_init
  2C F9 4C EE DC  5 test   \ output should be: F1 38 29 C9 DE
 related lisp apl factor postscript rpl rebol reverse-polish-notation freebsd c linux unix atmel-avr msp430 ascii joy
 summary Forth is an imperative stack-based computer programming language and environment originally designed by Charles "Chuck" Moore. Language features include structured programming, reflection (the ability to modify the program structure during program execution), concatenative programming (functions are composed with juxtaposition) and extensibility (the programmer can create new commands). Although not an acronym, the language's name is sometimes spelled with all capital letters as FORTH, following the customary usage during its earlier years. A procedural programming language without type checking, Forth features both interactive execution of commands (making it suitable as a shell for systems that lack a more formal operating system) and the ability to compile sequences of commands for later execution. Some Forth implementations (usually early versions or those written to be extremely portable) compile threaded code, but many implementations today generate optimized machine code like other language compilers. Forth is used in the Open Firmware boot loader, in space applications, such as the Philae spacecraft and other embedded systems which involve interaction with hardware. The bestselling 1986 DOS game Starflight, from Electronic Arts, was written with a custom Forth. The free software Gforth implementation is actively maintained, as are several commercially supported systems.
 pageId 11012
 dailyPageViews 392
 created 2001
 backlinksCount 454
 revisionCount 1239
 appeared 1970

hopl https://hopl.info/showlanguage.prx?exp=182
tiobe Forth

githubBigQuery Forth
 repos 1910
 users 1694

linguistGrammarRepo https://github.com/textmate/forth.tmbundle
 firstCommit 2008
 lastCommit 2016
 committerCount 1
 commitCount 3
 sampleCount 16
 example
  : HELLO  ( -- )
      ." Hello Forth (fth)!" ;
  
  HELLO
  
  

isbndb 7
 year|publisher|title|authors|isbn13
 2007|BookSurge Publishing|Forth Programmer's Handbook (3rd Edition)|Elizabeth D. Rather and Edward K. Conklin|9781419675492
 1984|Melbourne House|Advanced Spectrum Forth|Don Thomasson|9780861611423
 2019|Independently published|Forth Application Techniques (6th Edition): Programming Course|Rather, Elizabeth D. and Ouverson, Marlin|9781095075791
 1982|H.W. Sams|FORTH programming (The Blacksburg continuing education series)|Scanlon, Leo J|9780672220074
 1982|Osborne/McGraw-Hill|Discover FORTH: Learning and programming the FORTH language|Hogan, Thom|9780931988790
 1990|Academic Press|Embedded Controller Forth For The 8051 Family|Payne, William H.|9780125475709
 1987|Addison Wesley Publishing Company|Pocket Guide to Forth (Addison-Wesley Programming Pocket Guides)|Baker, Linda and Derick, Mitch|9780201101034

githubLanguage Forth
 fileExtensions fth 4th f for forth fr frt fs
 trendingProjectsCount 0
 type programming
 aceMode forth
 codemirrorMode forth
 codemirrorMimeType text/x-forth
 tmScope source.forth
 repos 1537

indeedJobs forth developer
 2022 0

semanticScholar 16
 year|title|doi|citations|influentialCitations|authors|paperId
 1993|The evolution of Forth|10.1145/154766.155369|38|1|E. D. Rather and Donald R. Colburn and C. H. Moore|1b2340b9390b6dc5cdc8c096911bc03475979076
 1994|Linear logic and permutation stacksâ€”the Forth shall be first|10.1145/181993.181999|15|0|H. Baker|83973246777647cd403e99c00be26fa7ca4d5f97
 1998|A FPGA based Forth microprocessor|10.1109/FPGA.1998.707903|12|0|P. Leong and P. Tsang and T. K. Lee|a9270804707a5b1040f3a64c77dc147d0faab425
 1987|An architecture for the direct execution of the Forth programming language|10.1145/36206.36182|12|0|J. Hayes and M. Fraeman and Robert L. Williams and T. Zaremba|24e3c75a5c95a5f26f255bbd087f0adfdce27125
 1997|Forth as a robotics language: part two|10.1145/261353.261355|8|0|P. Frenger|0c8aae2657ee12881da92ca30aa483c06016587b
 2001|Close encounters of the forth kind|10.1145/375431.375415|7|0|P. Frenger|60f7e62ade006525f97a545450dee1207b6cc9b6
 2004|Forth and AI revisited: BRAIN.FORTH|10.1145/1052883.1052885|7|0|P. Frenger|8e119f4b290c4692ff71185d83cf07656b6cacd9
 2003|The JOY of forth|10.1145/944579.944583|6|0|P. Frenger|e8b16a28d9a205e7fbc00de0a05499b603ecdf3f
 1985|FORTH -A good programming environment for laboratory automation? I. Introduction to the language|10.1016/0165-9936(85)87085-0|6|0|D. Zollinger and M. Bos|e24f4142970cdefc9a2dcb83ed5d661d1e8868a1
 1996|A whirlwind tour of FORTH resources|10.1145/242604.242615|4|0|P. Frenger|2b4b2b336202fc3b072343b124a16e205e5bed04
 2004|Embed with Forth|10.1145/1026474.1026476|4|0|P. Frenger|6c0552cd3f75492fcb5deeef40ee5a9698055dbd
 2003|Evaluating Forth in the Windows environment|10.1145/844091.844095|2|0|P. Frenger|a3b049835038a430eb62d6fa757ef7bd216caefc
 2004|A Formal Model of Forth Control Words in the Pi-Calculus|10.3217/jucs-010-09-1272|2|0|J.F. Power and D. Sinclair|88852427183db1802a8a444f2777bc74b5cc7cd0
 2005|Forth sorts fruit down under|10.1145/1089851.1089853|2|0|P. Frenger|d59a56e2664d9b1ce25d4b3e98a263395ce65805
 2016|Real-time multi-task simulation in Forth|10.1109/FRUCT-ISPIT.2016.7561503|2|0|S. Baranov|2b7027db923cc7f75683733021204e0e5361a2c7
 1987|The FORTH Programming Language for Control Systems: Potential Advantages|10.1177/002029408702000402|1|0|C. McCurdy|ff662aa6d90c57a82096bec9062d649895ec9965
