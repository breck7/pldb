flowlog
=======

flowlog is a programming language created in 2014.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222014%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#3899 on PLDB
10 Years Old

We present Flowlog, a tierless language for programming SDN controllers. In contrast to languages with different abstractions for each program tier---the control-plane, data-plane, and controller state---Flowlog provides a unified abstraction for all three tiers. Flowlog is reminiscent of both SQL and rule-based languages such as Cisco IOS and JunOS; unlike these network configuration languages, Flowlog supports programming with mutable state. We intentionally limit Flowlogâ€™s expressivity to enable built-in verification and proactive compilation despite the integration of controller state. To compensate for its limited expressive power, Flowlog enables the reuse of external libraries through callouts. Flowlog proactively compiles essentially all forwarding behavior to switch tables. For rules that maintain controller state or generate fresh packets, the compiler instructs switches to send the minimum amount of necessary traffic to the controller. Given that Flowlog programs can be stateful, this process is non-trivial. We have successfully used Flowlog to implement real network applications. We also compile Flowlog programs to Alloy, a popular verification tool. With this we have verified several properties, including program-correctness properties that are topology-independent, and have found bugs in our own programs.

- flowlog appears in categories: programming language
- flowlog first developed in Brown University
- Read more about flowlog on the web: 1.
 https://cs.brown.edu/~sk/Publications/Papers/Published/nfsk-flowlog-tierless/

TABLE stolen(switchid );
REMOTE TABLE get_time(int );
