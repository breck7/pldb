Aardvark
========

Aardvark is an open source programming language created in 2020 by Hg0428 and JustCoding123 and CompilingCoder and TheBoys619 and PlasDev and ZDev1.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222020%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2020
 https://pldb.io/concepts/../lists/creators.html#q=Hg0428 Hg0428
 https://pldb.io/concepts/../lists/creators.html#q=JustCoding123 JustCoding123
 https://pldb.io/concepts/../lists/creators.html#q=CompilingCoder CompilingCoder
 https://pldb.io/concepts/../lists/creators.html#q=TheBoys619 TheBoys619
 https://pldb.io/concepts/../lists/creators.html#q=PlasDev PlasDev
 https://pldb.io/concepts/../lists/creators.html#q=ZDev1 ZDev1

#1329 on PLDB
4 Years Old

git clone https://github.com/Aardvark-team/Aardvark-py

Aardvark was originally designed in Python as an interpretter. This encompassed all releases up to 1.0. Then, in 2021 and 2022, other implementations started emerging, written in language such as Go and C++. In 2022, however, Aardvark underwent the 1.0 redesign. The language was redesigned from the ground up and re-implemented with a new, but temporary Python interpretter. Now, in 2023, the team is building the final compiler. This compiler is written in Aardvark itself and compiles to LLVM. It has the goal of being faster than C while easier than Python. It was designed for beginners and pros alike. The documentation is avaialiable here: https://aardvark-docs.programit.repl.co. It includes many tutorials and articles.

- Tags: programming language
- Aardvark is developed on GitHub and has 2 stars
- Early development of Aardvark happened in discord
- Aardvark is written in Python, Markdown, Bourne shell, TOML, PowerShell, JSON

stdout.write(&quot;Hello World!\n&quot;)

Language features
======================================================

row
 Feature Sets
 FeatureLink ../features/hasSets.html
 Supported ✓
 Example
 Token 
row
 Feature hasSelfOrThisWord
 FeatureLink ../features/hasSelfOrThisWord.html
 Supported ✓
 Example
  You can name it whatever you like.
 Token 
row
 Feature hasReservedWords
 FeatureLink ../features/hasReservedWords.html
 Supported ✓
 Example
 Token 
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token 
row
 Feature Prefix Notation
 FeatureLink ../features/hasPrefixNotation.html
 Supported ✓
 Example
 Token 
row
 Feature Postfix Notation
 FeatureLink ../features/hasPostfixNotation.html
 Supported ✓
 Example
 Token 
row
 Feature Pointers
 FeatureLink ../features/hasPointers.html
 Supported ✓
 Example
 Token 
row
 Feature Pattern Matching
 FeatureLink ../features/hasPatternMatching.html
 Supported ✓
 Example
  This functionality is included in switch statements.
 Token 
row
 Feature Operators
 FeatureLink ../features/hasOperators.html
 Supported ✓
 Example
 Token 
row
 Feature Octals
 FeatureLink ../features/hasOctals.html
 Supported ✓
 Example
 Token 
row
 Feature Null
 FeatureLink ../features/hasNull.html
 Supported ✓
 Example
  `null`
 Token 
row
 Feature Multiple Inheritance
 FeatureLink ../features/hasMultipleInheritance.html
 Supported ✓
 Example
 Token 
row
 Feature Multiline Strings
 FeatureLink ../features/hasMultilineStrings.html
 Supported ✓
 Example
 Token 
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Example
 Token 
row
 Feature Module Pattern
 FeatureLink ../features/hasModules.html
 Supported ✓
 Example
 Token 
row
 Feature Manual Memory Management
 FeatureLink ../features/hasManualMemoryManagement.html
 Supported ✓
 Example
 Token 
row
 Feature Lists
 FeatureLink ../features/hasLists.html
 Supported ✓
 Example
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
 Token 
row
 Feature Infix Notation
 FeatureLink ../features/hasInfixNotation.html
 Supported ✓
 Example
 Token 
row
 Feature Increment and decrement operators
 FeatureLink ../features/hasIncrementAndDecrementOperators.html
 Supported ✓
 Example
  ++ and --
 Token 
row
 Feature Implicit Arguments
 FeatureLink ../features/hasImplicitArguments.html
 Supported ✓
 Example
 Token 
row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Example
 Token 
row
 Feature Inheritance
 FeatureLink ../features/hasInheritance.html
 Supported ✓
 Example
 Token 
row
 Feature File Imports
 FeatureLink ../features/hasImports.html
 Supported ✓
 Example
 Token 
row
 Feature hasIfs
 FeatureLink ../features/hasIfs.html
 Supported ✓
 Example
 Token 
row
 Feature hasIfElses
 FeatureLink ../features/hasIfElses.html
 Supported ✓
 Example
 Token 
row
 Feature Here Document
 FeatureLink ../features/hasHereDocs.html
 Supported ✓
 Example
 Token 
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Example
  `16_fa7` would evaluate as a hexadecimal number
 Token 
row
 Feature hasGlobalScope
 FeatureLink ../features/hasGlobalScope.html
 Supported ✓
 Example
 Token 
row
 Feature hasForLoops
 FeatureLink ../features/hasForLoops.html
 Supported ✓
 Example
 Token 
row
 Feature hasFnArguments
 FeatureLink ../features/hasFnArguments.html
 Supported ✓
 Example
 Token 
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Example
 Token 
row
 Feature First-Class Functions
 FeatureLink ../features/hasFirstClassFunctions.html
 Supported ✓
 Example
 Token 
row
 Feature Exceptions
 FeatureLink ../features/hasExceptions.html
 Supported ✓
 Example
  Has throw, try, and catch
 Token 
row
 Feature Dynamic Properties
 FeatureLink ../features/hasDynamicProperties.html
 Supported ✓
 Example
 Token 
row
 Feature Constants
 FeatureLink ../features/hasConstants.html
 Supported ✓
 Example
  `static` keyword
 Token 
row
 Feature Constructors
 FeatureLink ../features/hasConstructors.html
 Supported ✓
 Example
 Token 
row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported ✓
 Example
 Token 
row
 Feature hasContinue
 FeatureLink ../features/hasContinue.html
 Supported ✓
 Example
 Token 
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
 Token 
row
 Feature Classes
 FeatureLink ../features/hasClasses.html
 Supported ✓
 Example
 Token 
row
 Feature hasBreak
 FeatureLink ../features/hasBreak.html
 Supported ✓
 Example
 Token 
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Example
 Token 
row
 Feature Binary Literals
 FeatureLink ../features/hasBinaryNumbers.html
 Supported ✓
 Example
  `2_101` would evaluate as a binary number.
 Token 
row
 Feature Assignment
 FeatureLink ../features/hasAssignment.html
 Supported ✓
 Example
 Token 
row
 Feature Anonymous Functions
 FeatureLink ../features/hasAnonymousFunctions.html
 Supported ✓
 Example
 Token 
row
 Feature Labels
 FeatureLink ../features/hasLabels.html
 Supported X
 Example
 Token
