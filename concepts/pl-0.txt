PL/0
====

PL/0 is a programming language created in 1976 by Niklaus Wirth.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221976%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Niklaus%20Wirth

#1365 on PLDB
48 Years Old

PL/0 is a programming language, intended as an educational programming language, that is similar to but much simpler than Pascal, a general-purpose programming language. It serves as an example of how to construct a compiler. It was originally introduced in the book, Algorithms + Data Structures = Programs, by Niklaus Wirth in 1976. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/PL/0

- PL/0 Wikipedia page
 https://en.wikipedia.org/wiki/PL/0
- PL/0 first developed in Eidgenössische Technische Hochschule Zürich
- PL/0 on HOPL
 https://hopl.info/showlanguage.prx?exp=2592
- See also: (8 related languages)PL/I, Pascal, Lex, Yacc, Python, Modula-2, CSP, ISBN
- Read more about PL/0 on the web: 1.
 https://web.archive.org/web/20060712015332/http://www.cs.rochester.edu/courses/254/PLzero/guide.pdf

VAR x, y, z, q, r, n, f;

PROCEDURE multiply;
VAR a, b;
BEGIN
  a := x;
  b := Y;
  z := 0;
  WHILE b &gt; 0 DO
  BEGIN
    IF ODD b THEN z := z + a;
    a := 2 * a;
    b := b / 2
  END
END;

PROCEDURE divide;
VAR w;
BEGIN
  r := x;
  q := 0;
  w := y;
  WHILE w &lt;= r DO w := 2 * w;
  WHILE w &gt; y DO
  BEGIN
    q := 2 * q;
    w := w / 2;
    IF w &lt;= r THEN
    BEGIN
      r := r - w;
      q := q + 1
    END
  END
END;

PROCEDURE gcd;
VAR f, g;
BEGIN
  f := x;
  g := y;
  WHILE f # g DO
  BEGIN
    IF f &lt; g THEN g := g - f;
    IF g &lt; f THEN f := f - g
  END;
  z := f
END;

PROCEDURE fact;
BEGIN
  IF n &gt; 1 THEN
  BEGIN
    f := n * f;
    n := n - 1;
    CALL fact
  END
END;

BEGIN
  ?x; ?y; CALL multiply; !z;
  ?x; ?y; CALL divide; !q; !r;
  ?x; ?y; CALL gcd; !z;
  ?n; f := 1; CALL fact; !f
END.
