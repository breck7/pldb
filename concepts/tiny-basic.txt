Tiny BASIC
==========

Tiny BASIC is a programming language created in 1975 by Dennis Allison.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221975%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Dennis%20Allison

#2624 on PLDB
49 Years Old

Tiny BASIC is a dialect of the BASIC programming language that can fit into as little as 2 or 3 KB of memory. This small size made it invaluable in the early days of microcomputers in the mid-1970s, when typical memory size was only 4 to 8 KB. To meet these strict size limits, math was purely integer based and it lacked arrays. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Tiny_BASIC

- Tiny BASIC Wikipedia page
 https://en.wikipedia.org/wiki/Tiny_BASIC
- See also: (3 related languages)Dartmouth BASIC, Microsoft BASIC, Li-Chen Wang

line ::= number statement CR | statement CR
 
    statement ::= PRINT expr-list
                  IF expression relop expression THEN statement
                  GOTO expression
                  INPUT var-list
                  LET var = expression
                  GOSUB expression
                  RETURN
                  CLEAR
                  LIST
                  RUN
                  END
 
    expr-list ::= (string|expression) (, (string|expression) )*
 
    var-list ::= var (, var)*
 
    expression ::= (+|-|ε) term ((+|-) term)*
 
    term ::= factor ((*|/) factor)*
 
    factor ::= var | number | (expression)
 
    var ::= A | B | C ... | Y | Z
 
    number ::= digit digit*
 
    digit ::= 0 | 1 | 2 | 3 | ... | 8 | 9
 
    relop ::= &lt; (&gt;|=|ε) | &gt; (&lt;|=|ε) | =

    string ::= &quot; (a|b|c ... |x|y|z|A|B|C ... |X|Y|Z|digit)* &quot;
