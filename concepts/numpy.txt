NumPy
=====

NumPy is an open source library created in 1995 by Travis Oliphant.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221995%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1995
 https://pldb.io/concepts/../lists/creators.html#q=Travis%20Oliphant Travis Oliphant

#290 on PLDB
29 Years Old

NumPy (pronounced  (NUM-py) or sometimes  (NUM-pee)) is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays. The ancestor of NumPy, Numeric, was originally created by Jim Hugunin with contributions from several other developers. In 2005, Travis Oliphant created NumPy by incorporating features of the competing Numarray into Numeric, with extensive modifications. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/NumPy Read more on Wikipedia...

- Tags: library
- Early development of NumPy happened in https://github.com/numpy
- NumPy is written in Python, C
- Pygments supports syntax highlighting for NumPy
- numpy.org was registered in 2000
- See also: (8 related languages) Python, C, Jython, SciPy, MATLAB, Simulink, Matplotlib, Cython

&gt;&gt;&gt; # # # Pure iterative Python # # #
&gt;&gt;&gt; points = [[9,2,8],[4,7,2],[3,4,4],[5,6,9],[5,0,7],[8,2,7],[0,3,2],[7,3,0],[6,1,1],[2,9,6]]
&gt;&gt;&gt; qPoint = [4,5,3]
&gt;&gt;&gt; minIdx = -1
&gt;&gt;&gt; minDist = -1
&gt;&gt;&gt; for idx, point in enumerate(points):  # iterate over all points
        dist = sum([(dp-dq)**2 for dp,dq in zip(point,qPoint)])**0.5  # compute the euclidean distance for each point to q
        if dist &lt; minDist or minDist &lt; 0:  # if necessary, update minimum distance and index of the corresponding point
            minDist = dist
            minIdx = idx

&gt;&gt;&gt; print &#39;Nearest point to q: &#39;, points[minIdx]
Nearest point to q:  [3, 4, 4]

&gt;&gt;&gt; # # # Equivalent NumPy vectorization # # #
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; points = np.array([[9,2,8],[4,7,2],[3,4,4],[5,6,9],[5,0,7],[8,2,7],[0,3,2],[7,3,0],[6,1,1],[2,9,6]])
&gt;&gt;&gt; qPoint = np.array([4,5,3])
&gt;&gt;&gt; minIdx = np.argmin(np.linalg.norm(points-qPoint,axis=1))  # compute all euclidean distances at once and return the index of the smallest one
&gt;&gt;&gt; print &#39;Nearest point to q: &#39;, points[minIdx]
Nearest point to q:  [3 4 4]

Language features
======================================================

row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
 Token 
row
 Feature Binary Literals
 FeatureLink ../features/hasBinaryNumbers.html
 Supported ✓
 Example
 Token 
row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Example
 Token 
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Example
 Token 
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Example
 Token 
row
 Feature Octals
 FeatureLink ../features/hasOctals.html
 Supported ✓
 Example
 Token
