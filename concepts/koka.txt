Koka
====

Koka is an open source programming language created in 2012 by Daan Leijen.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222012%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Daan%20Leijen

#198 on PLDB
12 Years Old

git clone https://github.com/koka-lang/koka

Try now: Web · TIO

Koka language compiler and interpreter

- Koka website
 https://www.microsoft.com/en-us/research/project/koka/?from=http%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fprojects%2Fkoka
- Koka is developed on GitHub and has 2,190 stars
- Koka first developed in Microsoft Research
- Koka compiles to C
- Koka is written in Haskell, C, XML, JavaScript, Markdown, JSON, Bourne shell, C++, C#, OCaml, CMake, Dockerfile, Swift, SVG, Java, TypeScript, Lean, Vim script, CSS, YAML, Lex, Yacc, Logos, Tex, Python, Lisp, HTML, sed, Less, CSON
- Pygments supports syntax highlighting for Koka
- Read more about Koka on the web: 1.
 https://koka-lang.github.io/koka/doc/book.html

fun hello-ten()
  var i := 0
  while { i &lt; 10 }
    println(&quot;hello&quot;)
    i := i + 1

infix infixr infixl type cotype rectype alias struct con fun function val var external if then else elif return match private public private module import as include inline rec try yield enum interface instance

Language features
======================================================

row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Token 
 Example
  // [0-9]+
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Token 
 Example
  // [0-9]+\.[0-9]+([eE][\-+]?[0-9]+)?
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Token 
 Example
  // 0[xX][0-9a-fA-F]+
row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported ✓
 Token 
 Example
row
 Feature Access Modifiers
 FeatureLink ../features/hasAccessModifiers.html
 Supported ✓
 Token 
 Example
row
 Feature Functions
 FeatureLink ../features/hasFunctions.html
 Supported ✓
 Token 
 Example
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  // A comment
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token //
 Example
  // A comment
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Token println
 Example
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
