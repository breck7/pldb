ARM
===

ARM, aka Acorn RISC Machine, is an assembly language created in 1985 by Sophie Wilson and Steve Furber.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221985%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1985
 https://pldb.io/concepts/../lists/creators.html#q=Sophie%20Wilson Sophie Wilson
 https://pldb.io/concepts/../lists/creators.html#q=Steve%20Furber Steve Furber

#92 on PLDB
39 Years Old

ARM, originally Acorn RISC Machine, later Advanced RISC Machine, is a family of reduced instruction set computing (RISC) architectures for computer processors, configured for various environments. British company ARM Holdings develops the architecture and licenses it to other companies, who design their own products that implement one of those architectures‍—‌including systems-on-chips (SoC) and systems-on-modules (SoM) that incorporate memory, interfaces, radios, etc. It also designs cores that implement this instruction set and licenses these designs to a number of companies that incorporate those core designs into their own products. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/ARM_architecture Read more on Wikipedia...

- Tags: assembly language
- Early development of ARM happened in Acorn Computers or Arm Ltd
- There is 1 Jupyter Kernel for ARM
- Indeed.com has 6,588 matches for "arm architecture developer".
- See also: (17 related languages) X86, Java Bytecode, BBC BASIC, Verilog, C, Assembly language, Java, C#, Perl, Python, MMX instruction set, JavaScript, Android, Unix, iOS, FreeBSD, Linux
- 1 PLDB concepts link to ARM: B3 IR

	.text
	.globl main
main:
	mov r7, #4
	mov r0, #1
	ldr r1, =message
	mov r2, #14
	swi 0
	mov r7, #1
	mov r0, #0
	swi 0
	.data
message:
	.string &quot;Hello, world!\n&quot;

; if (r0 == r1)
CMP r0, r1
ITE EQ        ; ARM: no code ... Thumb: IT instruction
; then r0 = r2;
MOVEQ r0, r2  ; ARM: conditional; Thumb: condition via ITE &#39;T&#39; (then)
; else r0 = r3;
MOVNE r0, r3  ; ARM: conditional; Thumb: condition via ITE &#39;E&#39; (else)
; recall that the Thumb MOV instruction has no bits to encode &quot;EQ&quot; or &quot;NE&quot;

Language features
======================================================

row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  ; A comment
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  ; A comment
 Token ;
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token
