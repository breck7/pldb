Squirrel
========

Squirrel is an open source programming language created in 2003 by Alberto Demichelis.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222003%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2003
 https://pldb.io/concepts/../lists/creators.html#q=Alberto%20Demichelis Alberto Demichelis

#147 on PLDB
21 Years Old
2k Repos

git clone https://github.com/albertodemichelis/squirrel

Squirrel is a high level imperative, object-oriented programming language, designed to be a light-weight scripting language that fits in the size, memory bandwidth, and real-time requirements of applications like video games and hardware such as Electric Imp. MirthKit, a simple toolkit for making and distributing open source, cross-platform 2D games, uses Squirrel for its platform. It is used extensively by Code::Blocks for scripting and was also used in Final Fantasy Crystal Chronicles: My Life as a King. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Squirrel_(programming_language) Read more on Wikipedia...

- Tags: programming language
- Squirrel is developed on GitHub and has 706 stars
- There are at least 1,513 Squirrel repos on GitHub
- Early development of Squirrel happened in https://sourceforge.net/p/squirrel/bugs
- Squirrel is written in reStructuredText, C++, Squirrel, Make, CMake, C, YAML, Python
- The  Google BigQuery Public Dataset GitHub snapshot shows 284 users using Squirrel in 433 repos on GitHub
- There are 42 Project Euler users using Squirrel
- Explore Squirrel snippets on Rosetta Code
- Squirrel appears in the TIOBE Index
- Squirrel Ubuntu package
 https://packages.ubuntu.com/jammy/squirrel3 Squirrel Ubuntu package
- GitHub supports syntax highlighting for Squirrel
- Squirrel appears in the Quine Relay project
- squirrel-lang.org was registered in 2005
- See also: (5 related languages) JavaScript, Lua, Python, MiniD, Ruby
- 2 PLDB concepts link to Squirrel: cloc, Squirrel

print(&quot;Hello, world!\n&quot;)

print(&quot;Hello World&quot;);

#!/usr/bin/squirrelsh
// Hello world in Squirrel
printl(&quot;Hello, world!&quot;);

//example from http://www.squirrel-lang.org/#documentation

local table = {
	a = &quot;10&quot;
	subtable = {
		array = [1,2,3]
	},
	[10 + 123] = &quot;expression index&quot;
}
 
local array=[ 1, 2, 3, { a = 10, b = &quot;string&quot; } ];
 
foreach (i,val in array)
{
	::print(&quot;the type of val is&quot;+typeof val);
}
 
/////////////////////////////////////////////
 
class Entity
{
	constructor(etype,entityname)
	{
		name = entityname;
		type = etype;
	}
									
	x = 0;
	y = 0;
	z = 0;
	name = null;
	type = null;
}
 
function Entity::MoveTo(newx,newy,newz)
{
	x = newx;
	y = newy;
	z = newz;
}
 
class Player extends Entity {
	constructor(entityname)
	{
		base.constructor(&quot;Player&quot;,entityname)
	}
	function DoDomething()
	{
		::print(&quot;something&quot;);
	}
	
}
 
local newplayer = Player(&quot;da playar&quot;);
 
newplayer.MoveTo(100,200,300);

class BaseVector {
    constructor(...)
    {
      if(vargv.len() &gt;= 3) {
        x = vargv[0];
        y = vargv[1];
        z = vargv[2];
      }
    }
    x = 0;
    y = 0;
    z = 0;
  }

  class Vector3 extends BaseVector {
    function _add(other)
    {
      if(other instanceof ::Vector3)
        return ::Vector3(x+other.x,y+other.y,z+other.z);
      else
        throw &quot;wrong parameter&quot;;
    }
    function Print()
    {
      ::print(x+&quot;,&quot;+y+&quot;,&quot;+z+&quot;\n&quot;);
    }
  }

  local v0 = Vector3(1,2,3)
  local v1 = Vector3(11,12,13)
  local v2 = v0 + v1;
  v2.Print();

Language features
======================================================

row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
  "Hello world"
 Token "
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token print
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  // A comment
 Token //
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
 Token 
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token
