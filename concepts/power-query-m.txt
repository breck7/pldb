PowerQuery M
============

PowerQuery M is a query language created in 2015.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222015%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#1513 on PLDB
9 Years Old

The Power Query M formula language is optimized for building highly flexible data mashup queries. It's a functional, case sensitive language similar to F#.

- PowerQuery M website
 https://docs.microsoft.com/en-us/powerquery-m/
- PowerQuery M appears in categories: queryLanguage
- PowerQuery M first developed in Microsoft
- Monaco package for syntax highlighting PowerQuery M
- Read more about PowerQuery M on the web: 1.
 https://docs.microsoft.com/en-us/powerquery-m/power-query-m-type-system

&quot;Hello World&quot;             // a text value
123                       // a number
1 + 2                     // sum of two numbers
{1, 2, 3}                 // a list of three numbers
[ x = 1, y = 2 + 3 ]      // a record containing two fields:
                          //        x and y
(x, y) =&gt; x + y           // a function that computes a sum
if 2 &gt; 1 then 2 else 1    // a conditional expression
let x = 1 + 1  in x * 2   // a let expression
error &quot;A&quot;                 // error with message &quot;A&quot;

let Orders = Table.FromRecords({
    [OrderID = 1, CustomerID = 1, Item = &quot;fishing rod&quot;, Price = 100.0],
    [OrderID = 2, CustomerID = 1, Item = &quot;1 lb. worms&quot;, Price = 5.0],
    [OrderID = 3, CustomerID = 2, Item = &quot;fishing net&quot;, Price = 25.0]}),
    #&quot;Capitalized Each Word&quot; = Table.TransformColumns(Orders, {&quot;Item&quot;, Text.Proper})
in
    #&quot;Capitalized Each Word&quot;

as each else error false if in is let meta otherwise section shared then true try type

Language features
======================================================

row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported ✓
 Token 
 Example
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Token true false
 Example
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Token /* */
 Example
  /* A comment
  */
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token "
 Example
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  // A comment
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token //
 Example
  // A comment
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
