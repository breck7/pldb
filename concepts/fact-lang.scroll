../code/conceptPage.scroll

id fact-lang
name FaCT
appeared 2017
creators Deian Stefan
tags pl
aka FACT
description FaCT is a domain-specific language that aids you in writing constant-time code for cryptographic routines that need to be free from timing side channels. This is the compiler for the Flexible and Constant Time cryptographic programming language. Real-world cryptographic code is often written in a subset of C intended to execute in constant-time, thereby avoiding timing side channel vulnerabilities. This C subset eschews structured programming as we know it: if-statements, looping constructs, and procedural abstractions can leak timing information when handling sensitive data. The resulting obfuscation has led to subtle bugs, even in widely-used high-profile libraries like OpenSSL. To address the challenge of writing constant-time cryptographic code, we present FaCT, a crypto DSL that provides high-level but safe language constructs. The FaCT compiler uses a secrecy type system to automatically transform potentially timing-sensitive high-level code into low-level, constant-time LLVM bitcode. We develop the language and type system, formalize the constant-time transformation, and present an empirical evaluation that uses FaCT to implement core crypto routines from several open-source projects including OpenSSL, libsodium, and curve25519-donna. Our evaluation shows that FaCT's design makes it possible to write \emph{readable}, high-level cryptographic code, with \emph{efficient}, \emph{constant-time} behavior.
lab University of California San Diego && Stanford University && PI for Security and Privacy && Inria && IMDEA Software Institute
writtenIn ocaml c bourne-shell markdown make dockerfile

isOpenSource true
subsetOf c
fileType text
repoStats
 firstCommit 2016
 commits 1206
 committers 20
 files 86
 newestCommit 2022
country United States and Germany and France and Spain
reference https://ranjitjhala.github.io/static/fact_dsl.pdf

example
 void
 swap_conditional(secret mut uint64[5] a, secret mut uint64[5] b, secret uint64 swapi) {
   if (swapi == 1) {
     for (uint32 i from 0 to 5) {
       secret uint64 x = a[i];
       a[i] = b[i];
       b[i] = x;
     }
   }
 }

githubRepo https://github.com/PLSysSec/FaCT
 firstCommit 2016
 stars 191
 forks 13
 subscribers 14
 created 2016
 updated 2024
 description Flexible and Constant Time Programming Language
 issues 1

semanticScholar 1
 year|title|doi|citations|influentialCitations|authors|paperId
 2009|DeFacto: Language-Parametric Fact Extraction from Source Code|10.1007/978-3-642-00434-6_17|14|1|H. Basten and P. Klint|a25ddb85adfff458d4829bcbf16db3d64fce7517
