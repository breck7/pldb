import ../code/conceptPage.scroll

id c
name C
appeared 1972
creators Dennis Ritchie
tags pl
spec https://www.iso-9899.info/wiki/The_Standard
latestVersion C17

isOpenSource true
usesSemanticVersioning false
gdbSupport true
clocExtensions c cats ec idc pgc
fileType text
wordRank 81
docs https://devdocs.io/c/
antlr https://github.com/antlr/grammars-v4/tree/master/c
monaco cpp
rosettaCode http://www.rosettacode.org/wiki/Category:C
quineRelay C
replit https://repl.it/languages/c
ubuntuPackage gcc
country United States
originCommunity Bell Labs
funFact https://news.ycombinator.com/item?id=32621392
  C gets credit for the // comments, starting in 1972, but that's not really accurate. BCPL -- which begat B which begat C -- had // comments but they were not included in C until C99. C++ (which isn't included in their top 30 languages) brought back // comments from BCPL sometime between 1979 and 1985 (the first public release of cfront). Many C compilers included // comments as an extension prior to C99 but those were inspired by C++
projectEuler C/C++
 memberCount
  2022 46028
  2019 41087
reference http://www.c4learn.com/c-programming/c-keywords/

pygmentsHighlighter C
 filename c_cpp.py
 fileExtensions c h idc x[bp]m
rijuRepl https://riju.codes/c
 example
  #include <stdio.h>
  
  int main() {
    printf("Hello, world!\n");
    return 0;
  }
  
 description General-purpose, procedural computer programming language supporting structured programming, lexical variable scope, and recursion, with a static type system
 fileExtensions c h
 gitRepo https://github.com/llvm/llvm-project
subreddit https://reddit.com/r/C_Programming
 memberCount
  2017 30709
  2022 127013
leachim6 C
 filepath c/C.c
 example
  #include <stdio.h>
  
  main()
  {
      printf("Hello World\n");
  }
  
leetSheets https://courses.cs.washington.edu/courses/cse351/14sp/sections/1/Cheatsheet-c.pdf
compilerExplorer C
 example
  // Type your code here, or load an example.
  int square(int num) {
      return num * num;
  }

meetup https://www.meetup.com/topics/c
 memberCount 69338
 groupCount 204
keywords auto break case char const continue default do double else enum extern float for goto if int long register return short signed sizeof static struct switch typedef union unsigned void volatile while

lineCommentToken //
multiLineCommentTokens /* */
printToken printf
assignmentToken =

hasVariableSubstitutionSyntax false
hasEnums true
 enum Gender {
   Male,
   Female,
 };
hasRegularExpressionsSyntaxSugar false
hasBooleans true
hasConstructors false
hasCharacters true
 char character = 'P';
hasTernaryOperators true
 #include <stdio.h>
 int main(void) { printf("%d", 1 ? 1 : 0); }
hasPointers true
 int *ptr;
hasStrings true
 "hello world"
hasAssertStatements true
 #include <assert.h>
 int i, a[10];
 for (i = 0; i < 10; ++i)
   {
   assert(0 <= i && i < 10);
   a[i] = 10-i;
   }
 for (i = 0; i < 10; ++i)
   {
   assert(0 <= i && i < 10);
   assert(0 <= a[i] && a[i] < 10);
   a[a[i]] = a[i];
   }
hasBitWiseOperators true
 int i = 4; /* bit pattern equivalent is binary 100 */
 int j = i << 2; /* makes it binary 10000, which multiplies the original number by 4 i.e. 16 */
hasSymbolTables true
 // Declare an external function
 extern double bar(double x);
hasExplicitStandardLibrary true
 #include <stdio.h>
 
 // Define a public function
 double foo(int count)
 {
     double  sum = 0.0;
 
     // Sum all the values bar(1) to bar(count)
     for (int i = 1;  i <= count;  i++)
         sum += bar((double) i);
     return sum;
 }
 // Symbol Table:
 // Symbol name|Type|Scope
 // bar|function, double|extern
 // x|double|function parameter
 // foo|function, double|global
 // count|int|function parameter
 // sum|double|block local
 // i|int|for-loop statement
hasComments true
 // A comment
hasStructs true
 struct account {
   int account_number;
   char *first_name;
   char *last_name;
   float balance;
 };
hasGarbageCollection false
hasGotos true
 // C/C++ program to check if a number is
 // even or not using goto statement
 #include <iostream>
 using namespace std;
   
 // function to check even or not
 void checkEvenOrNot(int num)
 {
     if (num % 2 == 0)
         goto even; // jump to even
     else
         goto odd; // jump to odd
   
 even:
     cout << num << " is evenn";
     return; // return if even
 odd:
     cout << num << " is oddn";
 }
   
 // Driver program to test above function
 int main()
 {
     int num = 26;
     checkEvenOrNot(num);
     return 0;
 }
hasDirectives true
 #include <stdio.h>
 #define height 10
 #ifdef
 #endif
 #if
 #else
 #ifndef
 #undef
 #pragma
hasExplicitTypeCasting true
 double da = 3.3;
 double db = 3.3;
 double dc = 3.4;
 int result = (int)da + (int)db + (int)dc; //result == 9
hasImports true
 //  If a header file is included within <>, the preprocessor will search a predetermined directory path to locate the header file. If the header file is enclosed in "", the preprocessor will look for the header file in the same directory as the source file.
 #include <stdio.h>
 #include "stdio.h"
hasNamespaces false
hasMultipleInheritance false
hasTemplates false
hasIntegers true
 int pldb = 80766866;
hasMacros true
 // https://learn.microsoft.com/en-us/cpp/preprocessor/macros-c-cpp?redirectedfrom=MSDN&view=msvc-170
 // https://gcc.gnu.org/onlinedocs/cpp/Macro-Arguments.html
 #define min(X, Y)  ((X) < (Y) ? (X) : (Y))
   x = min(a, b);          →  x = ((a) < (b) ? (a) : (b));
   y = min(1, 2);          →  y = ((1) < (2) ? (1) : (2));
   z = min(a + 28, *p);    →  z = ((a + 28) < (*p) ? (a + 28) : (*p));
hasManualMemoryManagement true
 #include <stdio.h>
 #include <stdlib.h>
 int main(void)
 {
   int *poin = malloc(4);
   free(poin);
 }
hasOperatorOverloading false
hasOperators true
 1 + 1;
hasVariadicFunctions true
 double average(int count, ...)
 {
  //
 }
hasZeroBasedNumbering true
hasIncrementAndDecrementOperators true
hasLineComments true
 // A comment
hasMultiLineComments true
 /* A comment
 */
hasPrintDebugging true
hasSwitch true
 switch(expression) {
    case true  :
       break;
    default :
    //
    break;
 }
hasSemanticIndentation false
hasAccessModifiers false
hasClasses false
hasExceptions false
hasCaseInsensitiveIdentifiers false
hasAssignment true
isCaseSensitive true
hasWhileLoops true
hasConstants true
hasConditionals true
hasFixedPoint false
hasScientificNotation true
hasStandardLibrary true
 #include <stdio.h>

jupyterKernel https://github.com/brendan-rius/jupyter-c-kernel
wikipedia https://en.wikipedia.org/wiki/C_(programming_language)
 example
  #include <stdio.h>
  
  int main(void)
  {
      printf("hello, world\n");
  }
 related cyclone unified-parallel-c split-c cilk b bcpl cpl algol-68 assembly-language pl-i ampl awk c-- csharp objective-c d go java javascript julia limbo lpc perl php pike processing python rust seed7 vala verilog unix algol swift multics unicode fortran pascal mathematica matlab ch smalltalk
 summary C (, as in the letter c) is a general-purpose, imperative computer programming language, supporting structured programming, lexical variable scope and recursion, while a static type system prevents many unintended operations. By design, C provides constructs that map efficiently to typical machine instructions, and therefore it has found lasting use in applications that had formerly been coded in assembly language, including operating systems, as well as various application software for computers ranging from supercomputers to embedded systems. C was originally developed by Dennis Ritchie between 1969 and 1973 at Bell Labs, and used to re-implement the Unix operating system. It has since become one of the most widely used programming languages of all time, with C compilers from various vendors available for the majority of existing computer architectures and operating systems. C has been standardized by the American National Standards Institute (ANSI) since 1989 (see ANSI C) and subsequently by the International Organization for Standardization (ISO). C is an imperative procedural language. It was designed to be compiled using a relatively straightforward compiler, to provide low-level access to memory, to provide language constructs that map efficiently to machine instructions, and to require minimal run-time support. Despite its low-level capabilities, the language was designed to encourage cross-platform programming. A standards-compliant and portably written C program can be compiled for a very wide variety of computer platforms and operating systems with few changes to its source code. The language has become available on a very wide range of platforms, from embedded microcontrollers to supercomputers.
 pageId 6021
 dailyPageViews 6268
 created 2001
 backlinksCount 10585
 revisionCount 7316
 appeared 2011
 fileExtensions Mono

hopl https://hopl.info/showlanguage.prx?exp=577
tiobe C
 currentRank 2
pypl C

githubBigQuery C
 repos 292876
 users 177962

linguistGrammarRepo https://github.com/textmate/c.tmbundle
 firstCommit 2005
 lastCommit 2018
 committerCount 23
 commitCount 359
 sampleCount 57
 example
  #ifndef HELLO_H
  #define HELLO_H
  
  void hello();
  
  #endif
  

isbndb 78
 year|publisher|title|authors|isbn13
 2003|McGraw-Hill Education|Introduction to Computing Systems: From Bits and Gates to C and Beyond|Yale N. Patt and Sanjay J. Patel|9780072467505
 1978|Prentice-Hall|The C Programming Language|Brian W. Kernighan and Dennis M. Ritchie|9780131101630
 1995|Pearson|Data Structures Using C and C++ (2nd Edition)|Langsam, Yedidyah and Augenstein, Moshe J. and Tenenbaum, Aaron M.|9780130369970
 2012|Pearson|Problem Solving and Program Design in C (7th Edition)|Hanly, Jeri R. and Koffman, Elliot B.|9780132936491
 1996|Pearson|Data Structures and Algorithm Analysis in C (2nd Edition)|Weiss, Mark A.|9780201498400
 2014|Cengage Learning PTR|C Programming for the Absolute Beginner|Davenport, Keith and Vine, Michael|9781305273764
 1992|Pearson|Standard C Library, The|Plauger, P.J.|9780131315099
 1999|Pearson|SPARC Architecture, Assembly Language Programming, and C|Paul, Richard|9780130255969
 2009|Pearson|System Programming with C and Unix|Hoover, Adam|9780136067122
 1994|Pearson|Expert C Programming: Deep C Secrets|van der Linden, Peter|9780131774292
 1997|Addison-Wesley Professional|Book on C, A: Programming in C|Kelley, Al and Pohl, Ira|9780201183993
 2000|Pearson|C for Java Programmers|Muldner, Tomasz|9780201702798
 2013|O'Reilly Media|Understanding and Using C Pointers: Core Techniques for Memory Management|Reese, Richard M|9781449344184
 2019|Pearson|C for Scientists and Engineers|Johnsonbaugh, Richard and Kalin, Martin|9780023611360
 2002|Addison-Wesley Professional|Embedded C: Embedded C|Pont, Michael|9780201795233
 2015|Apress|Beginning C for Arduino, Second Edition: Learn C Programming for the Arduino|Purdum, Jack|9781484209417
 2007|Cengage Learning PTR|C Programming for the Absolute Beginner|Vine, Michael|9781598634808
 2008|Charles River Media|Microcontrollers: From Assembly Language to C Using the Pic24 Family|Reese, Robert B. and Bruce, J. W. and Jones, Bryan A.|9781584505839
 2013|Packt Publishing|C Programming for Arduino|Bayle, Julien|9781849517584
 2004|Pearson|Engineering Problem Solving with C (3rd Edition)|Etter, Delores M.|9780131429710
 1994|Sams Publishing|Absolute Beginner's Guide to C (2nd Edition)|Perry, Greg|9780672305108
 2016|CreateSpace Independent Publishing Platform|C Programming Language: A Step by Step Beginner's Guide to Learn C Programming in 7 Days|Graham, Darrel L.|9781534679702
 2015|CRC Press|Intermediate C Programming|Lu, Yung-Hsiang|9781498711630
 2013|Prentice Hall|C for Programmers with an Introduction to C11 (Deitel Developer Series): With an Introduction to C11 (Deitel Developer (Paperback))|Deitel, Paul|9780133462067
 1996|W W Norton & Co Inc|C Programming: A Modern Approach|King, K. N. and King, K.N.|9780393969450
 |Pearson Learning Solutions|C Knights: An Introduction to Programming in C (with selections by Arup Guha and Ali Orooji)||9780558564698
 1993|Sams|The Waite Group's New C Primer Plus|Waite, Mitchell and Prata, Stephen|9780672303197
 2015|Pearson|Problem Solving and Program Design in C Plus MyLab Programming with Pearson eText -- Access Card Package|Hanly, Jeri and Koffman, Elliot|9780134243948
 1999|Pearson|Introduction to C|Etter, Delores|9780130118547
 1995|Computing McGraw-Hill|Enough Rope to Shoot Yourself in the Foot: Rules for C and C++ Programming (Unix/C)|Holub, Allen I.|9780070296893
 2022|Mc Graw Hill India|Programming In Ansi C|E Balagurusamy|9789339219666
 2012|Oxford University Press|Programming in C 2/e (Oxford Higher Education)|Dey, Pradip and Ghosh, Manas|9780198065289
 1991|Pearson|Crafting a Compiler with C|Fischer, Charles and LeBlanc Jr., Richard|9780805321661
 2005|Smiley Micros|C Programming for Microcontrollers Featuring ATMEL's AVR Butterfly and the free WinAVR Compiler|Pardue, Joe|9780976682202
 2014|O'Reilly Media|21st Century C: C Tips from the New School|Klemens, Ben|9781491903896
 1994|Cambridge University Press|C by Example (Cambridge Computer Science Texts, Series Number 29)|Kalicharan, Noel|9780521456500
 1995|Waite Group Pr|Black Art of 3D Game Programming: Writing Your Own High-Speed 3D Polygon Video Games in C|Lamothe, Andre|9781571690043
 1986|Scott, Foresman|Programming C On The Macintosh|Terry A Ward|9780673182746
 2007|BPB Publications|Let Us C Solutions|Yashavant Kanetkar|9788183331777
 1995|Addison-Wesley|C by Dissection: The Essentials of C Programming|Kelley, Al and Pohl, Ira|9780805331493
 1998|Addison-Wesley Professional|C++ For C Programmers, Third Edition (3rd Edition)|Pohl, Ira|9780201395198
 1988|Cambridge University Press|Numerical Recipes in C|Press, W. H. and Flannery, B. P. and Teukolsky, S. A. and Vetterling, W. T.|9780521354653
 1996|Springer|C A Software Engineering Approach|Darnell, Peter A. and Margolis, Philip E.|9780387946757
 2007|O'Reilly Media|Linux System Programming: Talking Directly to the Kernel and C Library|Love, Robert|9780596009588
 2020|Addison-Wesley Professional|C Puzzle Book, The|Feuer, Alan|9780201604610
 1995|O'Reilly & Associates|C++ The Core Language: A Foundation for C Programmers (Nutshell Handbooks)|Brown, Doug and Satir, Gregory|9781565921160
 2000|Cambridge University Press|Simulating Ecological and Evolutionary Systems in C|Wilson, Will|9780521772280
 2017|MC GRAW HILL INDIA|Computing Fundamentals And C Programming 2Nd Edition|BALAGURUSAMY|9789352604166
 2022|PEARSON INDIA|Programming in C|KOCHAN|9789332554665
 2012|Oxford University Press|Computer Fundamentals & Programming in C|Thareja, Reema|9780198078883
 1994|Wiley|Programming for Graphics Files: In C and C++|Levine, John R. and Levine, John|9780471598565
 1992|West Publishing Company, College & School Division|Programming in ANSI C|Kumar, Ram; Agrawal, Rakesh|9780195690378
 2003|Thomson Delmar Learning|Programming in Objective- C|Cengage|9780672325861
 2011|MC GRAW HILL INDIA|Parallel Programming In C With Mpi And Open Mp, 1St Edn|QUINN|9780070582019
 |BPB Publications|ANSI C Programming||9788183333245
 2013|Oxford University Press|Introduction to C Programming|Thareja, Reema|9780198086390
 2014|Oxford University Press|Introduction to C Programming|Thareja, Reema|9780199452057
 1995|Addison-Wesley Professional|C Programming Faqs: Frequently Asked Questions|Summit, Steve|9780201845198
 2020|For Dummies|C Programming For Dummies (For Dummies (Computer/Tech))|Gookin, Dan|9781119740247
 1989|Wiley|Graphics Programming In Turbo C|Leen Ammeraal|9780471924395
 2020|BPB Publications|Let Us C: Authentic Guide to C PROGRAMMING Language 17th Edition (English Edition)|Kanetkar, Yashavant|9789389845686
 1997|Prentice Hall|大学计算机教育丛书•C程序设计语言习题解答(第2版)(影印版) - The C Answer Book - Solutions to the Exercises in the C Programming Language - 2nd Edition||9787302027287
 2009|Wiley India|Computer Concepts and C Programming|VIKAS GUPTA|9788177229981
 1986|Springer|The Art of C Programming|Jones, Robin and Stewart, Ian|9780387963921
 2015|Pearson|Mylab Programming with Pearson Etext -- Access Code Card -- For Problem Solving and Program Design in C|Hanly, Jeri and Koffman, Elliot|9780134253992
 2015|Pearson|MyLab Programming with Pearson eText -- Standalone Access Card -- for C How to Program|Deitel, Paul and Deitel, Harvey|9780134225340
 1985|Que Corp|C programming guide|Purdum, Jack J|9780880221573
 1996|McGraw Hill|Programming with C|Hubbard, John|9780070593695
 2012|O'Reilly Media|21st Century C: C Tips from the New School|Klemens, Ben|9781449327149
 1996|Prentice Hall|Data Structures and Program Design In C (2nd Edition)|Kruse, Robert L. and Leung, Bruce P. and Tondo, Clovis L.|9780132883665
 1989|McGraw-Hill Osborne Media|Advanced Turbo C (Borland-Osborne/McGraw-Hill Programming Series)|Schildt, Herbert|9780078814792
 2004|Bpb Publications|Data Structures Through C in Depth [May 30, 2004] Srivastava, S. K. and Srivastava, Deepali|Srivastava, S. K.|9788176567411
 2010|People Post Press Pub. Date: 2010 -04|C language programming: a modern approach(Chinese Edition)|( MEI )K. N. King|9787115219572
 20081020|Springer Nature|Foundations of C  /CLI|Gordon Hogenson|9781430210245
 1988|Sams|Programming in C (Hayden books C library)|Kochan, Stephen G.|9780672484209
 1992|M & T Books|Getting Graphic: Programming Fundamentals in C and C++/Book and Disk|Finlay, Mark|9781558512825
 20140307|Pearson Education (US)|Starting Out with C   From Control Structures to Objects|Tony Gaddis|9780133888201
 1992|Dryden Pr|Business Programming in C for Dos-Based Systems (The Dryden Press Series in Information System)|Millspaugh, A. C.|9780155001398

githubLanguage C
 fileExtensions c cats h idc
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  pwn20wndstuff Undecimus https://github.com/pwn20wndstuff.png https://github.com/pwn20wndstuff/Undecimus C #555555 4836 991 1356 "unc0ver jailbreak for iOS 11.0 - 12.4"
  LiteOS LiteOS https://github.com/LiteOS.png https://github.com/LiteOS/LiteOS C #555555 3361 1146 1832 "code and manual"
  git git https://github.com/git.png https://github.com/git/git C #555555 29183 16856 680 "Git Source Code Mirror - This is a publish-only repository and all pull requests are ignored. Please follow Documentation/SubmittingPatches procedure for any of your improvements."
  nginx nginx https://github.com/nginx.png https://github.com/nginx/nginx C #555555 9590 3619 293 "An official read-only mirror of http://hg.nginx.org/nginx/ which is updated hourly. Pull requests on GitHub cannot be accepted and will be automatically closed. The proper way to submit changes to nginx is via the nginx development mailing list, see http://nginx.org/en/docs/contributing_changes.html"
  littlevgl lvgl https://github.com/littlevgl.png https://github.com/littlevgl/lvgl C #555555 2274 522 128 "Powerful and easy-to-use embedded GUI with many widgets, advanced visual effects (opacity, antialiasing, animations) and low memory requirements (16K RAM, 64K Flash)."
  Genymobile scrcpy https://github.com/Genymobile.png https://github.com/Genymobile/scrcpy C #555555 18275 1510 2342 "Display and control your Android device"
  NVIDIA open-gpu-doc https://github.com/NVIDIA.png https://github.com/NVIDIA/open-gpu-doc C #555555 734 39 721 "Documentation of NVIDIA chip/hardware interfaces"
  betaflight betaflight https://github.com/betaflight.png https://github.com/betaflight/betaflight C #555555 3001 1405 124 "Open Source Flight Controller Firmware"
  nothings stb https://github.com/nothings.png https://github.com/nothings/stb C #555555 10557 2767 341 "stb single-file public domain libraries for C/C++"
  openbsd src https://github.com/openbsd.png https://github.com/openbsd/src C #555555 1202 314 52 "Public git conversion mirror of OpenBSD's official CVS src repository. Pull requests not accepted - send diffs to the tech@ mailing list."
  ARMmbed littlefs https://github.com/ARMmbed.png https://github.com/ARMmbed/littlefs C #555555 1480 220 333 "A little fail-safe filesystem designed for microcontrollers"
  nmap nmap https://github.com/nmap.png https://github.com/nmap/nmap C #555555 3319 1126 114 "Nmap - the Network Mapper. Github mirror of official SVN repository."
  RT-Thread rt-thread https://github.com/RT-Thread.png https://github.com/RT-Thread/rt-thread C #555555 3199 2128 227 "RT-Thread is an open source IoT operating system from China."
  DoubleLabyrinth navicat-keygen https://github.com/DoubleLabyrinth.png https://github.com/DoubleLabyrinth/navicat-keygen C++ #f34b7d 7512 1890 565 "A keygen for Navicat"
  torvalds linux https://github.com/torvalds.png https://github.com/torvalds/linux C #555555 79929 27885 1452 "Linux kernel source tree"
  zephyrproject-rtos zephyr https://github.com/zephyrproject-rtos.png https://github.com/zephyrproject-rtos/zephyr C #555555 2423 1468 115 "Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures."
  KevinOConnor klipper https://github.com/KevinOConnor.png https://github.com/KevinOConnor/klipper C #555555 1531 724 62 "Klipper is a 3d-printer firmware"
  JVictorDias Dinossauro-Google https://github.com/JVictorDias.png https://github.com/JVictorDias/Dinossauro-Google C #555555 297 85 191 "Código do projeto onde uma rede neural aprende a jogar o dinossauro do google"
  commaai openpilot https://github.com/commaai.png https://github.com/commaai/openpilot C #555555 12310 2924 408 "open source driving agent"
  qmk qmk_firmware https://github.com/qmk.png https://github.com/qmk/qmk_firmware C #555555 4961 9458 204 "Open-source keyboard firmware for Atmel AVR and Arm USB families"
  cfenollosa os-tutorial https://github.com/cfenollosa.png https://github.com/cfenollosa/os-tutorial C #555555 16163 1776 271 "How to create an OS from scratch"
  mit-pdos xv6-public https://github.com/mit-pdos.png https://github.com/mit-pdos/xv6-public C #555555 2956 1586 92 "xv6 OS"
  php php-src https://github.com/php.png https://github.com/php/php-src C #555555 24746 5666 486 "The PHP Interpreter"
  micropython micropython https://github.com/micropython.png https://github.com/micropython/micropython C #555555 9015 2745 190 "MicroPython - a lean and efficient Python implementation for microcontrollers and constrained systems"
  esp8266 Arduino https://github.com/esp8266.png https://github.com/esp8266/Arduino C #555555 9944 7850 166 "ESP8266 core for Arduino"
 trendingProjectsCount 26
 type programming
 interpreters tcc
 aceMode c_cpp
 codemirrorMode clike
 codemirrorMimeType text/x-csrc
 tmScope source.c
 repos 2160271

indeedJobs c engineer
 2017 23567
linkedInSkill c
 2018 3635195
stackOverflowSurvey
 2021
  users 17329
  medianSalary 53184
  fans 9702
  percentageUsing 0.21

semanticScholar 19
 year|title|doi|citations|influentialCitations|authors|paperId
 1978|The C Programming Language|10.1007/978-3-662-09507-2_22|2216|51|B. Kernighan and D. Ritchie|d36227ed3bfbe37972acfc90acea59f1246e0fde
 1992|The Semantics of the C Programming Language|10.1007/3-540-56992-8_17|252|10|Y. Gurevich and J. Huggins|6d65722122ef01784cf681cffff7b8e70a033f5b
 2008|Hardbound: architectural support for spatial safety of the C programming language|10.1145/1346281.1346295|211|30|Joseph Devietti and Colin Blundell and Milo M. K. Martin and S. Zdancewic|4f8aa76dd8c1309d48bca4858a468769c992bff9
 1989|The concurrent C programming language|10.5860/choice.27-0970|84|1|N. Gehani and W. D. Roome|6f4869aad5488ceb5dc9123f812cf650f8ad07b5
 1978|UNIX time-sharing system: The C programming language|10.1002/J.1538-7305.1978.TB02140.X|58|0|D. Ritchie and S. C. Johnson and M. Lesk and B. Kernighan|1f12815c916ee291721ab09f32b6dc9cccf78052
 2017|Real-time learning analytics for C programming language courses|10.1145/3027385.3027407|32|1|Xinyu Fu and Atsushi Shimada and H. Ogata and Yuta Taniguchi and D. Suehiro|e62c260c0bdafaff60edd58cca1916b6bfd1de01
 2008|Introductory C Programming Language Learning with Game-Based Digital Learning|10.1007/978-3-540-85033-5_22|24|3|Wen-Chih Chang and Yu-Min Chou|c608f31fcf55b8025d32db5b5e5e6965d0c86124
 1996|C Programming: A Modern Approach|10.5860/choice.34-0350|23|3|K. N. King|96393da4f7c043d840fab62911d1fa4a44b12b39
 2011|A minimal, extensible, drag-and-drop implementation of the C programming language|10.1145/2047594.2047646|22|1|S. Federici|19bcbe22289575283fa5ea50b28b98b4fef0195e
 1985|Omega&#8212;A Data Flow Analysis Tool for the C Programming Language|10.1109/TSE.1985.232542|20|1|C. Wilson and L. Osterweil|a17b956678ab4e32f2246a425d92d2d0c9d9035a
 1996|The development of the C programming language|10.1145/234286.1057834|18|0|D. Ritchie|53a1e8c89f53aee3cb584f63968c65bbc23516bb
 1993|Extensions to the C programming language for enhanced fault detection|10.1002/spe.4380230604|17|1|D. Flater and Y. Yesha and E. Park|85f138643978fbd9f461a0a024e9d20009a33d20
 2015|Research and Reflection on Teaching of C Programming Language Design|10.1007/978-3-662-46248-5_45|12|0|Hui Gao and Zhaowen Qiu and Di Wu and Liyan Gao|ca493d45444957fb34f85425e89c1132c1e58797
 2017|A Serious Game for Learning C Programming Language Concepts Using Solo Taxonomy|10.3991/ijet.v12i03.6476|12|0|Alaeeddine Yassine and D. Chenouni and M. Berrada and A. Tahiri|dab275e2c8e9f22bc9cce1286b62fcb6ba3b2f2d
 2018|Timed C: An Extension to the C Programming Language for Real-Time Systems|10.1109/RTAS.2018.00031|10|0|Saranya Natarajan and David Broman|d1baf7641b5c7f0074923e3b3773f0f6d6f77741
 1987|Design tradeoffs to support the C programming language in the CRISP microprocessor|10.1145/36206.36198|8|0|D. Ditzel and H. McLellan|37a1c18cce1c6840b7b94600a4e7247b534382b6
 1985|The C Programming Language and a C Compiler|10.1147/sj.241.0037|7|0|Ralph R. Ryan and Hans-Dieter Spiller|0f9a12e9901772a51486f72283b7e34e3d54f996
 2008|Virtual Education System for the C Programming Language|10.1007/978-3-540-85033-5_20|5|1|Il-Hyeon Moon and Saeron Han and KwanSun Choi and Dongsik Kim and Changwan Jeon and Sunheum Lee and Heunggu Jeon|3c048305affc8dd4a384db4843f4c98d59cf4660
 1985|The C programming language|10.1016/0011-684X(85)90032-2|2|0|Russell Jones|4ad1b60dca3d306e164233d7044f9587f296e002
