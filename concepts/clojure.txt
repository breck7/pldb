Clojure
=======

Clojure is an open source programming language created in 2007 by Rich Hickey.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222007%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Rich%20Hickey

#27 on PLDB
17 Years Old
82k Repos

git clone https://github.com/clojure/clojure

Try now: Riju · TIO · Replit

Clojure ( , like "closure") is a dialect of the Lisp programming language. Clojure is a general-purpose programming language with an emphasis on functional programming. It runs on the Java virtual machine and the Common Language Runtime. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Clojure

- Clojure website
 https://clojure.org
- Clojure appears in categories: programming language
- Clojure downloads page
 https://clojure.org/releases/downloads
- Clojure Wikipedia page
 https://en.wikipedia.org/wiki/Clojure
- Clojure is developed on GitHub and has 9,941 stars
- Watch the history of the Clojure repo visualized with Gource
- PLDB has 2 documentation sites for Clojure: clojuredocs.org, clojure-doc.org
- There are at least 82,125 Clojure repos on GitHub
- Clojure first developed in Cognitect, Inc
- Clojure is written in Java, Clojure, Markdown, YAML, HTML, XML, Bourne shell
- The  Google BigQuery Public Dataset GitHub snapshot shows 14k users using Clojure in 26k repos on GitHub
- Check out the 378 Clojure meetup groups on Meetup.com.
- There are 29,258 members in the Clojure subreddit
- There are 1,655 Project Euler users using Clojure
- In the 2021 StackOverflow developer survey Clojure programmers reported a median salary of $95,000. 2% of respondents reported using Clojure. 1,552 programmers reported using Clojure, and 2,413 said they wanted to use it
- Explore Clojure snippets on Rosetta Code
- Clojure ranks #42 in the TIOBE Index
- Clojure Ubuntu package
 https://packages.ubuntu.com/jammy/clojure
- ANTLR grammar for Clojure
- Clojure LSP implementation
- CodeMirror package for syntax highlighting Clojure
- Monaco package for syntax highlighting Clojure
- Pygments supports syntax highlighting for Clojure
- GitHub supports syntax highlighting for Clojure
- Clojure appears in the Quine Relay project
- PLDB has 2 Jupyter Kernels for Clojure: github.com, github.com
- There is a central package repository for Clojure
- Release Notes for Clojure
 https://clojure.org/releases/devchangelog
- Official Blog page for Clojure
 https://clojure.org/news/news
- Events page for Clojure
 https://clojure.org/events/2022/reclojure
- Frequently Asked Questions for Clojure
 https://clojure.org/guides/faq
- Clojure leet sheet
 http://web.csulb.edu/~artg/524/clojure-cheat-sheet-a4-grey.pdf
- Indeed.com has 355 matches for "clojure engineer".
- clojure.org was registered in 2005
- See also: (20 related languages)JVM, C#, Common Lisp, Erlang, Haskell, Mathematica, ML, Prolog, Scheme, Java, Racket, Ruby, Elixir, Lisp, Apache Maven, S-expressions, CSP, ActionScript, Python, Unicode
- Read more about Clojure on the web: 1.
 https://download.clojure.org/papers/clojure-hopl-iv-final.pdf
- 21 languages in PLDB linking to Clojure: Ace Editor, Clojure, ClojureScript, datascript, Felix, femtolisp, fleck, Flow9, F*, hasklig, Insitux, Jank, Julia, Linux, Lux, mal, multiaddr, Opal, Pan, Pygments, wah

(println &quot;Hello, world!&quot;)

(println &quot;Hello World&quot;)

; Hello world in Clojure

(defn hello []
  (println &quot;Hello world!&quot;))

(hello)

(defn rand
  &quot;Returns a random floating point number between 0 (inclusive) and
  n (default 1) (exclusive).&quot;
  ([] (scm* [n] (random-real)))
  ([n] (* (rand) n)))

;; A typical entry point of a Clojure program:
;;   `-main` function
(defn -main ; name
  [&amp; args] ; (variable) parameters
  (println &quot;Hello, World!&quot;)) ; body

Language features
======================================================

row
 Feature Standard Library
 FeatureLink ../features/hasStandardLibrary.html
 Supported ✓
 Example
  (println "Hello, World!")
 Token 
row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Example
  ; -?\d+
 Token 
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Example
  ; -?\d+\.\d+
 Token 
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Example
  ; 0x-?[abcdef\d]+
 Token 
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Example
  (comment A comment
  )
 Token (comment )
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token println
row
 Feature Homoiconicity
 FeatureLink ../features/hasHomoiconicity.html
 Supported ✓
 Example
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  ; A comment
 Token ;
row
 Feature Operator Overloading
 FeatureLink ../features/hasOperatorOverloading.html
 Supported ✓
 Example
 Token 
row
 Feature Macros
 FeatureLink ../features/hasMacros.html
 Supported ✓
 Example
  ; https://www.braveclojure.com/writing-macros/
  ; https://clojure.org/reference/macros
  (defmacro and
   "Evaluates exprs one at a time, from left to right. If a form
   returns logical false (nil or false), and returns that value and
   doesn't evaluate any of the other expressions, otherwise it returns
   the value of the last expr. (and) returns true."
   {:added "1.0"}
   ([] true)
   ([x] x)
   ([x & next]
    `(let [and# ~x]
       (if and# (and ~@next) and#))))
 Token 
row
 Feature File Imports
 FeatureLink ../features/hasImports.html
 Supported ✓
 Example
  (load "fun")
  (load "files/fun")
  (load-file "./files/fun.clj")
  (defproject project-a
  :dependencies [[org.clojure/clojure "1.5.1"]
                [project-b "0.1.0"]])
  (require '[clojure.string :as string])
  (use '[clojure.string :only [split]])
  (import 'java.util.Date)
  (java.util.Date.)
  (require 'clojure.contrib.def 'clojure.contrib.except 'clojure.contrib.sql)
  (require '(clojure.contrib def except sql))
 Token 
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
 Token 
row
 Feature Partial Application
 FeatureLink ../features/hasPartialApplication.html
 Supported ✓
 Example
  (defn fun-full [x y] (+ x y))
  (fun-full 2 3)
  (def fun-half (partial fun-full 2))
  (fun-half 3)
 Token 
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
  "hello world"
 Token "
row
 Feature Lispy
 FeatureLink ../features/isLisp.html
 Supported ✓
 Example
 Token 
row
 Feature Case Insensitive Identifiers
 FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
 Supported X
 Example
 Token 
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token
