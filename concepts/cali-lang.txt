Cali-Lang
=========

Cali-Lang is a programming language created in 2015.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222015%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2015

#2189 on PLDB
9 Years Old

git clone https://github.com/cali-lang/cali.lang.base

Cali is an object oriented interpreted programming language written in Java. It is an efficiency (glue) language that is loosely typed. Cali has it's own standard library but anyone can create external Java modules to extend Cali. In fact, the entire standard library was written by wrapping Java code.

- Tags: programming language
- Cali-Lang is developed on GitHub and has 1 stars
- Early development of Cali-Lang happened in https://github.com/cali-lang
- Cali-Lang is written in Java, XML, Markdown

include console;
include net.rpc;
include rpcDemoObj;        // Include demo object.
class rpcDemoServer : rpcServer
{
    public main(args)
    {
        rd = new rpcDemoServer();
        console
            .println(&#39;Starting up rpcDemoServer on localhost:9090&#39;)
            .println(&#39;Hit ctrl-c to kill the server.&#39;)
            .println(&#39;Waiting for calls ...\n&#39;)
        ;
        rd.start();
    }
    cart = [];
    public rpcDemoServer()
    {
        this    // Hosted methods
            .add(&#39;addToCart&#39;)
            .add(&#39;getCart&#39;)
        ;
    }
    public addToCart(object Item)
    {
        if(Item instanceof &#39;rpcDemoObj&#39;)
        {
            console.println(&quot;Adding item &#39;&quot; + Item.getModelName() + &quot;&#39; to cart.&quot;);
            this.cart @= Item;
            return true;
        }
        else { throw &quot;Unexpected object found.&quot;; }
    }
    public getCart()
    {
        console.println(&#39;Returning shopping cart.&#39;);
        return this.cart;
    }
}

View source
