Q
=

Q is a programming language created in 2003 by Arthur Whitney.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222003%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2003
 https://pldb.io/concepts/../lists/creators.html#q=Arthur%20Whitney Arthur Whitney

#388 on PLDB
21 Years Old
768 Repos

Q is a proprietary array processing language developed by Arthur Whitney and commercialized by Kx Systems. The language serves as the query language for kdb+, a disk based and in-memory, column-based database. kdb+ is based upon K, a terse variant of APL. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems) Read more on Wikipedia...

- Tags: programming language
- There are at least 768 Q repos on GitHub
- Early development of Q happened in Kx Systems
- The  Google BigQuery Public Dataset GitHub snapshot shows 157 users using Q in 170 repos on GitHub
- There are 152 Project Euler users using Q
- Explore Q snippets on Rosetta Code
- Q appears in the TIOBE Index
- CodeMirror package for syntax highlighting Q
- Pygments supports syntax highlighting for Q
- GitHub supports syntax highlighting for Q
- PLDB has 2 Jupyter Kernels for Q: github.com, github.com
- See also: (5 related languages) Q, Scheme, K, APL, SQL
- 1 PLDB concepts link to Q: Lil

&quot;Hello World&quot;

/* Hello world in Q */

hello            = writes &quot;Hello, world!\n&quot;;

dst:`:tq
src:`:tqsrc
F:key src

/ trade fields (types;widths)   trf after 200609
tf:`time`ex`sym`s`cond`size`price`stop`corr`seq`cts`trf
tt:(&quot;TCSS*IFBIJCC &quot;;9 1 6 10 4 9 11 1 2 16 1 1,1+20060930&lt;&quot;I&quot;$-8#string first F)

/ quote fields (types;widths)
qf:`time`ex`sym`s`bid`bsize`ask`asize`cond`mmid`bex`aex`seq`bbo`qbbo`corr`cqs
qt:(&quot;TCSSFIFIC*CCJCCCC &quot;;9 1 6 10 11 7 11 7 1 4 1 1 16 1 1 1 1 2)

/ sym[.s] &quot;e&quot;$pricebidask
g:{[f;x]`sym`time xcols delete s from @[;`sym;{$[null y;x;` sv x,y]}&#39;;x`s]@[x;f;&quot;e&quot;$%;1e4]}
foo:{[d;f;t;g;x]@[;`sym;`p#].Q.dsftg[(dst;&quot;D&quot;$-8#string x;d);(` sv src,x;sum t 1;0);f;t;g]}

\t foo[`trade;tf;tt;g[`price]  ]each F where F like&quot;taqtrade*[0-9]&quot;;
\t foo[`quote;qf;qt;g[`bid`ask]]each F where F like&quot;taqquote*[0-9]&quot;;

\
http://www.nyxdata.com/Data-Products/Daily-TAQ

q)select from t where name like &quot;ja*&quot;,age&gt;50
name age
--------
jack 60

q)select rows:count i by age from t
age| rows
---| ----
20 | 1
50 | 2
60 | 1

Language features
======================================================

row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported âœ“
 Example
  "Hello world"
 Token "

View source
