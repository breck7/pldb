CSP
===

CSP, aka Communicating Sequential Processes, is a programming language created in 1978.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221978%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#468 on PLDB
46 Years Old

In computer science, communicating sequential processes (CSP) is a formal language for describing patterns of interaction in concurrent systems. It is a member of the family of mathematical theories of concurrency known as process algebras, or process calculi, based on message passing via channels. CSP was highly influential in the design of the occam programming language, and also influenced the design of programming languages such as Limbo, RaftLib, Go, Crystal, and Clojure's core.async. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Communicating_sequential_processes

- CSP Wikipedia page
 https://en.wikipedia.org/wiki/Communicating_sequential_processes
- CSP docs
 https://aiochan.readthedocs.io/en/latest/csp.html
- CSP first developed in Oxford University
- CSP on HOPL
 https://hopl.info/showlanguage.prx?exp=795
- Monaco package for syntax highlighting CSP
- See also: (6 related languages)Occam, Limbo, Go, Crystal, Clojure, Ada

COPY = *[c:character; west?c â†’ east!c]
