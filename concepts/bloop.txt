BlooP
=====

BlooP is an esoteric programming language created in 1979.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221979%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#1000 on PLDB
45 Years Old

Try now: Replit

BlooP and FlooP are simple programming languages designed by Douglas Hofstadter to illustrate a point in his book Gödel, Escher, Bach. BlooP is a non-Turing-complete programming language whose main control flow structure is a bounded loop (i.e. recursion is not permitted). Read more on Wikipedia...
 https://en.wikipedia.org/wiki/BlooP_and_FlooP

- BlooP Wikipedia page
 https://en.wikipedia.org/wiki/BlooP_and_FlooP
- BlooP first developed in Fluid Analogies Research Group
- Explore BlooP snippets on Rosetta Code
- BlooP on HOPL
 https://hopl.info/showlanguage.prx?exp=844

DEFINE PROCEDURE &#39;&#39;HELLO-WORLD&#39;&#39; [N]:
BLOCK 0: BEGIN
     PRINT[&#39;Hello World&#39;]
BLOCK 0: END.
HELLO-WORLD[1];

DEFINE PROCEDURE &#39;&#39;ACKERMANN&#39;&#39; [M, N]:
BLOCK 0: BEGIN
	CELL(0) ⇐ M;
	OUTPUT ⇐ N;
	CELL(1) ⇐ 0;
	MU-LOOP:
	BLOCK 1: BEGIN
		IF CELL(0) = 0, THEN:
		BLOCK 2: BEGIN
			OUTPUT ⇐ OUTPUT + 1;
			IF CELL(1) = 0, THEN: ABORT LOOP 1;
			CELL(0) ⇐ TOP [CELL(1)];
			CELL(1) ⇐ POP [CELL(1)];
			QUIT BLOCK 1;
		BLOCK 2: END
		IF OUTPUT = 0, THEN:
		BLOCK 3: BEGIN
			OUTPUT ⇐ 1;
			CELL(0) ⇐ MINUS [CELL(0), 1];
			QUIT BLOCK 1;
		BLOCK 3: END
		OUTPUT ⇐ MINUS [OUTPUT, 1];
		CELL(1) ⇐ PUSH [MINUS [CELL(0), 1], CELL(1)];
	BLOCK 1: END;
BLOCK 0: END.

Language features
======================================================

row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token '
 Example
  'Hello world'
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Token PRINT
 Example
