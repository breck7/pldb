import ../code/conceptPage.scroll

id tls
name TLS
appeared 1999
tags protocol
standsFor Transport Layer Security

fileType na
docs https://www.rfc-editor.org/rfc/rfc5246
centralPackageRepositoryCount 0

wikipedia https://en.wikipedia.org/wiki/Transport_Layer_Security
 related http ftp smtp tcp udp linux android ios solaris delphi java javascript
 summary Transport Layer Security (TLS) and its predecessor, Secure Sockets Layer (SSL), are cryptographic protocols that provide communications security over a computer network. Several versions of the protocols find widespread use in applications such as web browsing, email, Internet faxing, instant messaging, and Voice over IP (VoIP). Websites are able to use TLS to secure all communications between their servers and web browsers. The Transport Layer Security protocol aims primarily to provide privacy and data integrity between two communicating computer applications. When secured by TLS, connections between a client (e.g., a web browser) and a server (e.g., wikipedia.org) have one or more of the following properties: The connection is private (or secure) because symmetric cryptography is used to encrypt the data transmitted. The keys for this symmetric encryption are generated uniquely for each connection and are based on a shared secret negotiated at the start of the session (see § TLS handshake). The server and client negotiate the details of which encryption algorithm and cryptographic keys to use before the first byte of data is transmitted (see § Algorithm below). The negotiation of a shared secret is both secure (the negotiated secret is unavailable to eavesdroppers and cannot be obtained, even by an attacker who places themselves in the middle of the connection) and reliable (no attacker can modify the communications during the negotiation without being detected). The identity of the communicating parties can be authenticated using public-key cryptography. This authentication can be made optional, but is generally required for at least one of the parties (typically the server). The connection ensures integrity because each message transmitted includes a message integrity check using a message authentication code to prevent undetected loss or alteration of the data during transmission. In addition to the properties above, careful configuration of TLS can provide additional privacy-related properties such as forward secrecy, ensuring that any future disclosure of encryption keys cannot be used to decrypt any TLS communications recorded in the past. TLS supports many different methods for exchanging keys, encrypting data, and authenticating message integrity (see § Algorithm below). As a result, secure configuration of TLS involves many configurable parameters, and not all choices provide all of the privacy-related properties described in the list above (see the § Key exchange (authentication), § Cipher security, and § Data integrity tables). Attempts have been made to subvert aspects of the communications security that TLS seeks to provide and the protocol has been revised several times to address these security threats (see § Security). Developers of web browsers have also revised their products to defend against potential security weaknesses after these were discovered (see TLS/SSL support history of web browsers). The TLS protocol comprises two layers: the TLS record and the TLS handshake protocols. TLS is a proposed Internet Engineering Task Force (IETF) standard, first defined in 1999 and updated in RFC 5246 (August 2008) and RFC 6176 (March 2011). It builds on the earlier SSL specifications (1994, 1995, 1996) developed by Netscape Communications for adding the HTTPS protocol to their Navigator web browser.
 pageId 187813
 dailyPageViews 4915
 created 2001
 backlinksCount 1638
 revisionCount 4100
 appeared 1999

isbndb 1
 year|publisher|title|authors|isbn13
 2011-01-07|Wiley|Implementing SSL / TLS Using Cryptography and PKI|Joshua Davies|9781118038772

semanticScholar 2
 year|title|doi|citations|influentialCitations|authors|paperId
 2017|Implementing and Proving the TLS 1.3 Record Layer|10.1109/SP.2017.58|74|2|K. Bhargavan and Antoine Delignat-Lavaud and C. Fournet and Markulf Kohlweiss and J. Pan and Jonathan Protzenko and Aseem Rastogi and N. Swamy and Santiago Zanella Béguelin and J. Zinzindohoué|3f4ec516aa4eaf52019a2bfced52e786190e5dc2
 2014|An Intrinsic Encoding of a Subset of C and its Application to TLS Network Packet Processing|10.6092/ISSN.1972-5787/4317|7|2|Reynald Affeldt and Kazuhiko Sakaguchi|8b052110776112bef379a27e6abbfc5288ccd40f
