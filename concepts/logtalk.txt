Logtalk
=======

Logtalk is a programming language created in 1998 by Paulo Moura.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221998%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Paulo%20Moura

#492 on PLDB
26 Years Old
65 Repos

Logtalk is an object-oriented logic programming language that extends and leverages the Prolog language with a feature set suitable for programming in the large. It provides support for encapsulation and data hiding, separation of concerns and enhanced code reuse. Logtalk uses standard Prolog syntax with the addition of a few operators and directives. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Logtalk_(programming_language)

- Logtalk website
 http://logtalk.org
- Logtalk appears in categories: programming language
- Logtalk Wikipedia page
 https://en.wikipedia.org/wiki/Logtalk_(programming_language)
- There are at least 65 Logtalk repos on GitHub
- Logtalk first developed in https://github.com/LogtalkDotOrg
- Logtalk on Twitter
 https://twitter.com/logtalkdotorg
- The  Google BigQuery Public Dataset GitHub snapshot shows 50 users using Logtalk in 52 repos on GitHub
- Explore Logtalk snippets on Rosetta Code
- Logtalk on HOPL
 https://hopl.info/showlanguage.prx?exp=3555
- Pygments supports syntax highlighting for Logtalk
- GitHub supports syntax highlighting for Logtalk
- logtalk.org was registered in 2002
- See also: (7 related languages)Prolog, Smalltalk, Objective-C, SWI Prolog, Mercury, Oz, Visual Prolog
- 3 languages in PLDB linking to Logtalk: Ace Editor, cloc, Pygments

write(&#39;Hello World&#39;)

% this is a Logtalk source file

:- object(hello_world).

	% the initialization/1 directive argument is automatically executed
	% when the object is loaded into memory:
	:- initialization((nl, write(&#39;********** Hello World! **********&#39;), nl)).

:- end_object.

?- my_first_object::p2.
ERROR: error(permission_error(access, private_predicate, p2), my_first_object::p2, user)

Language features
======================================================

row
 Feature Binary Literals
 FeatureLink ../features/hasBinaryNumbers.html
 Supported ✓
 Token 
 Example
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Token 
 Example
row
 Feature Octals
 FeatureLink ../features/hasOctals.html
 Supported ✓
 Token 
 Example
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token '
 Example
  'Hello world'
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Token write
 Example
row
 Feature Multiple Inheritance
 FeatureLink ../features/hasMultipleInheritance.html
 Supported ✓
 Token 
 Example
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
