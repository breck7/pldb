import ../code/conceptPage.scroll

id gdscript
name GDScript
appeared 2008
tags pl
website http://docs.godotengine.org/en/3.0/getting_started/scripting/gdscript/gdscript_basics.html
description GDScript is a high level, dynamically typed programming language used to create content. It uses a syntax similar to Python (blocks are indent-based and many keywords are similar). Its goal is to be optimized for and tightly integrated with Godot Engine, allowing great flexibility for content creation and integration.

clocExtensions gd
fileType text
centralPackageRepositoryCount 0
country Various
originCommunity https://github.com/godotengine
reference https://en.wikipedia.org/wiki/Godot_(game_engine)

pygmentsHighlighter GDScript
 filename gdscript.py
 fileExtensions gd
example
 # A file is a class!
 
 # Inheritance
 
 extends BaseClass
 
 # Member Variables
 
 var a = 5
 var s = "Hello"
 var arr = [1, 2, 3]
 var dict = {"key": "value", 2:3}
 
 # Constants
 
 const ANSWER = 42
 const THE_NAME = "Charly"
leachim6 GDScript
 filepath g/GDScript.gd
 fileExtensions gd
 example
  extends Node2D
  
  func _ready():
  	print("Hello World")
  

lineCommentToken #
printToken print
stringToken "

hasLineComments true
 # A comment
hasComments true
 # A comment
hasPrintDebugging true
hasSemanticIndentation false
hasStrings true
 "Hello world"
hasHexadecimals true
 # 0[xX][a-fA-F0-9]+
hasFloats true
 # (\d+\.\d*|\d*\.\d+)([eE][+-]?[0-9]+)?j?
hasIntegers true
 # \d+j?

githubBigQuery GDScript
 repos 681
 users 513

linguistGrammarRepo https://github.com/beefsack/GDScript-sublime
 firstCommit 2014
 lastCommit 2018
 committerCount 5
 commitCount 29
 sampleCount 4
 example
  # Taken from https://github.com/okamstudio/godot/wiki/gdscript
  # a file is a class!
  
  # inheritance
  
  extends BaseClass
  
  # member variables
  
  var a = 5
  var s = "Hello"
  var arr = [1, 2, 3]
  var dict = {"key":"value", 2:3}
  
  # constants
  
  const answer = 42
  const thename = "Charly"
  
  # built-in vector types
  
  var v2 = Vector2(1, 2)
  var v3 = Vector3(1, 2, 3)
  
  # function
  
  func some_function(param1, param2):
      var local_var = 5
  
      if param1 < local_var:
          print(param1)
      elif param2 > 5:
          print(param2)
      else:
          print("fail!")
  
      for i in range(20):
          print(i)
  
      while(param2 != 0):
          param2 -= 1
  
      var local_var2 = param1+3
      return local_var2
  
  
  # subclass
  
  class Something:
      var a = 10
  
  # constructor
  
  func _init():
      print("constructed!")
      var lv = Something.new()
      print(lv.a)

githubLanguage GDScript
 fileExtensions gd
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  godotengine godot-demo-projects https://github.com/godotengine.png https://github.com/godotengine/godot-demo-projects GDScript #355570 846 454 39 "Demonstration and Template Projects"
 trendingProjectsCount 2
 type programming
 aceMode text
 tmScope source.gdscript
 repos 39447
