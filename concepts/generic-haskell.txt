Generic Haskell
===============

Generic Haskell is a programming language created in 2000.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222000%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2000

#3370 on PLDB
24 Years Old

Since datatypes often change and new datatypes are introduced, we have developed Generic HASKELL which supports generic definitions to save the programmer from (re)writing instances of generic functions. Generic HASKELL extends the functional programming language Haskell [5] with, among other things, a construct for defining type-indexed values with kind-indexed types, based on recent work by Hinze [2]. These values can be specialised to all Haskell datatypes, facilitating wider application of generic programming than provided by earlier systems such as PolyP

- Tags: programming language
- Early development of Generic Haskell happened in Uppsala University and Utrecht University and University of Oxford
- Generic Haskell on HOPL
 https://hopl.info/showlanguage.prx?exp=4935 Generic Haskell on HOPL
- Read more about Generic Haskell on the web: 1.
 https://www.researchgate.net/publication/27685179_The_generic_HASKELL_user's_guide_version_099_-_Amber_release 1.
