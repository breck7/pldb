Turing
======

Turing is a programming language created in 1982 by Ric Holt.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221982%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Ric%20Holt

#503 on PLDB
42 Years Old
524 Repos

Turing is a Pascal-like programming language developed in 1982 by Ric Holt and James Cordy, then of University of Toronto, Canada. Turing is a descendant of Euclid, Pascal and SP/k that features a clean syntax and precise machine-independent semantics. Turing 4.1.0 is the latest stable version of Turing. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Turing_(programming_language)

- Turing Wikipedia page
 https://en.wikipedia.org/wiki/Turing_(programming_language)
- Turing docs
 https://turing.ml/v0.21/docs/using-turing/
- There are at least 524 Turing repos on GitHub
- The  Google BigQuery Public Dataset GitHub snapshot shows 153 users using Turing in 167 repos on GitHub
- Explore Turing snippets on Rosetta Code
- Turing on HOPL
 https://hopl.info/showlanguage.prx?exp=1023
- GitHub supports syntax highlighting for Turing
- See also: (5 related languages)Euclid, Pascal, SP/k, MIPS architecture, TXL

% Accepts a number and calculates its factorial

function factorial (n: int) : real
     if n = 0 then
          result 1
     else
          result n * factorial (n - 1)
     end if
end factorial

var n: int
loop
     put &quot;Please input an integer: &quot; ..
     get n
     exit when n &gt;= 0
     put &quot;Input must be a non-negative integer.&quot;
end loop

put &quot;The factorial of &quot;, n, &quot; is &quot;, factorial (n)

put &quot;Hello World&quot;

% Accepts a number and calculates its factorial

function factorial (n: int) : real
	if n = 0 then
		result 1
	else
		result n * factorial (n - 1)
   end if
end factorial

var n: int
loop
	put &quot;Please input an integer: &quot; ..
	get n
	exit when n &gt;= 0
	put &quot;Input must be a non-negative integer.&quot;
end loop

put &quot;The factorial of &quot;, n, &quot; is &quot;, factorial (n)

% Accepts a number and calculates its factorial
 
 function factorial (n: int) : real
      if n = 0 then
           result 1
      else
           result n * factorial (n - 1)
      end if
 end factorial
 
 var n: int
 loop
      put &quot;Please input an integer: &quot; ..
      get n
      exit when n &gt;= 0
      put &quot;Input must be a non-negative integer.&quot;
 end loop
 
 put &quot;The factorial of &quot;, n, &quot; is &quot;, factorial (n)

Language features
======================================================

row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token "
 Example
  "Hello world"
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Token put
 Example
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  % A comment
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token %
 Example
  % A comment
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
