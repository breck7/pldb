import ../code/conceptPage.scroll

id rexx
name Rexx
appeared 1979
creators Mike Cowlishaw
tags pl
fileExtensions cmd exec rexx rex
interviews https://pldb.io/blog/mikecowlishaw-interview.html

tryItOnline https://tio.run/#rexx
clocExtensions pprx rexx
fileType text
docs https://www.ibm.com/docs/en/zos/2.1.0?topic=guide-learning-rexx-language
rosettaCode http://www.rosettacode.org/wiki/Category:REXX
quineRelay REXX
ubuntuPackage regina-rexx
country United Kingdom
originCommunity IBM
projectEuler Rexx
 memberCount
  2019 11
  2022 11

pygmentsHighlighter Rexx
 filename scripting.py
 fileExtensions rexx rex rx arexx
rijuRepl https://riju.codes/rexx
 example
  say "Hello, world!"
  
leachim6 Rexx
 filepath r/Rexx.rexx
 fileExtensions rexx
 example
  <<hello.rexx>>=
  Say "Hello World"
  

multiLineCommentTokens /* */
printToken say
stringToken "

hasComments true
 * => 1000000000 */
hasLineComments false
hasPrintDebugging true
hasMultiLineComments true
 /* A comment
 */
hasSemanticIndentation false
hasStrings true
 "Hello world"

wikipedia https://en.wikipedia.org/wiki/REXX
 example
  ChangeCodePage: procedure /* protect SIGNAL settings */
   signal on syntax name ChangeCodePage.Trap
   return SysQueryProcessCodePage()
   ChangeCodePage.Trap: return 1004 /* windows-1252 on OS/2 */
 related arexx netrexx object-rexx pl-i algol cms-exec exec-2 perl assembly-language tcl python java linux unix solaris visual-basic jscript
 summary Rexx (Restructured Extended Executor) is an interpreted programming language developed at IBM by Mike Cowlishaw. It is a structured, high-level programming language designed for ease of learning and reading. Proprietary and open source REXX interpreters exist for a wide range of computing platforms; compilers exist for IBM mainframe computers. Rexx is used as a scripting and macro language, and is often used for processing data and text and generating reports; these similarities with Perl mean that Rexx works well in Common Gateway Interface (CGI) programming and it is indeed used for this purpose. Rexx is the primary scripting language in some operating systems, e.g. OS/2, MVS, VM, AmigaOS, and is also used as an internal macro language in some other software, such as KEDIT, THE and the ZOC terminal emulator. Additionally, the Rexx language can be used for scripting and macros in any program that uses Windows Scripting Host ActiveX scripting engines languages (e.g. VBScript and JScript) if one of the Rexx engines is installed. Rexx is supplied with VM/SP on up, TSO/E Version 2 on up, OS/2 (1.3 and later, where it is officially named Procedures Language/2), AmigaOS Version 2 on up, PC DOS (7.0 or 2000), and Windows NT 4.0 (Resource Kit: Regina). REXX scripts for OS/2 share the filename extension .cmd with other scripting languages, and the first line of the script specifies the interpreter to be used. REXX macros for REXX-aware applications use extensions determined by the application. In the late 1980s Rexx became the common scripting language for IBM Systems Application Architecture, where it was renamed "SAA Procedure Language REXX." A Rexx script or command is sometimes referred to as an EXEC in a nod to Rexx's role as a replacement for the older EXEC command language on CP/CMS and VM/370 and EXEC 2 command language on VM/SP.
 pageId 25572284
 dailyPageViews 43
 created 2012
 backlinksCount 91
 revisionCount 3
 appeared 1979
 fileExtensions cmd exec rexx rex

hopl https://hopl.info/showlanguage.prx?exp=868
tiobe REXX

githubBigQuery REXX
 repos 71
 users 69

linguistGrammarRepo https://github.com/mblocker/rexx-sublime
 firstCommit 2014
 lastCommit 2017
 committerCount 2
 commitCount 13
 sampleCount 4
 example
  /* rexx */
  PARSE ARG filnamn
  IF filnamn='' THEN DO
     filnamn='raw'
     filnamn='font.shapes'
     end
  IF ~open(fil,filnamn,r) THEN EXIT 10
  pixwidth=48
  ebwidth=pixwidth/8
  pixheight=48
  depth=4
  SAY "Skriver utfil..."
  CALL open utfil,"RAM:utfil",W
  CALL skriv pixwidth,2
  CALL skriv pixheight,2
  CALL skriv depth,2
  CALL skriv ebwidth,2
  bltsize=Right(C2B(D2C(pixheight)),10,"00")
  bltsize=bltsize || Right(C2B(D2C(ebwidth)),6,"00")
  /* SAY bltsize */
  CALL skriv C2D(B2C(bltsize)),2
  CALL skriv 0,4 /* xhandle, yhandle*/
  CALL skriv 0,4 /* datapekare */
  CALL skriv 0,4 /* cookiepekare */
  CALL skriv ebwidth*pixheight,2 /* onebpmem */
  CALL skriv ebwidth*pixheight+pixheight*2,2 /* onebpmemx */
  CALL skriv ebwidth*pixheight*depth,2 /* allbpmem */
  CALL skriv ebwidth*pixheight*depth+pixheight*2*depth,2 /* allbpmemx */
  CALL skriv 0,2 /* padding */
  CALL Close utfil
  EXIT
  
  skriv:
  say "Skriver $"D2X(arg(1)) "("arg(2) "byte)"
  call writech utfil,right(D2C(ARG(1)),ARG(2),"00"x)
  return
  
  visacookie:
     rad=copies('00'x,pixheight*ebwidth)
     say "Initierar bitmap till" pixheight*ebwidth*depth
     say "Ett bitplan =" pixheight*ebwidth
     bmap.=''
     say "laser in"
     do bitplan=1 to depth
        say "laser plan" bitplan
        rad=bitor(rad,readch(fil,pixheight*ebwidth))
        end
     ln=1
     say "skriver ut"
     do for pixheight
        say c2b(substr(rad,ln,bredd/8))
        ln=ln+bredd/8
        end
  return

isbndb 11
 year|publisher|title|authors|isbn13
 1990T|McGraw-Hill|Programming in REXX|Daney, Charles|9780070153059
 1990|Prentice Hall|The Rexx Language: A Practical Approach to Programming|Cowlishaw, Michael|9780137806515
 2005|Wrox|Rexx Programmer's Reference|Fosdick, Howard|9780764579967
 1985|Prentice Hall|The REXX language: A practical approach to programming|Cowlishaw, M. F|9780137807352
 1985|Prentice Hall|Modern Programming Using Rexx|O'Hara, Robert P. and Gomberg, David Roos|9780135973110
 1988|Prentice Hall|Modern Programming Using Rexx|O'Hara, Robert P. and Gomberg, David Roos|9780135973295
 1997|Prentice Hall|The Net REXX Language|Michael F. Cowlishaw|9780138063320
 1997|Wiley|Object-oriented Programming With Rexx|Tom Ender|9780471118442
 20121206|Springer Nature|Practical Usage of TSO REXX|Anthony S. Rudd|9781447107552
 20101001|De Gruyter|REXX Grundlagen f√ºr die z/OS Praxis|Johann Deuring|9783486598759
 1996|Ibm|Vm/esa Gui Facility Developer's Guide Rexx And C++ Gui Programming|Ibm Redbooks|9780738408699

githubLanguage REXX
 fileExtensions rexx pprx rex
 trendingProjectsCount 0
 type programming
 interpreters regina rexx
 aceMode text
 tmScope source.rexx
 aliases arexx
 repos 263

indeedJobs rexx engineer
 2022 40

semanticScholar 4
 year|title|doi|citations|influentialCitations|authors|paperId
 1984|The design of the REXX language|10.1145/24686.24687|12|0|M. Cowlishaw|390c4c26f46bc92ef15fff9dfd99ba1e563bbdeb
 1994|The early history of REXX|10.1109/85.329753|5|0|M. Cowlishaw|e47b141a0094c59c652e2e715829b321298b546f
 1989|REXX on TSO/E|10.1147/sj.282.0274|2|0|Gerhard E. Hoernes|caadce71ca7e82e1ba8e3e0a471db6be758e6525
 1991|Partial Compilation of REXX|10.1147/sj.303.0312|1|0|R. Pinter and P. Vortman and Zvi Weiss|2d3d89b37f8cfa39ac9b00eeae8507a09f6e350e

goodreads
 title|year|author|goodreadsId|rating|ratings|reviews
 Programming In Rexx|1992|Charles Daney|1795698|4.40|5|0
 The REXX Language on TSO: REXX Functions|2013|Gabriel F. Gargiulo|27160540|4.00|2|0
 REXX Programmer's Reference|2005|Howard Fosdick|1795688|3.58|12|1
 The REXX Language: A Practical Approach to Programing|1990|Michael Cowlishaw|1795697|4.33|12|0
 rexx tutorial for beginners:learn rexx programming: learn rexx programming very fast||Anmol Goyal|59640536|5.00|1|0
 Rexx: Advanced Techniques For Programmers|1992|Peter C. Kiesel|13267128|3.00|2|0
 The REXX Language on TSO|2012|Gabriel F. Gargiulo|27149752|4.00|3|0
 Object-Oriented Programming with REXX|1997|Thomas Ender|7323905|0.0|0|0
