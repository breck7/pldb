BlitzBasic
==========

BlitzBasic is a programming language created in 2000.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222000%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#623 on PLDB
24 Years Old
595 Repos

Blitz BASIC refers to the programming language dialect that was interpreted by the first Blitz compilers, devised by New Zealand-based developer Mark Sibly. Being derived from BASIC, Blitz syntax was designed to be easy to pick up for beginners first learning to program.  The languages are game-programming oriented but are often found general-purpose enough to be used for most types of application. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Blitz_BASIC

- BlitzBasic Wikipedia page
 https://en.wikipedia.org/wiki/Blitz_BASIC
- BlitzBasic docs
 https://daemonbite.com/files/linked/BB21Manual.pdf
- There are at least 595 BlitzBasic repos on GitHub
- BlitzBasic first developed in Blitz Research
- The  Google BigQuery Public Dataset GitHub snapshot shows 417 users using BlitzBasic in 492 repos on GitHub
- Pygments supports syntax highlighting for BlitzBasic
- GitHub supports syntax highlighting for BlitzBasic
- See also: (10 related languages)BASIC, Linux, Monkey, OpenGL, ASCII, Lua, Unicode, C#, PureBasic, iOS

Local i, start, result

Local s.Sum3Obj = New Sum3Obj

For i = 1 To 100000
	s = New Sum3Obj
	result = Handle Before s
	Delete s
Next

start = MilliSecs()
For i = 1 To 1000000
	result = Sum3_(MakeSum3Obj(i, i, i))
Next
start = MilliSecs() - start
Print start

start = MilliSecs()
For i = 1 To 1000000
	result = Sum3(i, i, i)
Next
start = MilliSecs() - start
Print start

WaitKey
End

Function Sum3(a, b, c)
	Return a + b + c
End Function

Type Sum3Obj
	Field isActive
	Field a, b, c
End Type

Function MakeSum3Obj(a, b, c)
	Local s.Sum3Obj = Last Sum3Obj
	If s\isActive Then s = New Sum3Obj
	s\isActive = True
	s\a = a
	s\b = b
	s\c = c
	
	Restore label
	Read foo
	
	Return Handle(s)
End Function

.label
Data (10 + 2), 12, 14
:
Function Sum3_(a_)
	Local a.Sum3Obj = Object.Sum3Obj a_
	Local return_ =  a\a + a\b + a\c
	Insert a Before First Sum3Obj :: a\isActive = False
	Return return_
End Function

;~IDEal Editor Parameters:
;~C#Blitz3D

AppTitle = &quot;Binary Clock&quot;
 Graphics 145,85

 secondtimer = CreateTimer(2)
 
 Repeat
         Hour = CurrentTime()[..2].ToInt()
         Minute = CurrentTime()[4..6].ToInt()
         Second = CurrentTime()[6..].ToInt()

         If Hour &gt;= 12 Then PM = 1
         If Hour &gt; 12 Then Hour = Hour - 12
         If Hour = 0 Then Hour = 12

         &#39;should do this otherwise the PM dot will be
         &#39;Left up once the clock rolls past midnight!
         Cls

         SetColor(0,255,0) &#39;make the text green For the PM part
         If PM  = 1 Then DrawText &quot;PM&quot;,5,5
         &#39;set the text colour back To white For the rest
         SetColor(255,255,255)

         For bit=0 Until 6
                 xpos=20*(6-bit)
                 binaryMask=2^bit
                 &#39;do hours
                 If (bit&lt;4)
                         If (hour &amp; binaryMask)
                                 DrawText &quot;1&quot;,xpos,5
                         Else
                                 DrawText &quot;0&quot;,xpos,5
                         EndIf
                 EndIf

                 &#39;do the minutes
                 If (minute &amp; binaryMask)
                         DrawText &quot;1&quot;, xpos,25
                 Else
                         DrawText &quot;0&quot;, xpos,25
                 EndIf

                 &#39;do the seconds
                 If (second &amp; binaryMask)
                         DrawText &quot;1&quot;,xpos,45
                 Else
                         DrawText &quot;0&quot;,xpos,45
                 EndIf
         Next

         &#39;make the text red For the decimal time
         SetColor(255,0,0)
         DrawText &quot;Decimal: &quot; + CurrentTime(),5,65
         &#39;set the text back To white For the rest
         SetColor(255,255,255)

 	 Flip

         &#39;will wait half a second
         WaitTimer(secondTimer)
 	 If KeyHit(KEY_ESCAPE) Then Exit
 Forever

Language features
======================================================

row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token 
 Example
row
 Feature Binary Literals
 FeatureLink ../features/hasBinaryNumbers.html
 Supported ✓
 Token 
 Example
row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Token 
 Example
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Token 
 Example
row
 Feature Hexadecimals
 FeatureLink ../features/hasHexadecimals.html
 Supported ✓
 Token 
 Example
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Token True False
 Example
