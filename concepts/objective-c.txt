Objective-C
===========

Objective-C is a programming language created in 1984 by Brad Cox.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221984%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1984
 https://pldb.io/concepts/../lists/creators.html#q=Brad%20Cox Brad Cox

#31 on PLDB
40 Years Old
536k Repos

Objective-C is a general-purpose, object-oriented programming language that adds Smalltalk-style messaging to the C programming language. It was the main programming language used by Apple for the OS X and iOS operating systems, and their respective application programming interfaces (APIs) Cocoa and Cocoa Touch prior to the introduction of Swift. The programming language Objective-C was originally developed in the early 1980s. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Objective-C Read more on Wikipedia...

- Tags: programming language
- There are at least 535,667 Objective-C repos on GitHub
- Objective-C is a superset of C
- Early development of Objective-C happened in Apple
- The  Google BigQuery Public Dataset GitHub snapshot shows 97k users using Objective-C in 167k repos on GitHub
- Check out the 445 Objective-C meetup groups on Meetup.com.
- There are 6,609 members in the Objective-C subreddit
- There are 60 Project Euler users using Objective-C
- In the 2021 StackOverflow developer survey Objective-C programmers reported a median salary of $64,859. 3% of respondents reported using Objective-C. 2,310 programmers reported using Objective-C, and 1,400 said they wanted to use it
- Explore Objective-C snippets on Rosetta Code
- Objective-C is supported by the GDB
- Objective-C on HOPL
 https://hopl.info/showlanguage.prx?exp=1247 Objective-C on HOPL
- Objective-C ranks #19 in the TIOBE Index
- Objective-C Ubuntu package
 https://packages.ubuntu.com/jammy/gobjc Objective-C Ubuntu package
- ANTLR grammar for Objective-C
- Monaco package for syntax highlighting Objective-C
- Pygments supports syntax highlighting for Objective-C
- GitHub supports syntax highlighting for Objective-C
- Objective-C appears in the Quine Relay project
- There is a central package repository for Objective-C
- Indeed.com has 4,276 matches for "objective-c engineer".
- See also: (16 related languages) C, Smalltalk, Groovy, Java, Nu, Objective-J, TOM object-oriented, Swift, iOS, Simula, Ada, Self, Ruby, LLVM IR, Linux, Vala
- 53 PLDB concepts link to Objective-C: Ace Editor, Bazel, BlitzMax, blockml, Chapel, cloc, cooC, DRAKON, dreamlisp, eC, Eiffel, F-Script, Felix, FFmpeg, fish, Flow9, GCC, Go, Gradle, gravity, hashlink, Haxe, HHVM, ImHex, invokator, Iterm2, Java, Julia, Kotlin, lobster, LWJGL, mal, Matplotlib, MongoDB, MonkeyX, NCSA Mosaic, NCAR Command Language, Nim, OpenCV, Pygments, Python, PyTorch, React Native, Revolution, score, sile, Swift, tamgu, tbox-lib, TensorFlow, V, Wonkey, WorldWideWeb Browser

#import &lt;Foundation/Foundation.h&gt;

int main() {
  NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
  NSLog(@&quot;Hello, world!&quot;);
  [pool drain];
  return 0;
}

/*
 Build on OS X:
 clang -framework Foundation -fobjc-arc objc.m -o objc
 
 Build on Linux with GNUstep:
 clang `gnustep-config --objc-flags` `gnustep-config --base-libs` -fobjc-nonfragile-abi -fobjc-arc objc.m -o objc
 */

#import &lt;Foundation/Foundation.h&gt;

int main(void)
{
    NSLog(@&quot;Hello World&quot;);
}

/* Hello World in Objective-C.
** Since the standard implementation is identical to K&amp;R C,
** a version that says hello to a set of people passed on
** the command line is shown here.
*/

#include &lt;stdio.h&gt;
#include &lt;objpak.h&gt;
int main(int argc,char **argv)
{
    id set = [Set new];
    argv++;while (--argc) [set add:[String str:*argv++]];
    [set do:{ :each | printf(&quot;hello, %s!\n&quot;,[each str]); }];
    return 0;
}

#import &quot;Foo.h&quot;

@implementation Foo

@end

-(void) firstLabel: (int)param1 secondLabel: (int)param2;

auto break case char const continue default do double else enum extern float for goto if inline int long register restrict return short signed sizeof static struct switch typedef union unsigned void volatile while _Bool _Complex _Imaginary BOOL Class bycopy byref id IMP in inout nil NO NULL oneway out Protocol SEL self Super YES @ @interface @end @implementation @protocol @class @public @protected @private @property @try @throw @catch() @finally @synthesize @dynamic @selector atomic nonatomic retain

Language features
======================================================

row
 Feature Standard Library
 FeatureLink ../features/hasStandardLibrary.html
 Supported ✓
 Example
  NSLog(@"Hello, World!");
 Token 
row
 Feature Explicit Standard Library
 FeatureLink ../features/hasExplicitStandardLibrary.html
 Supported ✓
 Example
  #include 
 Token 
row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported ✓
 Example
 Token 
row
 Feature Switch Statements
 FeatureLink ../features/hasSwitch.html
 Supported ✓
 Example
 Token 
row
 Feature Constants
 FeatureLink ../features/hasConstants.html
 Supported ✓
 Example
 Token 
row
 Feature While Loops
 FeatureLink ../features/hasWhileLoops.html
 Supported ✓
 Example
 Token 
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Example
  /* A comment
  */
 Token /* */
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token printf
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  // A comment
 Token 
row
 Feature Message Passing
 FeatureLink ../features/hasMessagePassing.html
 Supported ✓
 Example
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  // A comment
 Token //
row
 Feature Interfaces
 FeatureLink ../features/hasInterfaces.html
 Supported ✓
 Example
  @protocol Printing
     -(void) print;
  @end
 Token 
row
 Feature File Imports
 FeatureLink ../features/hasImports.html
 Supported ✓
 Example
  // #import ensures that a file is only ever included once so that you never have a problem with recursive includes.
  #import 
  #include 
  #include 
 Token 
row
 Feature Constructors
 FeatureLink ../features/hasConstructors.html
 Supported ✓
 Example
 Token 
row
 Feature Pointers
 FeatureLink ../features/hasPointers.html
 Supported ✓
 Example
 Token 
row
 Feature Single Dispatch
 FeatureLink ../features/hasSingleDispatch.html
 Supported ✓
 Example
 Token 
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
  "hello world"
 Token "
row
 Feature Case Insensitive Identifiers
 FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
 Supported X
 Example
 Token 
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token 
row
 Feature Operator Overloading
 FeatureLink ../features/hasOperatorOverloading.html
 Supported X
 Example
 Token 
row
 Feature Garbage Collection
 FeatureLink ../features/hasGarbageCollection.html
 Supported X
 Example
 Token
