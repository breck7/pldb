../code/conceptPage.scroll

id pogoscript
name PogoScript
appeared 2011
tags pl
website http://pogoscript.org/
latestVersion 0.10.0
lab https://github.com/featurist
writtenIn javascript markdown make ruby json diff html yaml

isOpenSource true
fileType text
repoStats
 firstCommit 2011
 commits 1174
 committers 4
 files 272
 newestCommit 2015
country United Kingdom

twitter https://twitter.com/pogoscript

githubRepo https://github.com/featurist/pogoscript
 firstCommit 2011
 stars 129
 forks 9
 subscribers 14
 created 2011
 updated 2024
 description A readable, DSL friendly programming language with excellent concurrency primitives
 issues 21

domainName pogoscript.org
 registered 2011

githubBigQuery PogoScript
 repos 12
 users 4

linguistGrammarRepo https://github.com/featurist/PogoScript.tmbundle
 firstCommit 2012
 lastCommit 2015
 committerCount 2
 commitCount 9
 sampleCount 1
 example
  httpism = require 'httpism'
  async = require 'async'
  resolve = require 'url'.resolve
  
  exports.squash (url) ! =
      html = httpism.get ! (url).body
      squash html ! (html, url)
  
  squash html (html, url, callback) =
      replacements = sort (links in (html).concat(scripts in (html)))
      for each @(r) in (replacements) @{ r.url = resolve(url, r.href) }
      async.map (replacements, get) @(err, requested)
          callback (err, replace (requested) in (html))
  
  sort (replacements) =
      replacements.sort @(a, b) @{ a.index - b.index }
  
  get (replacement) =
      replacement.body = httpism.get ! (replacement.url).body
      replacement
  
  replace (replacements) in (html) =
      i = 0
      parts = ""
      for each @(rep) in (replacements)
          parts := "#(parts)#(html.substring(i, rep.index))<#(rep.tag)>#(rep.body)</#(rep.tag)>"
          i := rep.index + rep.length
      
      parts + html.substr(i)
  
  links in (html) =
      link reg = r/<link\s[^>]*href=["']?([^"']+)["'][^\>]*(\/\>|\>\s*\<\/link\>)/gi
      elements in (html) matching (link reg) as 'style'
  
  scripts in (html) =
      script reg = r/<script\s[^>]*src=["']?([^"']+)["'][^\>]*(\/\>|\>\s*\<\/script\>)/gi
      elements in (html) matching (script reg) as 'script'
  
  elements in (html) matching (reg) as (tag) =
      elements = []
      while (m = reg.exec (html))
          elements.push { tag = tag, index = m.index, length = m.0.length, href = m.1 }
      
      elements
  

githubLanguage PogoScript
 fileExtensions pogo
 trendingProjectsCount 0
 type programming
 aceMode text
 tmScope source.pogoscript
 repos 51
