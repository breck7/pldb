Treelang
========

Treelang is a programming language created in 1988.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221988%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#1941 on PLDB
36 Years Old

Treelang is a "toy" programming language distributed with the GNU Compiler Collection (GCC) to demonstrate the features of its code-generation backend. It was developed by Tim Josling, based on a language called Toy created by Richard Kenner.  During the GCC 4.3 release cycle, a patch was committed to remove the language, because of high maintenance costs outweighing its benefits and also because it was no longer considered a good front-end example by GCC developers.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Treelang

- Treelang Wikipedia page
 https://en.wikipedia.org/wiki/Treelang
- See also: (1 related languages)C
- Read more about Treelang on the web: 1.
 https://web.archive.org/web/20011108165657/http://www.geocities.com/timjosling/treelang.diff.txt

// function prototypes
     // function &#39;add&#39; taking two ints and returning an int
     external_definition int add(int arg1, int arg2);
     external_definition int subtract(int arg3, int arg4);
     external_definition int first_nonzero(int arg5, int arg6);
     external_definition int double_plus_one(int arg7);
     external_definition int main();

     // function definition
     add
     {
       // return the sum of arg1 and arg2
       return arg1 + arg2;
     }
  
     subtract
     {
       return arg3 - arg4;
     }

     double_plus_one
     {
       // aaa is a variable, of type integer and allocated at the start of the function
       automatic int aaa;
       // set aaa to the value returned from add, when passed arg7 and arg7 as the two parameters
       aaa=add(arg7, arg7);
       aaa=add(aaa, aaa);
       aaa=subtract(subtract(aaa, arg7), arg7) + 1;
       return aaa;
     }
     
     first_nonzero
     {
       // C-like if statement
       if (arg5)
         {
           return arg5;
         }
       else
         {
         }
       return arg6;
     }

     // Like C, &#39;gtreelang&#39; needs the main to be defined to create an executable.
     main
     {
          return double_plus_one(5);
     }

Language features
======================================================

row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  // A comment
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token //
 Example
  // A comment
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
