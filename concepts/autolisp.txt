AutoLISP
========

AutoLISP is a programming language created in 1986 by David Betz.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221986%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=David%20Betz

#696 on PLDB
38 Years Old

AutoLISP is a dialect of the LISP programming language built specifically for use with the full version of AutoCAD and its derivatives, which include AutoCAD Map 3D, AutoCAD Architecture and AutoCAD Mechanical. Neither the application programming interface nor the interpreter to execute AutoLISP code are included in the AutoCAD LT product line.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/AutoLISP

- AutoLISP Wikipedia page
 https://en.wikipedia.org/wiki/AutoLISP
- AutoLISP first developed in Autodesk and Basis Software
- Explore AutoLISP snippets on Rosetta Code
- AutoLISP on HOPL
 https://hopl.info/showlanguage.prx?exp=1842
- AutoLISP appears in the TIOBE Index
- See also: (18 related languages)AUTOCAD, VBA, Lisp, Interlisp, Lisp Machine Lisp, Scheme, Common Lisp, T, Emacs Lisp, ISLISP, OpenLisp, PicoLisp, EuLisp, NewLisp, Racket, Clojure, Arc, LFE

(alert &quot;Hello World&quot;)

1 (defun c:pointlabel ( / pnt )
 2     (if (setq pnt (getpoint &quot;\nSpecify point: &quot;))
 3         (progn
 4             (entmake
 5                 (list
 6                    &#39;(0 . &quot;POINT&quot;)
 7                     (cons 10 (trans pnt 1 0))
 8                 )
 9             )
10             (entmake
11                 (list
12                    &#39;(0 . &quot;TEXT&quot;)
13                     (cons 10 (trans (cons (+ (car pnt) 0.6) (cdr pnt)) 1 0))
14                     (cons 40 (getvar &#39;textsize))
15                     (cons  1 (strcat &quot;X:&quot; (rtos (car pnt)) &quot; Y:&quot; (rtos (cadr pnt))))
16                 )
17             )
18         )
19     )
20     (princ)
21 )

Language features
======================================================

row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Token "
 Example
  "Hello world"
row
 Feature Lispy
 FeatureLink ../features/isLisp.html
 Supported ✓
 Token 
 Example
