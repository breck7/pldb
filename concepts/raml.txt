RAML
====

RAML, aka RESTful API Modeling Language, is an open source yaml format created in 2013.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222013%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#168 on PLDB
11 Years Old
4k Repos

git clone https://github.com/raml-org/raml-spec

RAML Specification

- RAML website
 http://raml.org/spec.html
- RAML is developed on GitHub and has 3,780 stars
- RAML docs
 https://raml.org/developers/document-your-api
- There are at least 4,190 RAML repos on GitHub
- RAML first developed in https://github.com/raml-org
- RAML is written in Markdown, JSON, YAML
- The  Google BigQuery Public Dataset GitHub snapshot shows 416 users using RAML in 472 repos on GitHub
- RAML LSP implementation
- GitHub supports syntax highlighting for RAML
- 1 languages in PLDB linking to RAML: cloc

#%RAML 0.8

title: World Music API
baseUri: http://example.api.com/{version}
version: v1
traits:
  - paged:
      queryParameters:
        pages:
          description: The number of pages to return
          type: number
  - secured: !include http://raml-example.com/secured.yml
/songs:
  is: [ paged, secured ]
  get:
    queryParameters:
      genre:
        description: filter the songs by genre
  post:
  /{songId}:
    get:
      responses:
        200:
          body:
            application/json:
              schema: |
                { &quot;$schema&quot;: &quot;http://json-schema.org/schema&quot;,
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;description&quot;: &quot;A canonical song&quot;,
                  &quot;properties&quot;: {
                    &quot;title&quot;:  { &quot;type&quot;: &quot;string&quot; },
                    &quot;artist&quot;: { &quot;type&quot;: &quot;string&quot; }
                  },
                  &quot;required&quot;: [ &quot;title&quot;, &quot;artist&quot; ]
                }
            application/xml:
    delete:
      description: |
        This method will *delete* an **individual song**
