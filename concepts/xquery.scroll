../code/conceptPage.scroll

id xquery
name XQuery
appeared 2007
tags pl
website http://www.w3.org/XML/Query/
blog https://www.w3.org/blog/tags/xquery/
maintainerOrganization W3C
lab W3C
fileExtensions xq xql xqm xqy xquery

clocExtensions xq xql xqm xquery xqy
fileType text
docs https://www.w3.org/TR/xquery-31/
codeMirror xquery
rosettaCode http://www.rosettacode.org/wiki/Category:XQuery

helloWorldCollection XQuery
 (: Hello World with XQuery :)
 let $i := "Hello World"
 return $i
 
pygmentsHighlighter XQuery
 filename webmisc.py
 fileExtensions xqy xquery xq xql xqm
leachim6 XQuery
 filepath x/XQuery.xq
 fileExtensions xq
 example
  let $hello := "Hello World"
  return $hello
  

stringToken "

hasComments true
 (: Hello World with XQuery :)
hasLineComments false
hasSemanticIndentation false
hasCaseInsensitiveIdentifiers false
hasStrings true
 "Hello world"
hasFloats true
hasIntegers true

wikipedia https://en.wikipedia.org/wiki/XQuery
 example
  <html><body>
   {
     for $act in doc("hamlet.xml")//ACT
     let $speakers := distinct-values($act//SPEAKER)
     return
       <div>
         <h1>{ string($act/TITLE) }</h1>
         <ul>
         {
           for $speaker in $speakers
           return <li>{ $speaker }</li>
         }
         </ul>
       </div>
   }
   </body></html>
 related xpath sql lisp prolog xml java csharp jsoniq json isbn
 summary XQuery (XML Query) is a query and functional programming language that queries and transforms collections of structured and unstructured data, usually in the form of XML, text and with vendor-specific extensions for other data formats (JSON, binary, etc.). The language is developed by the XML Query working group of the W3C. The work is closely coordinated with the development of XSLT by the XSL Working Group; the two groups share responsibility for XPath, which is a subset of XQuery. XQuery 1.0 became a W3C Recommendation on January 23, 2007. XQuery 3.0 became a W3C Recommendation on April 8, 2014. XQuery 3.1 became a W3C Recommendation on March 21, 2017.  "The mission of the XML Query project is to provide flexible query facilities to extract data from real and virtual documents on the World Wide Web, therefore finally providing the needed interaction between the Web world and the database world. Ultimately, collections of XML files will be accessed like databases".
 pageId 23742879
 dailyPageViews 216
 created 2002
 backlinksCount 308
 revisionCount 433
 appeared 2007
 fileExtensions xq xql xqm xqy xquery

tiobe XQuery

githubBigQuery XQuery
 repos 1175
 users 983

linguistGrammarRepo https://github.com/wcandillon/language-jsoniq
 firstCommit 2015
 lastCommit 2016
 committerCount 2
 commitCount 108
 sampleCount 1
 example
  (: -------------------------------------------------------------------------------------
  
      xproc.xqm - core xqm contains entry points, primary eval-step function and
      control functions.
  
   ---------------------------------------------------------------------------------------- :)
  xquery version "3.0"  encoding "UTF-8";
  
  module namespace xproc = "http://xproc.net/xproc";
  
   (: declare namespaces :)
   declare namespace p="http://www.w3.org/ns/xproc";
   declare namespace c="http://www.w3.org/ns/xproc-step";
   declare namespace err="http://www.w3.org/ns/xproc-error";
  
   (: module imports :)
  (:  import module namespace util = "http://xproc.net/xproc/util" at "util1.xqm"; :)
   import module namespace const = "http://xproc.net/xproc/const" at "const.xqm";
   import module namespace parse = "http://xproc.net/xproc/parse" at "parse.xqm";
   import module namespace u = "http://xproc.net/xproc/util" at "util.xqm";
  
   (: declare options :)
   declare boundary-space preserve;
   declare option saxon:output "indent=yes";
  
   (: declare functions :)
   declare variable $xproc:run-step       := xproc:run#6;
   declare variable $xproc:parse-and-eval := ();
   declare variable $xproc:declare-step   := ();
   declare variable $xproc:choose         := ();
   declare variable $xproc:try            := ();
   declare variable $xproc:catch          := ();
   declare variable $xproc:group          := ();
   declare variable $xproc:for-each       := ();
   declare variable $xproc:viewport       := ();
   declare variable $xproc:library        := ();
   declare variable $xproc:pipeline       := ();
   declare variable $xproc:variable       := ();
  
  
   (: list all declared namespaces :)
   (: -------------------------------------------------------------------------- :)
   declare function xproc:enum-namespaces($pipeline){
   (: -------------------------------------------------------------------------- :)
      <namespace name="{$pipeline/@name}">{u:enum-ns(<dummy>{$pipeline}</dummy>)}</namespace>
   };
  
   (: entry point :)
   (: -------------------------------------------------------------------------- :)
   declare function xproc:run($pipeline,$stdin,$dflag,$tflag,$bindings,$options){
   (: -------------------------------------------------------------------------- :)
  
   (: STEP I: preprocess :)
   let $validate   := ()
   let $namespaces := xproc:enum-namespaces($pipeline)
   let $parse      := parse:explicit-bindings( parse:AST(parse:explicit-name(parse:explicit-type($pipeline))))
   let $ast        := element p:declare-step {$parse/@*,
         parse:pipeline-step-sort( $parse/*, () )
       }
  
   (: STEP II: eval AST :)
   let $eval_result := ()
  
   (: STEP III: serialize and return results :)
   let $serialized_result := $pipeline
  
   return
     $serialized_result
   };
  
  

isbndb 2
 year|publisher|title|authors|isbn13
 2009|McGraw-Hill Education|XML: A Beginner's Guide: Go Beyond the Basics with Ajax, XHTML, XPath 2.0, XSLT 2.0 and XQuery|Holzner, Steven|9780071606264
 2009|McGraw-Hill Education|XML: A Beginner's Guide: Go Beyond the Basics with Ajax, XHTML, XPath 2.0, XSLT 2.0 and XQuery|Holzner, Steven|9780071606271

githubLanguage XQuery
 fileExtensions xquery xq xql xqm xqy
 trendingProjectsCount 0
 type programming
 aceMode xquery
 codemirrorMode xquery
 codemirrorMimeType application/xquery
 tmScope source.xq
 repos 1753

indeedJobs XQuery developer
 2022 125

semanticScholar 15
 year|title|doi|citations|influentialCitations|authors|paperId
 2009|XQuery Reloaded|10.14778/1687553.1687560|36|1|Roger Bamford and Vinayak R. Borkar and M. Brantner and Peter M. Fischer and D. Florescu and David A. Graf and D. Kossmann and Tim Kraska and D. Muresan and Sorin Nasoi and Markos Zacharioudaki|398e21c1a7f699a4f0298ce49c4bd0c86480946a
 2002|XML programming with SQL/XML and XQuery|10.1147/sj.414.0642|30|2|J. Funderburk and S. Malaika and B. Reinwald|dccdd7c09b1b48be5ad389fb86152851bf918636
 2003|Design and implementation of a graphical interface to XQuery|10.1145/952532.952759|29|3|Enrico Augurusa and Daniele Braga and A. Campi and S. Ceri|b5bc91313d27f1451ed72ae28e3f3e11fa6744ad
 2007|Highly distributed XQuery with DXQ|10.1145/1247480.1247641|28|2|M. Fernández and T. Jim and Kristi Morton and Nicola Onose and Jérôme Siméon|dc4dd7d588dac1952e8a796b01d88b5ef79b8104
 2005|Compiling XSLT 2.0 into XQuery 1.0|10.1145/1060745.1060844|18|2|Achille Fokoue and K. Rose and Jérôme Siméon and L. Villard|fa684f0d013f69deb6e9a0dd9f430363f69f46b5
 2009|XQuery in the browser|10.1145/1526709.1526845|17|0|G. Fourny and Markus Pilman and D. Florescu and D. Kossmann and Tim Kraska and D. McBeath|139f38fd02992a746d0710162771e338d7c3ce4b
 2009|An Encoding of XQuery in Prolog|10.1007/978-3-642-03555-5_12|17|1|J. Almendros-Jiménez|5195d815f3d783c7798e00cbabbb1e83dc00ff6d
 2009|Developing an Enterprise Web Application in XQuery|10.1007/978-3-642-02818-2_39|15|0|Martin Kaufmann and D. Kossmann|6ddcffdaa35a836d21a73acf6b254e6ebc2b94e7
 2009|Integrating XQuery and Logic Programming|10.1007/978-3-642-00675-3_8|14|0|J. Almendros-Jiménez and A. Becerra-Terón and F. J. Enciso-Baños|79d47519e543be6e80904a89bdf3570b0d4629ce
 2010|Eliminating dead-code from XQuery programs|10.1145/1810295.1810363|12|0|P. Genevès and Nabil Layaïda|d27af0ee184aac902c559b35f32e586643706b80
 2008|XQuery in the browser|10.1145/1376616.1376769|7|1|G. Fourny and D. Kossmann and Tim Kraska and Markus Pilman and D. Florescu|ba392dbe46c976df4b7ac39426cffafd2de607c5
 2015|Function inlining in XQuery 3.0 optimization|10.1145/2815072.2815079|5|0|Leonard Wörteler and Michael Grossniklaus and C. Grün and M. Scholl|6824125891a14a5ea4fcc8427a8a3ee6b358089b
 2014|Unleashing XQuery for Data-Independent Programming|10.1007/s13222-014-0160-3|4|0|Sebastian Bächle and Caetano Sauer|f6f4cf733b4a9ba7859bbd4d3a58757dd1bd4e6e
 2011|Programming the KDD Process using XQuery|10.5220/0003626501310139|3|0|A. Romei and F. Turini|f1eadf3f8cb7d644d4114bef4f1cb5c1f1a8e486
 2013|An expressive bidirectional transformation language for XQuery view update (Special issue : Advanced Programming Techniques for Construction of Robust, Generic and Evolutionary Programs)|10.2201/NIIPI.2013.10.6|1|0|Dongxi Liu and Zhenjiang Hu and M. Takeichi|b5aec929e9b515d99a039ead74029f20bb7c6b0c
