snakemake
=========

snakemake is a programming language created in 2012.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222012%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#2971 on PLDB
12 Years Old

- snakemake first developed in University of Duisburg-Essen
- Read more about snakemake on the web: 1.
 https://academic.oup.com/bioinformatics/article/28/19/2520/290322

SAMPLES = &quot;100 101 102 103&quot;.split()

REF = &quot;hg19.fa&quot;

rule all:

 input: &quot;{sample}.coverage.pdf&quot;.format(sample = sample)

    for sample in SAMPLES

rule fastq_to_sai:

  input: ref = REF, reads = &quot;{sample}.{group}.fastq&quot;

  output: temp(&quot;{sample}.{group}.sai&quot;)

  shell: &quot;bwa aln {input.ref} {input.reads} &gt; {output}&quot;

rule sai_to_bam:

  input: REF, &quot;{sample}.1.sai&quot;, &quot;{sample}.2.sai&quot;,

     &quot;{sample}.1.fastq&quot;, &quot;{sample}.2.fastq&quot;

  output: protected(&quot;{sample}.bam&quot;)

  shell: &quot;bwa sampe {input} | samtools view -Sbh - &gt; {output}&quot;

rule remove_duplicates:

  input: &quot;{sample}.bam&quot;

  output: &quot;{sample}.nodup.bam&quot;

  shell: &quot;samtools rmdup {input} {output}&quot;

rule plot_coverage_histogram:

  input: &quot;{sample}.nodup.bam&quot;

  output: hist = &quot;{sample}.coverage.pdf&quot;

  run:

    from matplotlib.pyplot import hist, savefig

    hist(list(map(int,

      shell(&quot;samtools mpileup {input} | cut -f4&quot;,

      iterable = True))))

    savefig(output.hist)
