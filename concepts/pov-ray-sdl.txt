POV-Ray SDL
===========

POV-Ray SDL is a programming language created in 1991 by Chris Cason.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221991%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Chris%20Cason

#261 on PLDB
33 Years Old
3 Repos

git clone https://github.com/POV-Ray/povray

The Persistence of Vision Raytracer: http://www.povray.org/

- POV-Ray SDL is developed on GitHub and has 1,149 stars
- There are at least 3 POV-Ray SDL repos on GitHub
- POV-Ray SDL first developed in Persistence of Vision Raytracer Pty. Ltd
- POV-Ray SDL is written in C++, C, HTML, XML, Ini, Bourne shell, Make, M4, Markdown, Pascal, YAML, Ada, Assembly language, CMake, C#, CSS, Perl, Smalltalk, SAS, awk, Python, WebAssembly, PowerShell, JavaScript, Diff, PHP
- The  Google BigQuery Public Dataset GitHub snapshot shows 482 users using POV-Ray SDL in 493 repos on GitHub
- Pygments supports syntax highlighting for POV-Ray SDL
- GitHub supports syntax highlighting for POV-Ray SDL
- Read more about POV-Ray SDL on the web: 1.
 http://www.povray.org/documentation/view/3.6.0/224/

// This work is licensed under the Creative Commons Attribution-ShareAlike 3.0 Unported License.
// To view a copy of this license, visit http://creativecommons.org/licenses/by-sa/3.0/ or send a
// letter to Creative Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.

// Persistence Of Vision Ray Tracer Include File
// File: water.inc
// Desc: water for &#39;balcony.pov&#39; demonstration scene
// Date: July/August 2001
// Auth: Christoph Hormann

// Updated: 09Aug2008 (jh) for v3.7 distribution

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#if (version &lt; 3.7)
  #version 3.5;
#end

#include &quot;functions.inc&quot;

#declare RMF=function{ f_ridged_mf(x, y, z, 0.07, 2.2,  7, 0.6, 0.9, 1)}

#declare M_Watx4 =
material {
  texture {
    pigment {
      color rgbt &lt;0.2, 0.22, 0.21, 0.94&gt;
    }
    finish {
      diffuse 0.0
      ambient -0.2

      reflection {
        0.0, 0.95
        fresnel on
      }

      conserve_energy

      specular 0.4
      roughness 0.007
    }
    normal{
      function { RMF(x, y, z) } 0.8
      scale 0.3
    }
  }
  interior {
    ior 1.31
    fade_distance 5
    fade_power 1001.0
    fade_color &lt;0.02, 0.20, 0.06&gt;
  }
}

plane {
  z, -1
  material {
    M_Watx4
  }
  hollow on
}

plane {
  z, -12.0

  texture {
    pigment { color rgb 0 }
    finish { ambient 0.0 diffuse 0.0 }
  }
  hollow on
}

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

Language features
======================================================

row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Token 
 Example
  // [0-9]+
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Token 
 Example
  // [0-9]*\.[0-9]+
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Token /* */
 Example
  /* A comment
  */
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  // A comment
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Token //
 Example
  // A comment
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
