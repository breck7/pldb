import ../code/conceptPage.scroll

id portable-standard-lisp
name Portable Standard Lisp
appeared 1980
tags pl

country United States
originCommunity University of Utah

wikipedia https://en.wikipedia.org/wiki/Portable_Standard_Lisp
 related c common-lisp
 summary Portable Standard Lisp (PSL) is a tail-recursive dynamically bound dialect of Lisp inspired by its predecessor, Standard Lisp and the Portable Lisp Compiler. It was developed by researchers at the University of Utah in 1980, which released PSL 3.1; development was handed over to developers at Hewlett-Packard in 1982 who released PSL 3.3 and up. Portable Standard Lisp was available as a kit containing a screen editor, a compiler, and an interpreter for the 68000 processor architecture, DEC-20s, CRAY-1s, and the VAX architecture (among many others). Today, PSL is mainly developed by and available from Konrad-Zuse-Zentrum f√ºr Informationstechnik Berlin.  Its main modern use is as underlying language for implementations of Reduce.Like most older lisps, PSL in the first step compiles Lisp to LAP code, which is a platform independent language in its own.  However, where older lisps mostly compiled LAP directly to assembler or some architecture dependent intermediate,  PSL compiles the LAP to C code, which would run in a virtual machine language; so programs written in it in principle are as portable as C itself, which is very portable. The compiler itself was written in PSL or a more primitive dialect dubbed "System Lisp"/"SYSLISP" as "an experiment in writing a production-quality Lisp in Lisp itself as much as possible, with only minor amounts of code written by hand in assembly language or other systems languages", so the whole ensemble could bootstrap itself, and improvements to the compiler improved the compiler itself as well. Some later releases had a compatibility package for Common Lisp, but this is not sustained in the modern versions.
 created 2006
 backlinksCount 51
 pageId 4243267
 revisionCount 29
 dailyPageViews 9
 appeared 1980
