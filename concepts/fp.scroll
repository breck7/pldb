import ../code/conceptPage.scroll

id fp
name FP
appeared 1977
creators John Backus
tags pl
standsFor Functional Programming

fileType text
wordRank 8320
rosettaCode http://www.rosettacode.org/wiki/Category:FP
country United States
originCommunity IBM

wikipedia https://en.wikipedia.org/wiki/FP_(programming_language)
 example
  insert-left  \f       where   \f:〈x〉             =  x
                        and     \f:〈x1,x2,...,xn〉  =  f:〈\f:〈x1,...,xn-1〉,xn〉
                        and     \f:〈 〉             =  unit f
 related apl fl haskell j
 summary FP (short for function programming) is a programming language created by John Backus to support the function-level programming paradigm. This allows eliminating named variables. The language was introduced in Backus's 1977 Turing Award lecture, "Can Programming Be Liberated from the von Neumann Style?", subtitled "a functional style and its algebra of programs." The paper sparked interest in functional programming research, eventually leading to modern functional languages, and not the function-level paradigm Backus had hoped. FP itself never found much use outside of academia. In the 1980s Backus created a successor language, FL, which remained a research project.
 pageId 899253
 created 2004
 backlinksCount 32
 revisionCount 94
 dailyPageViews 35
 appeared 1977

hopl https://hopl.info/showlanguage.prx?exp=759

isbndb 2
 year|publisher|title|authors|isbn13
 2017|CreateSpace Independent Publishing Platform|Functional-Light JavaScript: Balanced, Pragmatic FP in JavaScript|Simpson, Kyle|9781981672349
 2020||Practical Fp In Scala|Gabriel Volpe|9781714556793
