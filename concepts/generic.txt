GCC GENERIC
===========

GCC GENERIC is an intermediate representation language created in 2003.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222003%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2003

#3388 on PLDB
21 Years Old

The purpose of GENERIC is simply to provide a language-independent way of representing an entire function in trees. To this end, it was necessary to add a few new tree codes to the backend, but most everything was already there. If you can say it with the codes in gcc/tree.def, itâ€™s GENERIC.

- Tags: intermediate representation language
- Early development of GCC GENERIC happened in Red Hat, Inc
- Read more about GCC GENERIC on the web: 1.
 ftp://gcc.gnu.org/pub/gcc/summit/2003/GENERIC%20and%20GIMPLE.pdf 1.

View source
