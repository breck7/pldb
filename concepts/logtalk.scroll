import ../code/conceptPage.scroll

id logtalk
name Logtalk
appeared 1998
creators Paulo Moura
tags pl
website http://logtalk.org

clocExtensions lgt logtalk
fileType text
rosettaCode http://www.rosettacode.org/wiki/Category:Logtalk
country Portugal
originCommunity https://github.com/LogtalkDotOrg

pygmentsHighlighter Logtalk
 filename prolog.py
 fileExtensions lgt logtalk
twitter https://twitter.com/logtalkdotorg
leachim6 Logtalk
 filepath l/Logtalk.lgt
 fileExtensions lgt
 example
  write('Hello World')
  

printToken write
stringToken '

hasComments true
hasMultipleInheritance true
hasPrintDebugging true
hasSemanticIndentation false
hasStrings true
 'Hello world'
hasOctals true
hasHexadecimals true
hasBinaryNumbers true

wikipedia https://en.wikipedia.org/wiki/Logtalk_(programming_language)
 example
  ?- my_first_object::p2.
  ERROR: error(permission_error(access, private_predicate, p2), my_first_object::p2, user)
 related prolog smalltalk objective-c swi-prolog mercury oz visual-prolog
 summary Logtalk is an object-oriented logic programming language that extends and leverages the Prolog language with a feature set suitable for programming in the large. It provides support for encapsulation and data hiding, separation of concerns and enhanced code reuse. Logtalk uses standard Prolog syntax with the addition of a few operators and directives. The Logtalk language implementation is distributed under an open source license and can run using a Prolog implementation (compliant with official and de facto standards) as the back-end compiler.
 pageId 7792164
 created 2012
 backlinksCount 42
 revisionCount 1
 dailyPageViews 2
 appeared 1998

hopl https://hopl.info/showlanguage.prx?exp=3555

domainName logtalk.org
 registered 2002

githubBigQuery Logtalk
 repos 52
 users 50

linguistGrammarRepo https://github.com/textmate/logtalk.tmbundle
 firstCommit 2005
 lastCommit 2017
 committerCount 5
 commitCount 90
 sampleCount 1
 example
  % this is a Logtalk source file
  
  :- object(hello_world).
  
  	% the initialization/1 directive argument is automatically executed
  	% when the object is loaded into memory:
  	:- initialization((nl, write('********** Hello World! **********'), nl)).
  
  :- end_object.
  

githubLanguage Logtalk
 fileExtensions lgt logtalk
 trendingProjectsCount 0
 type programming
 aceMode text
 tmScope source.logtalk
 repos 65

semanticScholar 4
 year|title|doi|citations|influentialCitations|authors|paperId
 2008|High-Level Multi-threading Programming in Logtalk|10.1007/978-3-540-77442-6_18|13|1|Paulo Moura and P. Crocker and Paulo Nunes|7926b23b6f896193567781ba0ef077b81eae1d1c
 2009|Programming Patterns for Logtalk Parametric Objects|10.1007/978-3-642-20589-7_4|12|1|Paulo Moura|12f4071900572a48e9f75e3d953629346d0c265a
 2009|From Plain Prolog to Logtalk Objects: Effective Code Encapsulation and Reuse|10.1007/978-3-642-02846-5_3|7|1|Paulo Moura|ee9e13c53d2ed91fc61830ed000a44229a705928
 2009|High Level Thread-Based Competitive Or-Parallelism in Logtalk|10.1007/978-3-540-92995-6_8|5|0|Paulo Moura and Ricardo Rocha and S. Madeira|d2d6b9c1f4996a55752753ee221614a86f6a15ef
