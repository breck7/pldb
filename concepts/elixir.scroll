../code/conceptPage.scroll

id elixir
name Elixir
appeared 2011
creators José Valim
tags pl
website https://elixir-lang.org
blog https://elixir-lang.org/blog/
download https://elixir-lang.org/install.html
latestVersion 1.16
lab The Elixir Team
fileExtensions ex exs
writtenIn elixir markdown erlang yaml bourne-shell eex make powershell

isOpenSource true
exercism https://exercism.org/tracks/elixir
tryItOnline https://tio.run/#elixir
visualParadigm false
clocExtensions ex exs
fileType text
docs https://elixir-lang.org/docs.html https://devdocs.io/elixir~1.5/
monaco elixir
rosettaCode http://www.rosettacode.org/wiki/Category:Elixir
quineRelay Elixir
packageRepository https://hex.pm/
ubuntuPackage elixir
repoStats
 firstCommit 2011
 commits 33749
 committers 1567
 files 735
 newestCommit 2024
country United States
projectEuler Elixir
 memberCount
  2019 129
  2022 173

helloWorldCollection Elixir
 # Hello world in Elixir
 
 defmodule HelloWorld do
   IO.puts "Hello, World!"
 end
pygmentsHighlighter Elixir
 filename erlang.py
 fileExtensions ex eex exs
rijuRepl https://riju.codes/elixir
 example
  IO.puts("Hello, world!")
  
subreddit https://reddit.com/r/elixir
 memberCount
  2022 23468
twitter https://twitter.com/elixirlang
leachim6 Elixir
 filepath e/Elixir.exs
 fileExtensions exs
 example
  #!/usr/bin/env elixir
  IO.puts "Hello World"
  
gource https://www.youtube.com/watch?v=qhkwG5OKyHk
languageServerProtocolProject https://github.com/elixir-lsp/elixir-ls
 writtenIn elixir

meetup https://www.meetup.com/topics/elixir
 memberCount 44835
 groupCount 211
keywords after and catch do else end false fn in nil not or rescue true when
githubRepo https://github.com/elixir-lang/elixir
 stars 24093
 forks 3329
 subscribers 673
 created 2011
 updated 2024
 firstCommit 2011
 description Elixir is a dynamic, functional language for building scalable and maintainable applications
 issues 23

lineCommentToken #
printToken IO.puts
stringToken "
booleanTokens true false

canDoShebang true
 #!/usr/bin/env elixir
canWriteToDisk true
 File.write!("helloworld.txt", "Hello, world!\n")
hasComments true
 # A comment
hasMultiLineComments false
hasImports true
 # Alias the module so it can be called as Bar instead of Foo.Bar
 alias Foo.Bar, as: Bar
 
 # Require the module in order to use its macros
 require Foo
 
 # Import functions from Foo so they can be called without the `Foo.` prefix
 import Foo
 
 # Invokes the custom code defined in Foo as an extension point
 use Foo
hasAssignment true
 name = "John"
hasSemanticIndentation false
hasConditionals true
 if true do
   IO.puts("Hello world")
 end
hasDefaultParameters true
 def multiply(a, b \\ 1) do
   a * b
 end
hasLineComments true
 # A comment
hasMessagePassing true
 send(pid, :ping)
hasPrintDebugging true
hasRegularExpressionsSyntaxSugar true
 ~r/integer: \d+/
hasPointers false
hasUnitsOfMeasure false
hasLists true
 my_list = [1, 2, 3, 4, 5]
hasStrings true
 "Hello world"
hasOctals true
 # 0o[0-7]+
hasHexadecimals true
 # 0x[\da-fA-F]+
hasFloats true
 # \d(_?\d)*\.\d(_?\d)*([eE][-+]?\d(_?\d)*)?
hasIntegers true
 # \d(_?\d)*
hasBinaryNumbers true
 # 0b[01]+
hasBooleans true
hasMaps true
 %{key: "value"}
hasSingleDispatch true
hasMultipleDispatch false
hasRangeOperators true
 1..3
hasPolymorphism true
 https://hexdocs.pm/elixir/Protocol.html
hasMacros true
 # https://hexdocs.pm/elixir/Macro.html
 defmodule Example do
   defmacro macro_inspect(value) do
     IO.inspect(value)
     value
   end
   def fun_inspect(value) do
     IO.inspect(value)
     value
   end
 end
hasStreams true
 https://hexdocs.pm/elixir/Stream.html
hasPipes true
 "Elixir" |> String.graphemes() |> Enum.frequencies()
hasAnonymousFunctions true
 fn -> IO.puts("hello world") end
hasScientificNotation true
 1.23e45
hasInfixNotation true
 seven = 3 + 4
hasMultilineStrings true
 template = """
 This is the first line.
 This is the second line.
 This is the third line.
 """
hasGarbageCollection true
hasRunTimeGuards true
 def abs(number) when number > 0, do: number
 def abs(number), do: -number
hasPatternMatching true
 def fib(0), do: 1
 def fib(1), do: 1
 def fib(n) when n >= 2, do: fib(n-1) + fib(n-2)
hasExceptions true
 raise "oops, something went wrong"
isCaseSensitive true
hasCaseInsensitiveIdentifiers false
hasUnicodeIdentifiers true
 δ = 0.00001
hasStandardLibrary true
 IO.puts "Hello, World!"

jupyterKernel https://github.com/pprzetacznik/IElixir
wikipedia https://en.wikipedia.org/wiki/Elixir_(programming_language)
 example
  task = Task.async fn -> perform_complex_action() end
  other_time_consuming_action()
  Task.await task
 related erlang ruby clojure lfe unicode utf-8
 summary Elixir is a functional, concurrent, general-purpose programming language that runs on the Erlang virtual machine (BEAM). Elixir builds on top of Erlang and shares the same abstractions for building distributed, fault-tolerant applications. Elixir also provides a productive tooling and an extensible design. The latter is supported by compile-time metaprogramming with macros and polymorphism via protocols. Elixir is used by companies such as E-MetroTel, Pinterest and Moz. Elixir is also used for web development, by companies such as Bleacher Report, Discord, and Inverse, and for building embedded systems. The community organizes yearly events in United States, Europe and Japan as well as minor local events and conferences.
 pageId 38202780
 dailyPageViews 413
 created 2013
 backlinksCount 283
 revisionCount 197
 appeared 2011
 fileExtensions ex exs

tiobe Elixir

domainName elixir-lang.org
 awisRank
  2022 141656
  2017 99108

githubBigQuery Elixir
 repos 6816
 users 4594

linguistGrammarRepo https://github.com/elixir-editors/elixir-tmbundle
 firstCommit 2011
 lastCommit 2022
 committerCount 55
 commitCount 294
 sampleCount 1
 example
  %{"cowboy": {:hex, :cowboy, "1.0.0"},
    "cowlib": {:hex, :cowlib, "1.0.1"},
    "hackney": {:hex, :hackney, "0.14.3"},
    "hound": {:hex, :hound, "0.6.0"},
    "httpoison": {:hex, :httpoison, "0.5.0"},
    "idna": {:hex, :idna, "1.0.1"},
    "phoenix": {:hex, :phoenix, "0.10.0"},
    "plug": {:hex, :plug, "0.11.1"},
    "poison": {:hex, :poison, "1.3.1"},
    "ranch": {:hex, :ranch, "1.0.0"}}
  

isbndb 30
 year|publisher|title|authors|isbn13
 2016|Packt Publishing|Learning Elixir|Ballou, Kenny|9781785881749
 2016|Pragmatic Bookshelf|"Programming Elixir 1.2: Functional |> Concurrent |> Pragmatic |> Fun"|Thomas, Dave|9781680501667
 2016|Pragmatic Bookshelf|"Programming Elixir 1.3: Functional |> Concurrent |> Pragmatic |> Fun"|Thomas, Dave|9781680502008
 2018|Pragmatic Bookshelf|"Programming Elixir ≥ 1.6: Functional |> Concurrent |> Pragmatic |> Fun"|Thomas, Dave|9781680502992
 2016|Manning Publications|The Little Elixir & OTP Guidebook|Tan Wei Hao, Benjamin|9781633430112
 2015|Packt Publishing|Elixir Cookbook|Pereira, Paulo A|9781784397517
 2015|Manning|Elixir in Action|Juric, Saša|9781617292019
 2022|Pragmatic Bookshelf|Programming Phoenix LiveView: Interactive Elixir Web Programming Without Writing Any JavaScript|Tate, Bruce A. and DeBenedetto, Sophie|9781680508215
 2016|Packt Publishing|Learning Elixir|Ballou, Kenny|9781785883477
 2016|Apress|Erlang and Elixir for Imperative Programmers|Loder, Wolfgang|9781484223949
 2018|Packt Publishing|Phoenix Web Development: Create rich web applications using functional programming techniques with Phoenix and Elixir|Voloz, Mike and Richey, Brandon|9781787284777
 20180314|Pragmatic Bookshelf|Adopting Elixir|Ben Marx; Jose Valim; Bruce Tate|9781680505849
 20161222|O'Reilly Media, Inc.|Introducing Elixir|Simon St. Laurent; J. David Eisenberg|9781491956854
 20151216|O'Reilly Media, Inc.|Introducing Elixir|Laurent, Simon St.; Eisenberg, J. David|9781449369996
 20140910|O'Reilly Media, Inc.|Introducing Elixir|Simon St. Laurent|9781449369972
 30-07-2018|Packt Publishing|Mastering Elixir|Andre Albuquerque; Daniel Caixinha|9781788472241
 20190416|Pragmatic Bookshelf|Programming Ecto: Build Database Apps in Elixir for Scalability and Performance|Wilson, Darin and Meadows-Jonsson, Eric|9781680502824
 20220622|Pragmatic Bookshelf|Programmer Passport: Elixir|Bruce Tate|9781680509625
 20191202|Pragmatic Bookshelf|Designing Elixir Systems With OTP|James Edward Gray II; Bruce A. Tate|9781680507379
 20210725|Pragmatic Bookshelf|Concurrent Data Processing in Elixir|Svilen Gospodinov|9781680508963
 20180327|Pragmatic Bookshelf|Craft GraphQL APIs in Elixir with Absinthe|Bruce Williams; Ben  Wilson|9781680505931
 20220106|Pragmatic Bookshelf|Build a Weather Station with Elixir and Nerves|Alexander Koutmos; Bruce Tate; Frank Hunleth|9781680509472
 20220802|Pragmatic Bookshelf|Build a Binary Clock with Elixir and Nerves|Frank Hunleth; Bruce Tate|9781680509236
 20190117|Pragmatic Bookshelf|Property-Based Testing with PropEr, Erlang, and Elixir|Fred Hebert|9781680506549
 20191202|Pragmatic Bookshelf|Designing Elixir Systems With OTP|James Edward Gray II; Bruce A. Tate|9781680507379
 20210120|Pragmatic Bookshelf|Genetic Algorithms in Elixir|Sean Moriarity|9781680507942
 20221025|Pragmatic Bookshelf|Exploring Graphs With Elixir|Tony Hammond|9781680508406
 20210330|Pragmatic Bookshelf|Testing Elixir|Andrea Leopardi; Jeffrey Matthias|9781680507829
 20150129|Pragmatic Bookshelf|Metaprogramming Elixir|Chris McCord|9781680500417
 20180201|Pragmatic Bookshelf|Learn Functional Programming with Elixir|Ulisses Almeida|9781680502459
 20180101|Pragmatic Bookshelf|Functional Web Development with Elixir, OTP, and Phoenix|Lance Halvorsen|9781680502435

githubLanguage Elixir
 fileExtensions ex exs
 trendingProjects
  author name avatar url language languageColor stars forks currentPeriodStars description
  phoenixframework phoenix_live_view https://github.com/phoenixframework.png https://github.com/phoenixframework/phoenix_live_view Elixir #6e4a7e 2197 180 90 "Rich, real-time user experiences with server-rendered HTML"
  elixir-lang elixir https://github.com/elixir-lang.png https://github.com/elixir-lang/elixir Elixir #6e4a7e 15832 2267 174 "Elixir is a dynamic, functional language designed for building scalable and maintainable applications"
  elixir-ecto ecto https://github.com/elixir-ecto.png https://github.com/elixir-ecto/ecto Elixir #6e4a7e 4322 1019 44 "A database wrapper and language integrated query for Elixir"
  phoenixframework phoenix https://github.com/phoenixframework.png https://github.com/phoenixframework/phoenix Elixir #6e4a7e 14194 1801 136 "Productive. Reliable. Fast."
  absinthe-graphql absinthe https://github.com/absinthe-graphql.png https://github.com/absinthe-graphql/absinthe Elixir #6e4a7e 2846 280 49 "The GraphQL toolkit for Elixir"
  derekkraan horde https://github.com/derekkraan.png https://github.com/derekkraan/horde Elixir #6e4a7e 569 44 32 "Horde is a distributed Supervisor and Registry backed by DeltaCrdt"
  adriankumpf teslamate https://github.com/adriankumpf.png https://github.com/adriankumpf/teslamate Elixir #6e4a7e 136 15 44 "A self-hosted data logger for your Tesla 🚘"
  poanetwork blockscout https://github.com/poanetwork.png https://github.com/poanetwork/blockscout Elixir #6e4a7e 639 229 30 "Blockchain explorer for Ethereum based network and a tool for inspecting and analyzing EVM based blockchains."
  chrismccord phoenix_live_view_example https://github.com/chrismccord.png https://github.com/chrismccord/phoenix_live_view_example Elixir #6e4a7e 273 91 10
 trendingProjectsCount 10
 type programming
 filenames mix.lock
 interpreters elixir
 aceMode elixir
 tmScope source.elixir
 repos 89242

indeedJobs elixir developer
 2017 214
stackOverflowSurvey
 2021
  users 1438
  medianSalary 80077
  fans 3374
  percentageUsing 0.02

semanticScholar 3
 year|title|doi|citations|influentialCitations|authors|paperId
 2016|Elixir programming language evaluation for IoT|10.1109/ISCE.2016.7797392|6|0|Geovane Fedrecheski and L. Costa and M. Zuffo|bb548cf88bde14637e67dce390ed5c4b1e339d11
 2020|A Gradual Type System for Elixir|10.1145/3427081.3427084|2|0|Mauricio Cassola and Agustín Talagorria and Alberto Pardo and Marcos Viera|2f7b1940b91bc5a13cc44e0dc6ff0fa26298de3d
 2017|An Elixir library for programming concurrent and distributed embedded systems|10.1145/3079368.3079383|1|0|Humberto Rodríguez-Avila and E. G. Boix and W. Meuter|8b499715223c14b95dcbac77fdf03c0bb285a833
