import ../code/conceptPage.scroll

id graph-it
name GraphIt
appeared 2017
tags pl
website http://graphit-lang.org/
latestVersion 0.1.2
description GraphIt is a new DSL for graph computations that generates fast implementations for algorithms with different performance characteristics running on graphs with different sizes and structures. GraphIt separates what is computed (algorithm) from how it is computed (schedule). Programmers specify the algorithm using an algorithm language, and performance optimizations are specified using a separate scheduling language. The scheduling language enables programmers to easily search through this complicated tradeoff space by composing together a large set of edge traversal and vertex data layout optimizations.
fileExtensions gt
writtenIn cpp python markdown lisp make cmake yaml csv

isOpenSource true
fileType text
centralPackageRepositoryCount 0
repoStats
 firstCommit 2017
 commits 1560
 committers 49
 files 914
 newestCommit 2021
country United States
originCommunity https://github.com/GraphIt-DSL

example
 element Vertex end
 element Edge end
 const edges : edgeset{Edge}(Vertex,Vertex) = load (argv[1]);
 const vertices : vertexset{Vertex} = edges.getVertices();
 const old_rank : vector{Vertex}(double) = 1.0/vertices.size();
 const new_rank : vector{Vertex}(double) = 0.0;
 const out_degree : vector {Vertex}(int) = edges.getOutDegrees();
 const contrib : vector{Vertex}(double) = 0.0;
 const error : vector{Vertex}(double) = 0.0;
 const damp : double = 0.85;
 const beta_score : double = (1.0 - damp) / vertices.size();
 
 func computeContrib(v : Vertex)
     contrib[v] = old_rank[v] / out_degree[v];
 end
 
 func updateEdge(src : Vertex, dst : Vertex)
     new_rank[dst] += contrib[src];
 end
 
 func updateVertex(v : Vertex)
     var old_score : double = old_rank[v];
     new_rank[v] = beta_score + damp*(new_rank[v]);
     error[v] = fabs(new_rank[v] - old_rank[v]);
     old_rank[v] = new_rank[v];
     new_rank[v] = 0.0;
 end
 
 func printRank(v : Vertex)
     print old_rank[v];
 end
 
 func reset(v: Vertex)
     old_rank[v] = 1.0/vertices.size();
     new_rank[v] = 0.0;
 end
 
 func main()
     for trail in 0:10
       startTimer();
         vertices.apply(reset);
       for i in 0:20
           vertices.apply(computeContrib);
             #s1# edges.apply(updateEdge);
             vertices.apply(updateVertex);
       end
 
       var elapsed_time : double = stopTimer();
       print "elapsed time: ";
       print elapsed_time;
     end
 end
 
 % specify schedules here or use a separate schedule file

githubRepo https://github.com/GraphIt-DSL/graphit
 firstCommit 2017
 stars 308
 forks 29
 subscribers 21
 created 2017
 updated 2022
 description GraphIt - A High-Performance Domain Specific Language for Graph Analytics
 issues 5

domainName graphit-lang.org
 registered 2018
 awisRank
  2022 11083526

hackerNewsDiscussions
 id|title|url|time|timestamp|by|comments|score
 18499287|GraphIt: A High-Performance Domain-Specific Language for Graph Analytics|http://graphit-lang.org/|2018-11-21 00:50:23 UTC|1542761423|ArtWomb|2|34

isbndb 0
