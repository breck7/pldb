EBNF
====

EBNF, aka extended Backus-Naur form, is a grammar language created in 1977 by Niklaus Wirth.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221977%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D
 https://pldb.io/concepts/../lists/creators.html#q=Niklaus%20Wirth

#376 on PLDB
47 Years Old
0 Repos

In computer science, extended Backus-Naur form (EBNF) is a family of metasyntax notations, any of which can be used to express a context-free grammar. EBNF is used to make a formal description of a formal language which can be a computer programming language. They are extensions of the basic Backus–Naur form (BNF) metasyntax notation. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Extended_Backus–Naur_form

- EBNF Wikipedia page
 https://en.wikipedia.org/wiki/Extended_Backus–Naur_form
- There are at least 0 EBNF repos on GitHub
- EBNF on HOPL
 https://hopl.info/showlanguage.prx?exp=755
- CodeMirror package for syntax highlighting EBNF
- Pygments supports syntax highlighting for EBNF
- GitHub supports syntax highlighting for EBNF
- See also: (3 related languages)Pascal, XML, Regular Expressions
- 1 languages in PLDB linking to EBNF: Parsers

(*
  Source:  https://github.com/io7m/jsom0
  License: ISC
*)

digit_without_zero =
  &quot;1&quot; | &quot;2&quot; | &quot;3&quot; | &quot;4&quot; | &quot;5&quot; | &quot;6&quot; | &quot;7&quot; | &quot;8&quot; | &quot;9&quot; ;

digit =
  &quot;0&quot; | digit_without_zero ;

positive =
  digit_without_zero , { digit } ;

natural =
  &quot;0&quot; | positive ;

real =
  [ &quot;-&quot; ] , digit , [ &quot;.&quot; , { digit } ] ;

function application = list( symbol, { expression } );

Language features
======================================================

row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Token 
 Example
  (* A comment
  *)
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Token (* *)
 Example
  (* A comment
  *)
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Token 
 Example
