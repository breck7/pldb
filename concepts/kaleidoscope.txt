Kaleidoscope
============

Kaleidoscope is a programming language created in 1994.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221994%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D

#2317 on PLDB
30 Years Old

The Kaleidoscope programming language is a constraint programming language embedding constraints into an imperative object-oriented language.  It adds keywords always, once, and assert..during (formerly while..assert) to make statements about relational invariants. Objects have constraint constructors, which are not methods, to enforce the meanings of user-defined datatypes. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Kaleidoscope_(programming_language)

- Kaleidoscope Wikipedia page
 https://en.wikipedia.org/wiki/Kaleidoscope_(programming_language)
- Kaleidoscope first developed in University of Washington
- Kaleidoscope on HOPL
 https://hopl.info/showlanguage.prx?exp=2143

always: temperature = mercury.height / scale;
always: white rectangle( thermometer );
always: grey rectangle( mercury );
always: display number( temperature );
while mouse.button = down do
 mercury.top = mouse.location.y;
end while;
