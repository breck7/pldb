import ../code/conceptPage.scroll

id eiffel
name Eiffel
appeared 1986
creators Bertrand Meyer
tags pl
website https://dev.eiffel.com/Main_Page
blog https://www.eiffel.org/blogs
releaseNotes https://www.eiffel.org/doc/eiffelstudio/EiffelStudio_release_notes
download https://www.eiffel.org/downloads
fileExtensions e
writtenIn xml c markdown html svg bourne-shell perl smarty cpp scss css xslt csharp sql javascript json make ini xsd m4 lex python cmake yacc php idl assembly-language bash cadence-skill ada objective-c sed pascal yaml csv asp.net diff awk matlab ring tex logos java dtd c-shell nemerle coffeescript xhtml dockerfile xmi r scheme sas

fileType text
docs https://www.eiffel.org/documentation
codeMirror eiffel
rosettaCode http://www.rosettacode.org/wiki/Category:Eiffel
centralPackageRepositoryCount 0
repoStats
 firstCommit 1993
 commits 97832
 committers 107
 files 75980
 newestCommit 2023
country Various
originCommunity Eiffel Software
reference https://www.eiffel.org/doc/eiffel/Eiffel_programming_language_syntax

helloWorldCollection Eiffel
 note "Hello World in Eiffel"
 class HELLO
 create run
 feature run
        do
                print ("Hello World!%N")
        end
 end
 
pygmentsHighlighter Eiffel
 filename eiffel.py
 fileExtensions e
twitter https://twitter.com/eiffel_language
leachim6 Eiffel
 filepath e/Eiffel.eiff
 fileExtensions eiff
 example
  indexing "Hello World in Eiffel , from http://roesler-ac.de/wolfram/hello.htm#Eiffel"
  
  class HELLO
  
  creation
  	run
  
  feature
  
  	run is
  		local
  			io : BASIC_IO;
  		do
  			!!io;
  			io.put_string("Hello World");
  			io.put_newline
  		end; -- run
  end; -- class HELLO
  

githubRepo https://github.com/EiffelSoftware/EiffelStudio
 stars 39
 forks 24
 subscribers 13
 created 2016
 updated 2023
 description Public mirror of https://svn.eiffel.com/eiffelstudio-public/trunk, see https://github.com/EiffelSoftware/libraries  for libraries
 issues 3

lineCommentToken --
assignmentToken :=
stringToken "

hasPointers true
hasComments true
hasMultipleInheritance true
hasOperatorOverloading true
hasMultiLineComments false
hasLineComments true
 -- A comment
hasSemanticIndentation false
hasCaseInsensitiveIdentifiers true
hasAssignment true
hasStrings true
 "Hello world"
hasOctals true
 -- 0[cC][0-7]+
hasHexadecimals true
 -- 0[xX][a-fA-F0-9]+
hasFloats true
 -- ([0-9]+\.[0-9]*)|([0-9]*\.[0-9]+)
hasIntegers true
 -- [0-9]+
hasBinaryNumbers true
 -- 0[bB][01]+

wikipedia https://en.wikipedia.org/wiki/Eiffel_(programming_language)
 example
  class
      HELLO_WORLD
  create
      make
  feature
     make
        do
           print ("Hello, world!")
        end
  end
 related freebsd linux solaris ada simula z-notation csharp d java lisaac racket ruby sather scala algol pascal visual-studio-editor isbn smalltalk c cil java-bytecode
 summary Eiffel is an object-oriented programming language designed by Bertrand Meyer (an object-orientation proponent and author of Object-Oriented Software Construction) and Eiffel Software. Meyer conceived the language in 1985 with the goal of increasing the reliability of commercial software development; the first version becoming available in 1986. In 2005, Eiffel became an ISO-standardized language. The design of the language is closely connected with the Eiffel programming method. Both are based on a set of principles, including design by contract, command–query separation, the uniform-access principle, the single-choice principle, the open–closed principle, and option–operand separation. Many concepts initially introduced by Eiffel later found their way into Java, C#, and other languages. New language design ideas, particularly through the Ecma/ISO standardization process, continue to be incorporated into the Eiffel language.
 pageId 9838
 dailyPageViews 240
 created 2001
 backlinksCount 262
 revisionCount 909
 appeared 1986
 fileExtensions e

hopl https://hopl.info/showlanguage.prx?exp=1220
tiobe Eiffel

domainName eiffel.org
 registered 2001
 awisRank
  2022 2460343

githubBigQuery Eiffel
 repos 721
 users 653

linguistGrammarRepo https://github.com/textmate/eiffel.tmbundle
 firstCommit 2006
 lastCommit 2011
 committerCount 4
 commitCount 13
 sampleCount 3
 example
  note
  	description: "Git checkout command."
  	author: "Olivier Ligot"
  
  class
  	GIT_CHECKOUT_COMMAND
  
  inherit
  	GIT_COMMAND
  
  create
  	make,
  	make_master
  
  feature {NONE} -- Initialization
  
  	make (a_branch: STRING)
  			-- Checkout the branch `a_branch'.
  		do
  			initialize
  			arguments.force_last (a_branch)
  			branch := a_branch
  		ensure
  			branch_set: branch = a_branch
  		end
  
  	make_master
  			-- Checkout the master branch.
  		do
  			make ("master")
  		end
  
  feature -- Access
  
  	branch: STRING
  			-- Branch to checkout
  
  	name: STRING = "checkout"
  			-- Git subcommand name
  
  end
  

isbndb 10
 year|publisher|title|authors|isbn13
 1995|Addison-Wesley|Object-Oriented Programming in Eiffel (International Computer Science Series)|Thomas, Peter G. and Weedon, Raymond A.|9780201593877
 1991|Prentice Hall|Eiffel : The Language (PRENTICE HALL OBJECT-ORIENTED SERIES)|Meyer, Bertrand|9780132479257
 1995|Palgrave HE UK|Eiffel Object-Oriented Programming|Tyrrell, A.J.|9780333645543
 2008|Pearson|An Object-Oriented Introduction to Computer Science Using Eiffel|Wiener, Richard|9780131838727
 1997|Prentice Hall|Object Technology for Scientific Computing: Object-Oriented Numerical Software in Eiffel and C (Prentice Hall Object-Oriented Series)|Dubois, Paul F.|9780132678087
 2008|Pearson|Object-Oriented Introduction to Data Structures Using Eiffel|Wiener, Richard|9780131855885
 1997|Addison-Wesley|Object-Oriented Programming in Eiffel (2nd Edition) (International Computer Science Series)|Thomas, P. and Weedon, Ray|9780201331318
 2000|Prentice Hall|Windows Programming Made Easy: Using Object Technology, COM, and the Windows Eiffel Library|Maughan, Glenn and Simon, Raphael|9780130289773
 20151230|Bloomsbury UK|Eiffel Object-Oriented Programming|A.J. Tyrrell|9781349138753
 1995|Prentice Hall|Object Oriented Programming In Eiffel|Robert Rist and Robert Terwilliger|9780132059312

githubLanguage Eiffel
 fileExtensions e
 trendingProjectsCount 0
 type programming
 aceMode eiffel
 codemirrorMode eiffel
 codemirrorMimeType text/x-eiffel
 tmScope source.eiffel
 repos 913

semanticScholar 12
 year|title|doi|citations|influentialCitations|authors|paperId
 2001|The .NET Contract Wizard: adding Design by Contract to languages other than Eiffel|10.1109/TOOLS.2001.941655|48|1|Karine Arnout and Raphael Simon|d83b6439361c65f0fcbdf2b4e0226c3ff6a67549
 2011|A Refactoring Constraint Language and Its Application to Eiffel|10.1007/978-3-642-22655-7_13|31|3|F. Steimann and Christian Kollee and Jens Henning von Pilgrim|4b697347a0c3bb777507afb2f16dde238e71df10
 1990|Eiffel Linda: an object-oriented Linda dialect|10.1145/122193.122199|25|0|Robert Jellinghaus|acd7766cd77fa70b7816831ef6fd7d31a196cd92
 1994|From MooZ to Eiffel - A Rigorous Approach to System Development|10.1007/3-540-58555-9_102|9|0|Virgínia A. O. Cordeiro and A. Sampaio and S. Meira|91e08ceefe330c9604955973bef08d4f0c7f869b
 2011|Automated Translation of Java Source Code to Eiffel|10.1007/978-3-642-21952-8_4|8|0|Marco Trudel and M. Oriol and Carlo A. Furia and M. Nordio|eb6ea3708feb35cbed41eda76ccd62d1f7b4b364
 2009|Cameo: an alternative model of concurrency for Eiffel|10.1007/s00165-008-0096-1|6|0|P. Brooke and R. Paige|725ab15b853bb5b7306a601539f839a4f1d3c8e8
 1994|FLOO: A Strong Coupling Between Eiffel Language and 02 DBMS|10.1142/9789812831163_0014|4|0|R. Chignoli and J. Farré and Philippe Lahire and R. Rousseau|7c1d2e732791df18daf2efb61bcd0670036359c7
 1997|Eiffel in Lehre und Forschung –  Erfahrungen und Perspektiven|10.1007/s002870050078|2|0|Michael Rybe and Stefan Leboch|11390a69d1e7f4daadbedc5cc6680768fba27438
 1999|Experiences Teaching Eiffel as a First Programming Language to Economy Students|10.1109/TOOLS.1999.10060|2|0|G. Dedene|99bbe1714f80e75a7cdb280280fb3cc797ed8f97
 2012|Bertrand Meyer: Software Engineering and the Eiffel Programming Language|10.1109/MC.2012.299|2|1|C. Severance|b0bbfedfd5d842a7da41b1c171c41221d568761c
 2018|Mapping Event-B Machines into Eiffel Programming Language|10.1007/978-3-030-14687-0_23|2|0|V. Rivera and Jooyoung Lee and M. Mazzara|443e48249684dc85951aec996bbad84f729b727a
 2018|Translation from Event-B into Eiffel|10.18255/1818-1015-2018-6-623-636|1|0|Sofia Reznikova and V. Rivera and Joo Young Lee and M. Mazzara|99272bfe795dd435d057c7aa2255fe5f8c340584
