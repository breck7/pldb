Pascal
======

Pascal is a programming language created in 1970 by Niklaus Wirth.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221970%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1970
 https://pldb.io/concepts/../lists/creators.html#q=Niklaus%20Wirth Niklaus Wirth

#47 on PLDB
54 Years Old
49k Repos

Pascal is an imperative and procedural programming language, which Niklaus Wirth designed in 1968–69 and published in 1970, as a small, efficient language intended to encourage good programming practices using structured programming and data structuring. It is named in honor of the French mathematician, philosopher and physicist Blaise Pascal. Pascal was developed on the pattern of the ALGOL 60 language. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Pascal_(programming_language) Read more on Wikipedia...

- Tags: programming language
 wrapsOn none
- Interview with the creator of Pascal: 1.
 https://pldb.io/blog/niklausWirth.html 1.
 wrapsOn none
- There are at least 49,346 Pascal repos on GitHub
 wrapsOn none
- Early development of Pascal happened in ETH Zürich
 wrapsOn none
- The  Google BigQuery Public Dataset GitHub snapshot shows 8k users using Pascal in 10k repos on GitHub
 wrapsOn none
- There are 1,858 members in the Pascal subreddit
 wrapsOn none
- There are 710 Project Euler users using Pascal
 wrapsOn none
- Explore Pascal snippets on Rosetta Code
 wrapsOn none
- Pascal is supported by the GDB
 wrapsOn none
- Pascal on HOPL
 https://hopl.info/showlanguage.prx?exp=520 Pascal on HOPL
 wrapsOn none
- Pascal appears in the TIOBE Index
 wrapsOn none
- Pascal Ubuntu package
 https://packages.ubuntu.com/jammy/fp-compiler Pascal Ubuntu package
 wrapsOn none
- ANTLR grammar for Pascal
 wrapsOn none
- CodeMirror package for syntax highlighting Pascal
 wrapsOn none
- Monaco package for syntax highlighting Pascal
 wrapsOn none
- GitHub supports syntax highlighting for Pascal
 wrapsOn none
- Pascal appears in the Quine Relay project
 wrapsOn none
- Indeed.com has 102 matches for "pascal developer".
 wrapsOn none
- See also: (35 related languages) Delphi, Free Pascal, Turbo Pascal, UCSD Pascal, ALGOL W, Ada, Go, Java, Modula, Modula-2, Modula-3, Oberon, Object Pascal, Oxygene, Seed7, ALGOL 60, Euler, Lisp, ALGOL 68, Assembly language, Tex, Simula, Fortran, Watcom, C, X86, IP Pascal, C#, Algol, PL/I, iOS, Android, Unicode, Linux, FreeBSD
 wrapsOn none
- 56 PLDB concepts link to Pascal: Ace Editor, ADLIB, Bazel, binaryen, C2, chaiscript, Chapel, chrysaLisp, cloc, egel, Eiffel, Emscripten, Extended Pascal, Fardlang, Felix, GAP, Gforth, Halide, haste, HHVM, High Level Assembly, H++, Julia, Ligo, mal, MicroPython, MongoDB, mythryl, Node.js, OpenCV, P, Pawn, PAWN, Perl, PHP, PLZ, GNU Poke, polymath, POV-Ray SDL, psyche-c, Pygments, Racket, raptorjit, Revolution, RicScript, SciPy, skip, Snowball, SourcePawn, stacklang, Swift, TensorFlow, typecobol, v8, Virt, Wren
 wrapsOn none

unit output;

interface

function Square(const num: Integer): Integer;

implementation

// Type your code here, or load an example.

function Square(const num: Integer): Integer;
begin
    Square := num * num;
end;

end.

program Main;
begin
   writeln(&#39;Hello, world!&#39;);
end.

program HelloWorld(output);
begin
        writeln(&#39;Hello World&#39;);
end.

{Hello World in Pascal}

program HelloWorld(output);
begin
  WriteLn(&#39;Hello World!&#39;);
end.

uses
  uw27294;

var
  p : procedure;

procedure test;

begin
  p:=@test;
  writeln(&#39;OK&#39;);
end;

procedure global;
begin
  p:=nil;
  test;
  p();
end;

begin
  global;
  uw27294.global;
end.

program Printing;

var i : integer;

procedure Print(j : integer);
begin
  ...
end;

begin { main program }
  ...
  Print(i);
end.

* + - / :=  = > >= and begin boolean break byte continue div do double else end false if integer longint mod not or repeat shl shortint shr single then true until while word xor

Language features
======================================================

row
 Feature Conditionals
 FeatureLink ../features/hasConditionals.html
 Supported ✓
 Example
 Token 
row
 Feature While Loops
 FeatureLink ../features/hasWhileLoops.html
 Supported ✓
 Example
 Token 
row
 Feature Booleans
 FeatureLink ../features/hasBooleans.html
 Supported ✓
 Example
 Token true false
row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
 Token '
row
 Feature Assignment
 FeatureLink ../features/hasAssignment.html
 Supported ✓
 Example
 Token :=
row
 Feature Case Insensitive Identifiers
 FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
 Supported ✓
 Example
  s := (A + a + A);
 Token 
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token writeln
row
 Feature Function Overloading
 FeatureLink ../features/hasFunctionOverloading.html
 Supported ✓
 Example
  program Adhoc;
  
  function Add(x, y : Integer) : Integer;
  begin
      Add := x + y
  end;
  
  function Add(s, t : String) : String;
  begin
      Add := Concat(s, t)
  end;
  
  begin
      Writeln(Add(1, 2));                   (* Prints "3"             *)
      Writeln(Add('Hello, ', 'World!'));    (* Prints "Hello, World!" *)
  end.
 Token 
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported ✓
 Example
  (* A comment
  *)
 Token { }
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  { This is a single line comment in pascal. But needs to be closed. }
 Token 
row
 Feature Polymorphism
 FeatureLink ../features/hasPolymorphism.html
 Supported ✓
 Example
 Token 
row
 Feature Case Sensitivity
 FeatureLink ../features/isCaseSensitive.html
 Supported X
 Example
 Token 
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token 
row
 Feature Operator Overloading
 FeatureLink ../features/hasOperatorOverloading.html
 Supported X
 Example
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported X
 Example
 Token
