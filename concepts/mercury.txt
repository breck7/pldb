Mercury
=======

Mercury is an open source programming language created in 1995 by Zoltan Somogyi.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221995%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1995
 https://pldb.io/concepts/../lists/creators.html#q=Zoltan%20Somogyi Zoltan Somogyi

#377 on PLDB
29 Years Old
715 Repos

Mercury is a functional logic programming language made for real-world uses. The first version was developed at the University of Melbourne, Computer Science department, by Fergus Henderson, Thomas Conway, and Zoltan Somogyi, under Somogyi's supervision, and released on April 8, 1995. Mercury is a purely declarative logic programming language. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Mercury_(programming_language) Read more on Wikipedia...

- Tags: programming language
- There are at least 715 Mercury repos on GitHub
- Early development of Mercury happened in University of Melbourne
- Mercury compiles to C
- The  Google BigQuery Public Dataset GitHub snapshot shows 594 users using Mercury in 646 repos on GitHub
- There are 348 members in the Mercury subreddit
- Explore Mercury snippets on Rosetta Code
- Mercury on HOPL
 https://hopl.info/showlanguage.prx?exp=2226 Mercury on HOPL
- Mercury appears in the TIOBE Index
- GitHub supports syntax highlighting for Mercury
- mercurylang.org was registered in 2011
- See also: (26 related languages) Autocode, Mercurial, IA-32, ARM, Unix, Linux, Solaris, FreeBSD, Android, Prolog, HOPE, Haskell, C, Java, C#, Erlang, Assembly language, CIL, Vim, Emacs, Eclipse, Curry, Alice, Standard ML, Oz, Visual Prolog

:- module hello.
:- interface.
:- import_module io.
:- pred main(io::di, io::uo) is det.

:- implementation.
main(!IO) :-
	io.write_string(&quot;Hello World\n&quot;, !IO).

% &quot;Hello World&quot; in Mercury.

% This source file is hereby placed in the public domain.  -fjh (the author).

:- module hello.
:- interface.
:- import_module io.

:- pred main(io::di, io::uo) is det.

:- implementation.

main(!IO) :-
	io.write_string(&quot;Hello, world\n&quot;, !IO).

:- module fib.
 :- interface.
 :- import_module io.
 :- pred main(io::di, io::uo) is det.
 
 :- implementation.
 :- import_module int.

 :- func fib(int) = int.
 fib(N) = (if N =&lt; 2 then 1 else fib(N - 1) + fib(N - 2)).

 main(!IO) :-
        io.write_string(&quot;fib(10) = &quot;, !IO),
        io.write_int(fib(10), !IO),
        io.nl(!IO).
        % Could instead use io.format(&quot;fib(10) = %d\n&quot;, [i(fib(10))], !IO).

Language features
======================================================

row
 Feature Strings
 FeatureLink ../features/hasStrings.html
 Supported ✓
 Example
  "Hello world"
 Token "
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
 Token io.write_string
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  % A comment
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  % A comment
 Token %
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token

View source
