SAKO
====

SAKO, aka System Automatycznego Kodowania, is a programming language created in 1960.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%221960%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 1960

#1121 on PLDB
64 Years Old

SAKO (PL: System Automatycznego Kodowania - EN: An Automatic Coding System) is a non-English-based programming language written for Polish computers XYZ, ZAM-2, ZAM-21 and ZAM-41.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/SAKO_(programming_language) Read more on Wikipedia...

- Tags: programming language
- Early development of SAKO happened in Polish Academy of Sciences
- SAKO is written with the native language of Polish
- SAKO on HOPL
 https://hopl.info/showlanguage.prx?exp=2178 SAKO on HOPL
- Read more about SAKO on the web: 1.
 https://historiainformatyki.pl/skan.php?doc_id=1489&type=pdf&for_download=1 1.

   TEKST:
   HELLO WORLD
   LINIA
   STOP NASTEPNY
   KONIEC

Language features
======================================================

row
 Feature Infix Notation
 FeatureLink ../features/hasInfixNotation.html
 Supported ✓
 Example
  I = 3 + 4
 Token 
row
 Feature Lists
 FeatureLink ../features/hasLists.html
 Supported ✓
 Example
  TABLICA(4): B
  1 2.0 3.4
  4.1 5.6
  *
 Token 
row
 Feature Print() Debugging
 FeatureLink ../features/hasPrintDebugging.html
 Supported ✓
 Example
  TEKST:
  HI
 Token 
row
 Feature Operators
 FeatureLink ../features/hasOperators.html
 Supported ✓
 Example
  1 + 1 - 1 × 1 * 1 / 1
 Token 
row
 Feature Bitwise Operators
 FeatureLink ../features/hasBitWiseOperators.html
 Supported ✓
 Example
 Token 
row
 Feature Assignment
 FeatureLink ../features/hasAssignment.html
 Supported ✓
 Example
 Token =
row
 Feature Case Insensitive Identifiers
 FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
 Supported ✓
 Example
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  K) A comment
 Token K)
row
 Feature Zero-based numbering
 FeatureLink ../features/hasZeroBasedNumbering.html
 Supported ✓
 Example
 Token 
row
 Feature Integers
 FeatureLink ../features/hasIntegers.html
 Supported ✓
 Example
  CALKOWITE: I
  I = 80766866
 Token 
row
 Feature File Imports
 FeatureLink ../features/hasImports.html
 Supported ✓
 Example
 Token 
row
 Feature Floats
 FeatureLink ../features/hasFloats.html
 Supported ✓
 Example
  A = 2.3
 Token 
row
 Feature Scientific Notation
 FeatureLink ../features/hasScientificNotation.html
 Supported ✓
 Example
 Token 
row
 Feature Gotos
 FeatureLink ../features/hasGotos.html
 Supported ✓
 Example
 Token 
row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  K) A comment
  : Also a comment (although, rarer and newer)
  K) Comments must start at the beginning of a line
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
 Token K)
row
 Feature Disk Output
 FeatureLink ../features/canWriteToDisk.html
 Supported ✓
 Example
  PISZ NA BEBEN OD 10: A
 Token 
row
 Feature MultiLine Comments
 FeatureLink ../features/hasMultiLineComments.html
 Supported X
 Example
 Token 
row
 Feature Increment and decrement operators
 FeatureLink ../features/hasIncrementAndDecrementOperators.html
 Supported X
 Example
 Token 
row
 Feature Classes
 FeatureLink ../features/hasClasses.html
 Supported X
 Example
 Token 
row
 Feature While Loops
 FeatureLink ../features/hasWhileLoops.html
 Supported X
 Example
 Token 
row
 Feature Case Sensitivity
 FeatureLink ../features/isCaseSensitive.html
 Supported X
 Example
 Token
