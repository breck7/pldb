dlvm
====

dlvm is an intermediate representation language created in 2017 by Chris Lattner.
 https://pldb.io/concepts/../lists/explorer.html#searchBuilder=%7B%22criteria%22%3A%5B%7B%22condition%22%3A%22%3D%22%2C%22data%22%3A%22appeared%22%2C%22origData%22%3A%22appeared%22%2C%22tags%22%3A%22num%22%2C%22value%22%3A%5B%222017%22%5D%7D%5D%2C%22logic%22%3A%22AND%22%7D 2017
 https://pldb.io/concepts/../lists/creators.html#q=Chris%20Lattner Chris Lattner

#598 on PLDB
7 Years Old

git clone https://github.com/dlvm-team/swift

Modern Compiler Infrastructure for Deep Learning Systems

- Tags: intermediate representation language
- dlvm is developed on GitHub and has 0 stars
- Early development of dlvm happened in University of Illinois Urbana-Champaign and Purdue University
- dlvm.org was registered in 2022
- Read more about dlvm on the web: 1.
 https://dlvm-team.github.io/ 1.

// Dimension-erased functions are flexible because input shapes are dynamic.
// They may be slower and less optimized than their shape-specialized counterparts.

// f(x, w, b) = dot(x, w) + pad(b, at: 0)
func @f: (&lt;_ x _ x f32&gt;, &lt;_ x _ x f32&gt;, &lt;_ x f32&gt;) -&gt; &lt;_ x _ x f32&gt; {
&#39;entry(%x: &lt;_ x _ x f32&gt;, %w: &lt;_ x _ x f32&gt;, %b: &lt;_ x f32&gt;):
    %0.0 = dot %x: &lt;_ x _ x f32&gt;, %w: &lt;_ x _ x f32&gt;
    %0.1 = padShape %b: &lt;_ x f32&gt; at 0
    %0.2 = add %0.0: &lt;_ x _ x f32&gt;, %0.1: &lt;1 x _ x f32&gt;
    return %0.2: &lt;_ x _ x f32&gt;
}

Language features
======================================================

row
 Feature Comments
 FeatureLink ../features/hasComments.html
 Supported ✓
 Example
  // A comment
 Token 
row
 Feature Line Comments
 FeatureLink ../features/hasLineComments.html
 Supported ✓
 Example
  // A comment
 Token //
row
 Feature Semantic Indentation
 FeatureLink ../features/hasSemanticIndentation.html
 Supported X
 Example
 Token

View source
