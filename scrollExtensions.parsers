ohayoCodeParser
 extends codeParser
 cruxFromId
 description Provide a direct link to analyze this data in Ohayo.
 javascript
  compile() {
   const link = `https://ohayo.breckyunits.com?filename=${this.root.permalink}.ohayo&data=${encodeURIComponent(this.subparticlesToString())}`
   return `<div class="scrollQuote">Analyze this data yourself in <a href="${link}">Ohayo</a></div>`
  }
observableParser
 extends abstractScrollParser
 cruxFromId
 cells commandWordCell urlCell
 description Provide a direct link to analyze this data in Observable.
 javascript
  compile() {
   return `<div class="scrollQuote">Analyze this data yourself in <a href="${this.getWord(1)}">Observable</a></div>`
  }
bashParser
 cruxFromId
 description Run a bash oneliner via nodejs and dumps stdout to pre tag.
 catchAllCellType stringCell
 extends abstractScrollParser
 javascript
  compile() {
   const command = this.content
   const file = this.root.file
   const cwd = file.folderPath
   const output = require("child_process").execSync(command, {cwd})
   return `<div class="codeWithHeader"><div class="codeHeader">${command}</div><code class="scrollCodeBlock">${output.toString().trim()}</code></div>`
  }

monacoEditorParser
 cruxFromId
 extends abstractScrollParser
 description A Monaco code editor.
 baseParser blobParser
 example
  monacoEditor javascript
   // Hello world
 javascript
  compile() {
   return `<div id="monacoContainer"></div>
    <script defer src="../node_modules/monaco-editor/min/vs/loader.js"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function () {
    require.config({ paths: { vs: '../node_modules/monaco-editor/min/vs' } })
    require(["vs/editor/editor.main"], function() {
      monaco.editor.create(document.getElementById('monacoContainer'), {
          value: \`${this.subparticlesToString().replace(/\n/g, "\\n")}\`,
          language: '${this.getWord(1)}',
          minimap: {
            enabled: false
        },
        scrollbar: {
            vertical:"hidden",
            horizontal: "hidden",
            handleMouseWheel:false,
        },
        overviewRulerLanes: 0,
        hideCursorInOverviewRuler: true,
        overviewRulerBorder: false,
        wordWrap: 'on',
        //lineNumbers: 'off',
      glyphMargin: false,
      folding: false,
      // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882
      lineDecorationsWidth: 10,
      lineNumbersMinChars: 2
        });
      });
      })
    </script>`
  }
