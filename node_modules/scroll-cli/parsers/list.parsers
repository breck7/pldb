listAftertextParser
 popularity 0.014325
 extends abstractIndentableParagraphParser
 example
  - I had a _new_ thought.
 description A list item.
 crux -
 javascript
  defaultClassName = ""
  compile() {
   const index = this.getIndex()
   const parent = this.parent
   const particleClass = this.constructor
   const isStartOfList = index === 0 || !(parent.particleAt(index - 1) instanceof particleClass)
   const isEndOfList = parent.length === index + 1 || !(parent.particleAt(index + 1) instanceof particleClass)
   const { listType } = this
   return (isStartOfList ? `<${listType} ${this.attributes}>` : "") + `${super.compile()}` + (isEndOfList ? `</${listType}>` : "")
  }
  get attributes() {
    return ""
  }
  tag = "li"
  listType = "ul"

abstractCustomListItemParser
 extends listAftertextParser
 javascript
  get requireOnce() {
    return `<style>\n.${this.constructor.name} li::marker {content: "${this.firstAtom} ";}\n</style>`
  }
  get attributes() {
    return `class="${this.constructor.name}"`
  }

orderedListAftertextParser
 popularity 0.004485
 extends listAftertextParser
 description A list item.
 example
  1. Hello world
 pattern ^\d+\. 
 javascript
  listType = "ol"
  get attributes() { return ` start="${this.getAtom(0)}"`}