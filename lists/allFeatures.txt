All Features
============

A list of 168 features found in programming languages.

title|_$^titleLink|_$^pseudoExample|_$^yes|_$^no|_$^percentage
Comments|_$^../features/hasComments.html|_$^# Hello PLDB|_$^626|_$^4|_$^99%
Line Comments|_$^../features/hasLineComments.html|_$^# Hello PLDB|_$^530|_$^21|_$^96%
Strings|_$^../features/hasStrings.html|_$^"Hello PLDB"|_$^365|_$^0|_$^100%
Print() Debugging|_$^../features/hasPrintDebugging.html|_$^print "Hello PLDB"|_$^319|_$^1|_$^100%
MultiLine Comments|_$^../features/hasMultiLineComments.html|_$^/* Hello PLDB */|_$^224|_$^20|_$^92%
Integers|_$^../features/hasIntegers.html|_$^80766866|_$^160|_$^1|_$^99%
Floats|_$^../features/hasFloats.html|_$^80766866.0|_$^138|_$^0|_$^100%
Booleans|_$^../features/hasBooleans.html|_$^pldb = true|_$^116|_$^4|_$^97%
Hexadecimals|_$^../features/hasHexadecimals.html|_$^0x4D06792|_$^107|_$^1|_$^99%
Conditionals|_$^../features/hasConditionals.html|_$^if (isTrue) printPldb()|_$^74|_$^3|_$^96%
Semantic Indentation|_$^../features/hasSemanticIndentation.html|_$^line0 if true line1  print "Hello PLDB"|_$^68|_$^517|_$^12%
Assignment|_$^../features/hasAssignment.html|_$^name = "PLDB"|_$^53|_$^1|_$^98%
Octals|_$^../features/hasOctals.html|_$^0o464063622|_$^52|_$^3|_$^95%
While Loops|_$^../features/hasWhileLoops.html|_$^while (pldb.pop()) loop()|_$^48|_$^4|_$^92%
File Imports|_$^../features/hasImports.html|_$^import pldb|_$^48|_$^2|_$^96%
Binary Literals|_$^../features/hasBinaryNumbers.html|_$^0b100110100000110011110010010|_$^48|_$^1|_$^98%
Functions|_$^../features/hasFunctions.html|_$^function computePLDBRanks() {}|_$^44|_$^1|_$^98%
Standard Library|_$^../features/hasStandardLibrary.html|_$^print("print is part of stdlib")|_$^37|_$^1|_$^97%
Operator Overloading|_$^../features/hasOperatorOverloading.html|_$^def __add__(): doSomethingDifferent()|_$^33|_$^13|_$^72%
Classes|_$^../features/hasClasses.html|_$^class PLDBFile {}|_$^31|_$^5|_$^86%
Constants|_$^../features/hasConstants.html|_$^const name = "PLDB"|_$^28|_$^1|_$^97%
Macros|_$^../features/hasMacros.html|_$^#define pldbItems 4000|_$^27|_$^9|_$^75%
Type Inference|_$^../features/hasTypeInference.html|_$^imAString = "pldb"|_$^26|_$^1|_$^96%
Switch Statements|_$^../features/hasSwitch.html|_$^switch animal: case dog-buy; case cat-sell;|_$^24|_$^1|_$^96%
Case Insensitive Identifiers|_$^../features/hasCaseInsensitiveIdentifiers.html|_$^pLdB = "PLDB"|_$^24|_$^54|_$^31%
Lists|_$^../features/hasLists.html|_$^[2, 3, 10]|_$^22|_$^1|_$^96%
Exceptions|_$^../features/hasExceptions.html|_$^throw new Error("PLDB uh oh")|_$^22|_$^3|_$^88%
Directives|_$^../features/hasDirectives.html|_$^use strict;|_$^21|_$^2|_$^91%
Pointers|_$^../features/hasPointers.html|_$^int *pldb|_$^20|_$^5|_$^80%
Inheritance|_$^../features/hasInheritance.html|_$^class PLDBFile extends File|_$^20|_$^1|_$^95%
Garbage Collection|_$^../features/hasGarbageCollection.html|_$^var iDontNeedToFreeThis|_$^19|_$^8|_$^70%
Case Sensitivity|_$^../features/isCaseSensitive.html|_$^pldb != PLDB|_$^18|_$^9|_$^67%
Access Modifiers|_$^../features/hasAccessModifiers.html|_$^class PLDBFile { public title }|_$^18|_$^3|_$^86%
Scientific Notation|_$^../features/hasScientificNotation.html|_$^8076686.6e1|_$^15|_$^0|_$^-
Constructors|_$^../features/hasConstructors.html|_$^PLDBFile { constructor() {} }|_$^15|_$^4|_$^-
Multiple Inheritance|_$^../features/hasMultipleInheritance.html|_$^extends parentWhichExtendsSomethingElse|_$^14|_$^5|_$^-
Multiline Strings|_$^../features/hasMultilineStrings.html|_$^hello = """Hello\nPLDB"""|_$^13|_$^1|_$^-
Message Passing|_$^../features/hasMessagePassing.html|_$^"get pldb"|_$^12|_$^1|_$^-
Bitwise Operators|_$^../features/hasBitWiseOperators.html|_$^3 == (2 &#124; 1)|_$^12|_$^1|_$^-
Module Pattern|_$^../features/hasModules.html|_$^module PLDB {}|_$^11|_$^0|_$^-
Static Typing|_$^../features/hasStaticTyping.html|_$^int pldbRank = 100|_$^10|_$^0|_$^-
Zero-based numbering|_$^../features/hasZeroBasedNumbering.html|_$^firstItem = pldb[0]|_$^9|_$^3|_$^-
Single Dispatch|_$^../features/hasSingleDispatch.html|_$^person.run()|_$^9|_$^1|_$^-
Regular Expression Syntax Sugar|_$^../features/hasRegularExpressionsSyntaxSugar.html|_$^/pldb/|_$^9|_$^6|_$^-
Pattern Matching|_$^../features/hasPatternMatching.html|_$^fib 0 = 1; fib 1 = 1|_$^9|_$^2|_$^-
Increment and decrement operators|_$^../features/hasIncrementAndDecrementOperators.html|_$^i++|_$^9|_$^3|_$^-
Here Document|_$^../features/hasHereDocs.html|_$^`A big multliline text block`|_$^9|_$^1|_$^-
Threads|_$^../features/hasThreads.html|_$^thread1(); thread2();|_$^8|_$^1|_$^-
Ternary operators|_$^../features/hasTernaryOperators.html|_$^true ? 1 : 0|_$^8|_$^7|_$^-
Structs|_$^../features/hasStructs.html|_$^struct pldbFile { int rank; char *title; };|_$^8|_$^0|_$^-
Mixins|_$^../features/hasMixins.html|_$^extends pldbFile, diskFile|_$^8|_$^1|_$^-
Infix Notation|_$^../features/hasInfixNotation.html|_$^1 + 2|_$^8|_$^0|_$^-
Homoiconicity|_$^../features/hasHomoiconicity.html|_$^(list ())|_$^8|_$^1|_$^-
Enums|_$^../features/hasEnums.html|_$^colorsEnum { "red", "white", "blue"}|_$^8|_$^5|_$^-
Disk Output|_$^../features/canWriteToDisk.html|_$^write("pldb.csv", "...")|_$^8|_$^4|_$^-
Namespaces|_$^../features/hasNamespaces.html|_$^namespace PLDB {}|_$^7|_$^2|_$^-
Maps|_$^../features/hasMaps.html|_$^{name: "PLDB"}|_$^7|_$^0|_$^-
Iterators|_$^../features/hasIterators.html|_$^for lang in pldb()|_$^7|_$^1|_$^-
Function Composition|_$^../features/hasFunctionComposition.html|_$^o = (f, g) => x => f(g(x))|_$^7|_$^1|_$^-
Fixed Point Numbers|_$^../features/hasFixedPoint.html|_$^80766866.00|_$^7|_$^2|_$^-
Type Casting|_$^../features/hasExplicitTypeCasting.html|_$^(float)pldbRank;|_$^7|_$^0|_$^-
Variadic Functions|_$^../features/hasVariadicFunctions.html|_$^args.map(doSomething)|_$^6|_$^0|_$^-
Units of Measure|_$^../features/hasUnitsOfMeasure.html|_$^42cm|_$^6|_$^4|_$^-
Manual Memory Management|_$^../features/hasManualMemoryManagement.html|_$^malloc(4);|_$^6|_$^1|_$^-
Interfaces|_$^../features/hasInterfaces.html|_$^interface PLDBFile|_$^6|_$^1|_$^-
Generics|_$^../features/hasGenerics.html|_$^function identity&lt;T>(arg: T): T|_$^6|_$^1|_$^-
hasForLoops|_$^../features/hasForLoops.html|_$^|_$^6|_$^0|_$^-
hasForEachLoops|_$^../features/hasForEachLoops.html|_$^|_$^6|_$^0|_$^-
Anonymous Functions|_$^../features/hasAnonymousFunctions.html|_$^() => printPldb()|_$^6|_$^0|_$^-
Shebang|_$^../features/canDoShebang.html|_$^#! /run|_$^6|_$^0|_$^-
Prefix Notation|_$^../features/hasPrefixNotation.html|_$^+ 1 2|_$^5|_$^0|_$^-
Polymorphism|_$^../features/hasPolymorphism.html|_$^a + "b"; 1 + 2|_$^5|_$^1|_$^-
Pipes|_$^../features/hasPipes.html|_$^ls pldb &#124; wc|_$^5|_$^1|_$^-
Partial Application|_$^../features/hasPartialApplication.html|_$^add5 = num => addNumbers(10, num)|_$^5|_$^0|_$^-
Operators|_$^../features/hasOperators.html|_$^1 + 1|_$^5|_$^1|_$^-
Null|_$^../features/hasNull.html|_$^uhOh = null|_$^5|_$^0|_$^-
Gotos|_$^../features/hasGotos.html|_$^goto 10|_$^5|_$^4|_$^-
Expressions|_$^../features/hasExpressions.html|_$^(1 + 2)|_$^5|_$^0|_$^-
Doc comments|_$^../features/hasDocComments.html|_$^// param1: A comment about the first param|_$^5|_$^0|_$^-
Destructuring|_$^../features/hasDestructuring.html|_$^{title, rank} = pldbFile|_$^5|_$^0|_$^-
Dependent types|_$^../features/hasDependentTypes.html|_$^pldbSortedList // a list where is sorted is true|_$^5|_$^1|_$^-
Default Parameters Pattern|_$^../features/hasDefaultParameters.html|_$^say(message = "Hello PLDB")|_$^5|_$^0|_$^-
hasContinue|_$^../features/hasContinue.html|_$^|_$^5|_$^0|_$^-
hasBreak|_$^../features/hasBreak.html|_$^|_$^5|_$^0|_$^-
Async Await|_$^../features/hasAsyncAwait.html|_$^async downloadPldb => await getFiles()|_$^5|_$^3|_$^-
Assert Statements|_$^../features/hasAssertStatements.html|_$^assert(isTrue)|_$^5|_$^1|_$^-
Union Types|_$^../features/hasUnionTypes.html|_$^any = string &#124; number|_$^4|_$^0|_$^-
Unicode Identifers|_$^../features/hasUnicodeIdentifiers.html|_$^Î´ = 0.00001|_$^4|_$^1|_$^-
Unary Operators|_$^../features/hasUnaryOperators.html|_$^count++|_$^4|_$^0|_$^-
Typed Holes|_$^../features/hasTypedHoles.html|_$^2 + _ => 2 + [int&#124;float]|_$^4|_$^0|_$^-
Templates|_$^../features/hasTemplates.html|_$^template TCopy(T) {}|_$^4|_$^2|_$^-
Symbol Tables|_$^../features/hasSymbolTables.html|_$^SymbolName&#124;Type&#124;Scope;bar&#124;function,double&#124;extern|_$^4|_$^0|_$^-
Single-Type Arrays|_$^../features/hasSingleTypeArrays.html|_$^const pldbRanks: int[]|_$^4|_$^0|_$^-
Sets|_$^../features/hasSets.html|_$^{"pldb", "PLDB"}|_$^4|_$^1|_$^-
Range Operator|_$^../features/hasRangeOperators.html|_$^1 ... 10|_$^4|_$^0|_$^-
Postfix Notation|_$^../features/hasPostfixNotation.html|_$^2 3 4 + 2 -|_$^4|_$^0|_$^-
Multiple Dispatch|_$^../features/hasMultipleDispatch.html|_$^collide_with(x::Spaceship, y::Spaceship)|_$^4|_$^3|_$^-
Generators|_$^../features/hasGenerators.html|_$^yield 2|_$^4|_$^0|_$^-
Function Overloading|_$^../features/hasFunctionOverloading.html|_$^add(string: str, string2: str)|_$^4|_$^4|_$^-
hasSymbols|_$^../features/hasSymbols.html|_$^|_$^3|_$^0|_$^-
Streams|_$^../features/hasStreams.html|_$^echo 123 &#124; 123.txt|_$^3|_$^0|_$^-
hasSelfOrThisWord|_$^../features/hasSelfOrThisWord.html|_$^|_$^3|_$^0|_$^-
hasReservedWords|_$^../features/hasReservedWords.html|_$^|_$^3|_$^2|_$^-
Methods|_$^../features/hasMethods.html|_$^pldbFile.downloadWebsite()|_$^3|_$^0|_$^-
Magic Getters and Setters|_$^../features/hasMagicGettersAndSetters.html|_$^get(name) => obj[name]|_$^3|_$^2|_$^-
Explicit Standard Library|_$^../features/hasExplicitStandardLibrary.html|_$^#include &lt;stdio.h>|_$^3|_$^0|_$^-
Lazy Evaluation|_$^../features/hasLazyEvaluation.html|_$^print(range(1000000)[2])|_$^3|_$^0|_$^-
Labels|_$^../features/hasLabels.html|_$^mainFn:|_$^3|_$^1|_$^-
hasIfs|_$^../features/hasIfs.html|_$^|_$^3|_$^0|_$^-
hasIfElses|_$^../features/hasIfElses.html|_$^|_$^3|_$^0|_$^-
hasGlobalScope|_$^../features/hasGlobalScope.html|_$^|_$^3|_$^0|_$^-
hasGradualTypes|_$^../features/hasGradualTypes.html|_$^a: int # the type is optional|_$^3|_$^0|_$^-
hasFnArguments|_$^../features/hasFnArguments.html|_$^|_$^3|_$^0|_$^-
First-Class Functions|_$^../features/hasFirstClassFunctions.html|_$^[2.1].map(Math.round)|_$^3|_$^0|_$^-
hasEscapeCharacters|_$^../features/hasEscapeCharacters.html|_$^|_$^3|_$^1|_$^-
Dynamic Properties|_$^../features/hasDynamicProperties.html|_$^pldb.score = 50|_$^3|_$^2|_$^-
Duck Typing|_$^../features/hasDuckTyping.html|_$^length() // makes me an iterator|_$^3|_$^2|_$^-
Dispose Blocks Pattern|_$^../features/hasDisposeBlocks.html|_$^with pldb: do computeRanks()|_$^3|_$^1|_$^-
Characters|_$^../features/hasCharacters.html|_$^char character = 'P';|_$^3|_$^0|_$^-
Breakpoints|_$^../features/supportsBreakpoints.html|_$^debugger;|_$^2|_$^0|_$^-
Merges Whitespace|_$^../features/mergesWhitespace.html|_$^result = 1    +    2|_$^2|_$^0|_$^-
Letter-first Identifiers|_$^../features/letterFirstIdentifiers.html|_$^pldb100 = "OK" // 100pldb = "ERROR"|_$^2|_$^0|_$^-
hasVoidFunctions|_$^../features/hasVoidFunctions.html|_$^|_$^2|_$^0|_$^-
Virtual function|_$^../features/hasVirtualFunctions.html|_$^virtual FetchPLDBFile();|_$^2|_$^0|_$^-
Variable Substitution Syntax|_$^../features/hasVariableSubstitutionSyntax.html|_$^name = "PLDB"; print $name|_$^2|_$^10|_$^-
hasUserDefinedOperators|_$^../features/hasUserDefinedOperators.html|_$^|_$^2|_$^2|_$^-
Type Parameters|_$^../features/hasTypeParameters.html|_$^function identity&lt;T>(arg: T): T {return arg}|_$^2|_$^0|_$^-
Type Annotations|_$^../features/hasTypeAnnotations.html|_$^score: number|_$^2|_$^0|_$^-
Traits|_$^../features/hasTraits.html|_$^use redBorder|_$^2|_$^0|_$^-
hasTimestamps|_$^../features/hasTimestamps.html|_$^|_$^2|_$^0|_$^-
hasStringConcatOperator|_$^../features/hasStringConcatOperator.html|_$^|_$^2|_$^0|_$^-
Static Methods|_$^../features/hasStaticMethods.html|_$^static downloadPldb() {}|_$^2|_$^0|_$^-
Statements|_$^../features/hasStatements.html|_$^print "Hello PLDB"|_$^2|_$^0|_$^-
hasStatementTerminatorCharacter|_$^../features/hasStatementTerminatorCharacter.html|_$^|_$^2|_$^0|_$^-
Source Maps|_$^../features/hasSourceMaps.html|_$^{file: 'pldb.min.js',sources: ['pldb.js'], mappings: 'CAAC,IAAI,IAAM'}|_$^2|_$^0|_$^-
Runtime Guards|_$^../features/hasRunTimeGuards.html|_$^f x &#124; x > 0 = 1 &#124; otherwise = 0|_$^2|_$^0|_$^-
hasRequiredMainFunction|_$^../features/hasRequiredMainFunction.html|_$^|_$^2|_$^0|_$^-
References|_$^../features/hasReferences.html|_$^fn(objPointer)|_$^2|_$^0|_$^-
hasMemberVariables|_$^../features/hasMemberVariables.html|_$^|_$^2|_$^0|_$^-
Map Functions|_$^../features/hasMapFunctions.html|_$^pldbFiles.map(downloadFilesFn)|_$^2|_$^0|_$^-
Implicit Type Casting|_$^../features/hasImplicitTypeConversions.html|_$^console.log("hello " + 2)|_$^2|_$^0|_$^-
Implicit Arguments|_$^../features/hasImplicitArguments.html|_$^shout(implicit message: string)|_$^2|_$^0|_$^-
hasExports|_$^../features/hasExports.html|_$^|_$^2|_$^0|_$^-
hasDynamicSizedArrays|_$^../features/hasDynamicSizedArrays.html|_$^|_$^2|_$^0|_$^-
Decimals|_$^../features/hasDecimals.html|_$^0.80766866|_$^2|_$^0|_$^-
hasBuiltInRegex|_$^../features/hasBuiltInRegex.html|_$^|_$^2|_$^2|_$^-
hasBoundedCheckedArrays|_$^../features/hasBoundedCheckedArrays.html|_$^|_$^2|_$^0|_$^-
Binary Operators|_$^../features/hasBinaryOperators.html|_$^1 + 1|_$^2|_$^0|_$^-
hasArraySlicingSyntax|_$^../features/hasArraySlicingSyntax.html|_$^|_$^2|_$^0|_$^-
Algebraic Data Type|_$^../features/hasAlgebraicTypes.html|_$^garageContents = empty &#124; vehicle|_$^2|_$^0|_$^-
canReadCommandLineArgs|_$^../features/canReadCommandLineArgs.html|_$^|_$^2|_$^0|_$^-
Zippers|_$^../features/hasZippers.html|_$^pldbCursor.moveLeft()|_$^1|_$^0|_$^-
hasValueReturnedFunctions|_$^../features/hasValueReturnedFunctions.html|_$^|_$^1|_$^0|_$^-
hasTryCatch|_$^../features/hasTryCatch.html|_$^|_$^1|_$^2|_$^-
Triples|_$^../features/hasTriples.html|_$^Javascript isListedIn PLDB|_$^1|_$^0|_$^-
S-Expressions|_$^../features/hasSExpressions.html|_$^(+ 1 1)|_$^1|_$^3|_$^-
Refinement Types|_$^../features/hasRefinementTypes.html|_$^evenInt where int % 2 = 0|_$^1|_$^0|_$^-
Processor Registers|_$^../features/hasProcessorRegisters.html|_$^eax 2|_$^1|_$^1|_$^-
Pairs|_$^../features/hasPairs.html|_$^(pl . db)|_$^1|_$^0|_$^-
Monad|_$^../features/hasMonads.html|_$^g >>= f|_$^1|_$^0|_$^-
hasMethodOverloading|_$^../features/hasMethodOverloading.html|_$^|_$^1|_$^1|_$^-
Method Chaining|_$^../features/hasMethodChaining.html|_$^pldbFile.toString().length|_$^1|_$^0|_$^-
hasIds|_$^../features/hasIds.html|_$^|_$^1|_$^0|_$^-
hasDynamicTyping|_$^../features/hasDynamicTyping.html|_$^|_$^1|_$^0|_$^-
Clobs|_$^../features/hasClobs.html|_$^class PLDBFile {}|_$^1|_$^0|_$^-
hasBlobs|_$^../features/hasBlobs.html|_$^|_$^1|_$^1|_$^-
Abstract Types|_$^../features/hasAbstractTypes.html|_$^abstract class PLDBFile {}|_$^1|_$^2|_$^-
canUseQuestionMarksAsPartOfIdentifier|_$^../features/canUseQuestionMarksAsPartOfIdentifier.html|_$^|_$^1|_$^1|_$^-
